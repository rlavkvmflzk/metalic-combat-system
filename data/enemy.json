{
  "name": "에너미",
  "type": "_template",
  "img": "icons/svg/mystery-man.svg",
  "system": {
    "hidden": [
      {
        "name": "dmgdiebonus",
        "value": "0"
      },
      {
        "name": "dmgnumbonus",
        "value": "0"
      },
      {
        "name": "defnumbonus",
        "value": "0"
      },
      {
        "name": "defdiebonus",
        "value": "0"
      },
      {
        "name": "atknumbonus",
        "value": "0"
      },
      {
        "name": "atkdiebonus",
        "value": "0"
      },
      {
        "name": "slashdefbonus",
        "value": "0"
      },
      {
        "name": "piercedefbonus",
        "value": "0"
      },
      {
        "name": "bludgedefbonus",
        "value": "0"
      },
      {
        "name": "firedefbonus",
        "value": "0"
      },
      {
        "name": "icedefbonus",
        "value": "0"
      },
      {
        "name": "lightningdefbonus",
        "value": "0"
      },
      {
        "name": "lightdefbonus",
        "value": "0"
      },
      {
        "name": "darkdefbonus",
        "value": "0"
      },
      {
        "name": "slashbarbonus",
        "value": "0"
      },
      {
        "name": "piercebarbonus",
        "value": "0"
      },
      {
        "name": "bludgebarbonus",
        "value": "0"
      },
      {
        "name": "firebarbonus",
        "value": "0"
      },
      {
        "name": "icebarbonus",
        "value": "0"
      },
      {
        "name": "lightningbarbonus",
        "value": "0"
      },
      {
        "name": "lightbarbonus",
        "value": "0"
      },
      {
        "name": "darkbarbonus",
        "value": "0"
      },
      {
        "name": "critdmgdiebonus",
        "value": "2"
      },
      {
        "name": "critdmgnumbonus",
        "value": "0"
      },
      {
        "name": "atkcritmod",
        "value": "0"
      },
      {
        "name": "defcritmod",
        "value": "0"
      },
      {
        "name": "pumblemod",
        "value": "0"
      },
      {
        "name": "fpmaxbonus",
        "value": "0"
      },
      {
        "name": "hitbonus",
        "value": "0"
      },
      {
        "name": "evasionbonus",
        "value": "0"
      },
      {
        "name": "shellingbonus",
        "value": "0"
      },
      {
        "name": "probonus",
        "value": "0"
      },
      {
        "name": "apbonus",
        "value": "0"
      },
      {
        "name": "hpmaxbonus",
        "value": "0"
      },
      {
        "name": "enmaxbonus",
        "value": "0"
      },
      {
        "name": "initbonus",
        "value": "0"
      },
      {
        "name": "conbonus",
        "value": "0"
      },
      {
        "name": "reflecbonus",
        "value": "0"
      },
      {
        "name": "perbonus",
        "value": "0"
      },
      {
        "name": "intbonus",
        "value": "0"
      },
      {
        "name": "willbonus",
        "value": "0"
      },
      {
        "name": "luckbonus",
        "value": "0"
      },
      {
        "name": "break",
        "value": "0"
      },
      {
        "name": "type",
        "value": "guardian"
      },
      {
        "name": "atkbonus",
        "value": "0"
      },
      {
        "name": "speedbonus",
        "value": "0"
      }
    ],
    "header": {
      "contents": [
        {
          "key": "headinfo",
          "cssClass": "",
          "role": "0",
          "permission": "0",
          "tooltip": "",
          "visibilityFormula": "",
          "type": "panel",
          "contents": [
            {
              "key": "Basicinfo",
              "cssClass": "",
              "role": "0",
              "permission": "0",
              "tooltip": "이름",
              "visibilityFormula": "",
              "type": "panel",
              "contents": [
                {
                  "key": "playername",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "textField",
                  "label": "플레이어",
                  "defaultValue": "",
                  "size": "full-size",
                  "charList": "",
                  "autocomplete": ""
                },
                {
                  "key": "guardianname",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "textField",
                  "label": "이름",
                  "defaultValue": "",
                  "size": "full-size",
                  "charList": "",
                  "autocomplete": ""
                },
                {
                  "key": "pilotname",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "textField",
                  "label": "파일럿",
                  "defaultValue": "",
                  "size": "full-size",
                  "charList": "",
                  "autocomplete": ""
                },
                {
                  "key": "guardiatype",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "textField",
                  "label": "종류",
                  "defaultValue": "",
                  "size": "full-size",
                  "charList": "",
                  "autocomplete": ""
                },
                {
                  "key": "guardiansize",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "textField",
                  "label": "사이즈",
                  "defaultValue": "",
                  "size": "full-size",
                  "charList": "",
                  "autocomplete": ""
                }
              ],
              "flow": "grid-2",
              "align": "left",
              "collapsible": false,
              "defaultCollapsed": false,
              "title": "",
              "titleStyle": "default"
            },
            {
              "key": "class",
              "cssClass": "",
              "role": "0",
              "permission": "0",
              "tooltip": "",
              "visibilityFormula": "",
              "type": "panel",
              "contents": [
                {
                  "key": "",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "label",
                  "size": "full-size",
                  "icon": "",
                  "value": "에너미 레벨",
                  "prefix": "",
                  "suffix": "",
                  "rollMessage": "",
                  "altRollMessage": "",
                  "rollMessageToChat": true,
                  "altRollMessageToChat": true,
                  "style": "bold"
                },
                {
                  "key": "enemy",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "numberField",
                  "label": "",
                  "defaultValue": "",
                  "size": "full-size",
                  "allowDecimal": false,
                  "minVal": "",
                  "maxVal": "",
                  "allowRelative": false,
                  "showControls": false,
                  "controlsStyle": "hover",
                  "inputStyle": "text"
                }
              ],
              "flow": "grid-2",
              "align": "center",
              "collapsible": false,
              "defaultCollapsed": false,
              "title": "",
              "titleStyle": "default"
            },
            {
              "key": "attribute",
              "cssClass": "",
              "role": "0",
              "permission": "0",
              "tooltip": "",
              "visibilityFormula": "",
              "type": "panel",
              "contents": [
                {
                  "key": "",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "Healthroll",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "체력",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "%{\nconst valuename = \"체력\";\nconst value = `${convalue}$` || \"0\";\nconst valuebonus = `${conbonus}$` || \"0\";\n\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);\n}%",
                      "altRollMessage": "",
                      "rollMessageToChat": false,
                      "altRollMessageToChat": true,
                      "style": "button"
                    },
                    {
                      "key": "convalue",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "%{\nreturn Math.floor(${conbase}$/3);\n}%",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "bold"
                    },
                    {
                      "key": "conbase",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "${coninfut}$",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "label"
                    },
                    {
                      "key": "coninfut",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "numberField",
                      "label": "",
                      "defaultValue": "${fetchFromActor('${poilotname}$', \"con\")}$",
                      "size": "full-size",
                      "allowDecimal": false,
                      "minVal": "",
                      "maxVal": "",
                      "allowRelative": false,
                      "showControls": false,
                      "controlsStyle": "hover",
                      "inputStyle": "text"
                    }
                  ],
                  "flow": "vertical",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                },
                {
                  "key": "",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "reflecroll",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "반사",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "%{\nconst valuename = \"반사\";\nconst value = `${reflecvalue}$` || \"0\";\nconst valuebonus = `${reflecbonus}$` || \"0\";\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);\n}%",
                      "altRollMessage": "",
                      "rollMessageToChat": false,
                      "altRollMessageToChat": true,
                      "style": "button"
                    },
                    {
                      "key": "reflecvalue",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "%{\nreturn Math.floor(${reflecbase}$/3);\n}%",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "bold"
                    },
                    {
                      "key": "reflecbase",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "${reflecinfut}$",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "label"
                    },
                    {
                      "key": "reflecinfut",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "numberField",
                      "label": "",
                      "defaultValue": "${fetchFromActor('${poilotname}$', \"reflec\")}$",
                      "size": "full-size",
                      "allowDecimal": false,
                      "minVal": "",
                      "maxVal": "",
                      "allowRelative": false,
                      "showControls": false,
                      "controlsStyle": "hover",
                      "inputStyle": "text"
                    }
                  ],
                  "flow": "vertical",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                },
                {
                  "key": "",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "perroll",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "지각",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "%{\nconst valuename = \"지각\";\nconst value = `${pervalue}$` || \"0\";\nconst valuebonus = `${perbonus}$` || \"0\";\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);\n}%",
                      "altRollMessage": "",
                      "rollMessageToChat": false,
                      "altRollMessageToChat": true,
                      "style": "button"
                    },
                    {
                      "key": "pervalue",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "%{\nreturn Math.floor(${perbase}$/3);\n}%",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "bold"
                    },
                    {
                      "key": "perbase",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "${perinfut}$",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "label"
                    },
                    {
                      "key": "perinfut",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "numberField",
                      "label": "",
                      "defaultValue": "${fetchFromActor('${poilotname}$', \"per\")}$",
                      "size": "full-size",
                      "allowDecimal": false,
                      "minVal": "",
                      "maxVal": "",
                      "allowRelative": false,
                      "showControls": false,
                      "controlsStyle": "hover",
                      "inputStyle": "text"
                    }
                  ],
                  "flow": "vertical",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                },
                {
                  "key": "",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "actname1",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "공격력",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "bold"
                    },
                    {
                      "key": "atk",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "%{\nlet classAtk = 0;\nentity.items.forEach(item => {\n    if(item.system.props.classatk) {\n        classAtk += Number(item.system.props.classatk);\n    }\n});\n\nlet guardianAtk = 0;\nentity.items.forEach(item => {\n    if(item.system.props.isEquipped && item.system.props.guardianatk) {\n        guardianAtk += Number(item.system.props.guardianatk);\n    }\n});\n\nlet optionAtk = 0;\nentity.items.forEach(item => {\n    if(item.system.props.isEquipped && item.system.props.optionatk) {\n        optionAtk += Number(item.system.props.optionatk);\n    }\n});\n\nconst atkBonus = entity.system.props.atkbonus ? Number(entity.system.props.atkbonus) : 0;\nconst atkInfut = entity.system.props.atkinfut ? Number(entity.system.props.atkinfut) : 0;\n\nconst totalAtk = classAtk + guardianAtk + optionAtk + atkBonus + atkInfut;\n\nreturn totalAtk;\n}%",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "label"
                    },
                    {
                      "key": "atkinfut",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "numberField",
                      "label": "",
                      "defaultValue": "${fetchFromActor('${poilotname}$', \"atk\")}$",
                      "size": "full-size",
                      "allowDecimal": false,
                      "minVal": "",
                      "maxVal": "",
                      "allowRelative": false,
                      "showControls": false,
                      "controlsStyle": "hover",
                      "inputStyle": "text"
                    }
                  ],
                  "flow": "vertical",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                },
                {
                  "key": "",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "introll",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "이지",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "%{\nconst valuename = \"이지\";\nconst value = `${intvalue}$` || \"0\";\nconst valuebonus = `${intbonus}$` || \"0\";\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);\n}%",
                      "altRollMessage": "",
                      "rollMessageToChat": false,
                      "altRollMessageToChat": true,
                      "style": "button"
                    },
                    {
                      "key": "intvalue",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "%{\nreturn Math.floor(${intbase}$/3);\n}%",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "bold"
                    },
                    {
                      "key": "intbase",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "${intinfut}$",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "label"
                    },
                    {
                      "key": "intinfut",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "numberField",
                      "label": "",
                      "defaultValue": "${fetchFromActor('${poilotname}$', \"int\")}$",
                      "size": "full-size",
                      "allowDecimal": false,
                      "minVal": "",
                      "maxVal": "",
                      "allowRelative": false,
                      "showControls": false,
                      "controlsStyle": "hover",
                      "inputStyle": "text"
                    }
                  ],
                  "flow": "vertical",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                },
                {
                  "key": "",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "willroll",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "의지",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "%{\nconst valuename = \"의지\";\nconst value = `${willvalue}$` || \"0\";\nconst valuebonus = `${willbonus}$` || \"0\";\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);\n}%",
                      "altRollMessage": "",
                      "rollMessageToChat": false,
                      "altRollMessageToChat": true,
                      "style": "button"
                    },
                    {
                      "key": "willvalue",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "%{\nreturn Math.floor(${willbase}$/3);\n}%",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "bold"
                    },
                    {
                      "key": "willbase",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "${willinfut}$",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "label"
                    },
                    {
                      "key": "willinfut",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "numberField",
                      "label": "",
                      "defaultValue": "${fetchFromActor('${poilotname}$', \"will\")}$",
                      "size": "full-size",
                      "allowDecimal": false,
                      "minVal": "",
                      "maxVal": "",
                      "allowRelative": false,
                      "showControls": false,
                      "controlsStyle": "hover",
                      "inputStyle": "text"
                    }
                  ],
                  "flow": "vertical",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                },
                {
                  "key": "",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "luckroll",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "행운",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "%{\nconst valuename = \"의지\";\nconst value = `${luckvalue}$` || \"0\";\nconst valuebonus = `${luckbonus}$` || \"0\";\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);\n}%",
                      "altRollMessage": "",
                      "rollMessageToChat": false,
                      "altRollMessageToChat": true,
                      "style": "button"
                    },
                    {
                      "key": "luckvalue",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "%{\nreturn Math.floor(${luckbase}$/3);\n}%",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "bold"
                    },
                    {
                      "key": "luckbase",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "${luckinfut}$",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "label"
                    },
                    {
                      "key": "luckinfut",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "numberField",
                      "label": "",
                      "defaultValue": "${fetchFromActor('${poilotname}$', \"luck\")}$",
                      "size": "full-size",
                      "allowDecimal": false,
                      "minVal": "",
                      "maxVal": "",
                      "allowRelative": false,
                      "showControls": false,
                      "controlsStyle": "hover",
                      "inputStyle": "text"
                    }
                  ],
                  "flow": "vertical",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                },
                {
                  "key": "",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "actname2",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "textField",
                      "label": "",
                      "defaultValue": "기타1",
                      "size": "full-size",
                      "charList": "",
                      "autocomplete": ""
                    },
                    {
                      "key": "act1",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "numberField",
                      "label": "",
                      "defaultValue": "0",
                      "size": "full-size",
                      "allowDecimal": false,
                      "minVal": "",
                      "maxVal": "",
                      "allowRelative": false,
                      "showControls": false,
                      "controlsStyle": "hover",
                      "inputStyle": "text"
                    }
                  ],
                  "flow": "vertical",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                }
              ],
              "flow": "grid-4",
              "align": "center",
              "collapsible": false,
              "defaultCollapsed": false,
              "title": "",
              "titleStyle": "default"
            }
          ],
          "flow": "grid-3",
          "align": "center",
          "collapsible": false,
          "defaultCollapsed": false,
          "title": "",
          "titleStyle": "default"
        },
        {
          "key": "middleinfo",
          "cssClass": "",
          "role": "0",
          "permission": "0",
          "tooltip": "",
          "visibilityFormula": "",
          "type": "tabbedPanel",
          "contents": [
            {
              "key": "guadina",
              "cssClass": "",
              "role": "0",
              "permission": "0",
              "tooltip": "",
              "visibilityFormula": "",
              "type": "tab",
              "contents": [
                {
                  "key": "",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "combatvalue",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "panel",
                      "contents": [
                        {
                          "key": "hitroll",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "명중",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "%{const valuename = \"명중\";\nconst value = `${hit}$` || \"0\";\nconst valuebonus = `${hitbonus}$` || \"0\";\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);}%",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button"
                        },
                        {
                          "key": "evasionroll",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "회피",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "%{\nconst valuename = \"회피\";\nconst value = `${evasion}$` || \"0\";\nconst valuebonus = `${evasionbonus}$` || \"0\";\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);\n}%",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button"
                        },
                        {
                          "key": "hit",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "${hitinfut}$",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "label"
                        },
                        {
                          "key": "evasion",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "${evasioninfut}$",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "label"
                        },
                        {
                          "key": "hitinfut",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "numberField",
                          "label": "",
                          "defaultValue": "0",
                          "size": "full-size",
                          "allowDecimal": false,
                          "minVal": "",
                          "maxVal": "",
                          "allowRelative": false,
                          "showControls": false,
                          "controlsStyle": "hover",
                          "inputStyle": "text"
                        },
                        {
                          "key": "evasioninfut",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "textField",
                          "label": "",
                          "defaultValue": "0",
                          "size": "full-size",
                          "charList": "",
                          "autocomplete": ""
                        },
                        {
                          "key": "shellingroll",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "포격",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "%{\nconst valuename = \"포격\";\nconst value = `${shelling}$` || \"0\";\nconst valuebonus = `${shellingbonus}$` || \"0\";\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);\n}%",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button"
                        },
                        {
                          "key": "proroll",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "방벽",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "%{\nconst valuename = \"방벽\";\nconst value = `${pro}$` || \"0\";\nconst valuebonus = `${probonus}$` || \"0\";\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);\n}%",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button"
                        },
                        {
                          "key": "shelling",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "${shellinginfut}$",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "label"
                        },
                        {
                          "key": "pro",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "${proinfut}$",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "label"
                        },
                        {
                          "key": "shellinginfut",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "numberField",
                          "label": "",
                          "defaultValue": "0",
                          "size": "full-size",
                          "allowDecimal": false,
                          "minVal": "",
                          "maxVal": "",
                          "allowRelative": false,
                          "showControls": false,
                          "controlsStyle": "hover",
                          "inputStyle": "text"
                        },
                        {
                          "key": "proinfut",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "numberField",
                          "label": "",
                          "defaultValue": "0",
                          "size": "full-size",
                          "allowDecimal": false,
                          "minVal": "",
                          "maxVal": "",
                          "allowRelative": false,
                          "showControls": false,
                          "controlsStyle": "hover",
                          "inputStyle": "text"
                        },
                        {
                          "key": "initroll",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "행동",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "%{const valuename = \"행동\";\nconst value = `${init}$` || \"0\";\nconst valuebonus = `${initbonus}$` || \"0\";\n\nnew Dialog({\n    title: `${valuename} 판정`,\n    content: `\n        <form style=\"\n            background: #f0f0f0;\n            padding: 15px;\n            border-radius: 8px;\">\n            <div class=\"form-group\" style=\"\n                background: white;\n                padding: 12px;\n                border-radius: 6px;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n                margin-bottom: 15px;\">\n                <label style=\"\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #4a4a4a;\n                    font-weight: bold;\">수정치:</label>\n                <input type=\"number\" \n                       name=\"modifier\" \n                       value=\"0\" \n                       style=\"\n                           width: 100%;\n                           padding: 8px;\n                           border: 1px solid #ddd;\n                           border-radius: 4px;\n                           background: white;\">\n            </div>\n        </form>`,\n    buttons: {\n        roll: {\n            icon: '<i class=\"fas fa-dice\"></i>',\n            label: \"굴리기\",\n            callback: (html) => {\n                const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                let roll = new Roll(`2d6+${value}+${valuebonus}+${modifier}`);\n\n                roll.evaluate({async: true}).then(r => {\n                    if (game.dice3d) {\n                        game.dice3d.showForRoll(r, game.user, true);\n                    }\n                    const diceResults = r.terms\n                        .filter(term => term.faces === 6)\n                        .map(term => term.results.map(result => `\n                            <div class=\"roll die\" style=\"\n                                width: 24px;\n                                height: 24px;\n                                background: white;\n                                border: 2px solid #4a4a4a;\n                                border-radius: 6px;\n                                display: flex;\n                                align-items: center;\n                                justify-content: center;\n                                font-weight: bold;\n                                font-size: var(--font-size-12);\n                                box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n                                ${result.result}\n                            </div>`).join('')).join('');\n\n                    let modifierText = '';\n                    if (modifier !== 0) {\n                        modifierText = ` (상황 수정치: ${modifier >= 0 ? '+' : ''}${modifier})`;\n                    }\n\n                    let bonusText = '';\n                    if (valuebonus >= 1) {\n                        bonusText = ` (수정치: ${valuebonus >= 0 ? '+' : ''}${valuebonus})`;\n                    }\n\n                    const content = `\n                        <div class=\"diceroll\" style=\"\n                            background: #f0f0f0;\n                            border-radius: 10px;\n                            padding: 8px;\n                            margin-bottom: 8px;\n                            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                            \n                            <div style=\"\n                                display: flex;\n                                align-items: center;\n                                gap: 8px;\n                                background: white;\n                                padding: 6px 10px;\n                                border-radius: 8px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                <h3 style=\"\n                                    margin: 0;\n                                    font-size: var(--font-size-14);\n                                    color: #4a4a4a;\">\n                                    ${valuename} 굴림\n                                </h3>\n                            </div>\n\n                            <div style=\"\n                                background: white;\n                                border-radius: 8px;\n                                padding: 8px;\n                                margin-top: 6px;\n                                box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n                                \n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    margin-bottom: 4px;\">\n                                    <span style=\"\n                                        font-size: var(--font-size-12);\n                                        color: #666;\">\n                                        2d6 + ${value}${modifierText}${bonusText}\n                                    </span>\n                                </div>\n\n                                <div style=\"\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                    background: #f8f9fa;\n                                    border-radius: 6px;\n                                    padding: 4px 8px;\">\n                                    <div style=\"display: flex; gap: 4px;\">\n                                        ${diceResults}\n                                    </div>\n                                    <span style=\"\n                                        font-size: var(--font-size-16);\n                                        font-weight: bold;\n                                        padding: 2px 8px;\n                                        background: #4a4a4a;\n                                        color: white;\n                                        border-radius: 4px;\">\n                                        ${r.total}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>`;\n\n                    const messageData = {\n                        user: game.user.id,\n                        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n                        content: content,\n                        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                        roll: r\n                    };\n\n                    ChatMessage.create(messageData);\n                });\n            }\n        },\n        cancel: {\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"취소\"\n        }\n    },\n    default: \"roll\"\n}).render(true);}%",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "순서",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "%{let initValue = `${init}$`;\n\n// 채팅 메시지로 순서 표시\nlet content = `\n<div style=\"\n    background: #f0f0f0;\n    border-radius: 10px;\n    padding: 8px;\n    margin-bottom: 8px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n    \n    <div style=\"\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        background: white;\n        padding: 6px 10px;\n        border-radius: 8px;\n        box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n        <div style=\"\n            display: flex;\n            align-items: center;\n            gap: 8px;\">\n            <i class=\"fas fa-stopwatch\" style=\"color: #4a4a4a;\"></i>\n            <h3 style=\"\n                margin: 0;\n                font-size: var(--font-size-14);\n                color: #4a4a4a;\">\n                순서\n            </h3>\n        </div>\n    </div>\n\n    <div style=\"\n        background: white;\n        border-radius: 8px;\n        padding: 12px;\n        margin-top: 6px;\n        box-shadow: 0 2px 5px rgba(0,0,0,0.05);\">\n        \n        <div style=\"\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            gap: 12px;\">\n            \n            <div style=\"\n                display: flex;\n                align-items: center;\n                gap: 8px;\">\n                <span style=\"\n                    font-size: var(--font-size-14);\n                    color: #4a4a4a;\n                    font-weight: bold;\">\n                    결과\n                </span>\n                <span style=\"\n                    background: #4a4a4a;\n                    color: white;\n                    padding: 4px 12px;\n                    border-radius: 6px;\n                    font-size: var(--font-size-16);\n                    font-weight: bold;\n                    min-width: 40px;\n                    text-align: center;\">\n                    ${initValue}\n                </span>\n            </div>\n            \n            <div style=\"\n                display: flex;\n                align-items: center;\n                gap: 4px;\">\n                ${Array.from({ length: Math.min(initValue, 10) }, (_, i) => `\n                    <div style=\"\n                        width: 8px;\n                        height: ${8 + (i * 2)}px;\n                        background: ${i < initValue ? '#4a4a4a' : '#e9ecef'};\n                        border-radius: 2px;\">\n                    </div>\n                `).join('')}\n            </div>\n        </div>\n        \n        <div style=\"\n            margin-top: 8px;\n            text-align: center;\n            font-size: var(--font-size-12);\n            color: #666;\">\n            ${getInitiativeDescription(initValue)}\n        </div>\n    </div>\n</div>\n`;\n\n// 순서값에 따른 설명 반환 함수\nfunction getInitiativeDescription(init) {\n    if (init >= 8) return \"최우선 행동\";\n    if (init >= 6) return \"빠른 행동\";\n    if (init >= 4) return \"일반 행동\";\n    if (init >= 2) return \"느린 행동\";\n    return \"매우 느린 행동\";\n}\n\nChatMessage.create({\n    content: content,\n    speaker: ChatMessage.getSpeaker()\n});}%",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button"
                        },
                        {
                          "key": "init",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "${initinfut}$",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "label"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "이동력",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "bold"
                        },
                        {
                          "key": "initinfut",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "textField",
                          "label": "",
                          "defaultValue": "0",
                          "size": "full-size",
                          "charList": "",
                          "autocomplete": ""
                        },
                        {
                          "key": "speed",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "textField",
                          "label": "",
                          "defaultValue": "",
                          "size": "full-size",
                          "charList": "",
                          "autocomplete": ""
                        }
                      ],
                      "flow": "grid-2",
                      "align": "center",
                      "collapsible": false,
                      "defaultCollapsed": false,
                      "title": "",
                      "titleStyle": "default"
                    },
                    {
                      "key": "fps",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "panel",
                      "contents": [
                        {
                          "key": "breakbutton",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "브레이크",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "%{const fpvalue = `${fpvalue}$`;\nconst hpvalue = `${hpvalue}$`;\nconst will = `${will}$`;\n\n// List of effects to remove if present\nconst effectsToRemove = [\"낭패\", \"마비\", \"방심\", \"실속\", \"중압\", \"증오\", \"침식\", \"파워다운\", \"포박\"];\n\n(async () => {\n    try {\n        // 먼저 토큰을 가져옵니다.\n        let token = canvas.tokens.controlled[0];\n        if (!token) {\n            const tokens = canvas.tokens.placeables.filter(t => t.actor);\n            token = tokens[0];\n        }\n\n        const actor = token?.actor;\n        if (!actor) {\n            ui.notifications.warn(\"시트에서 사용할 캐릭터 또는 선택된 토큰이 없습니다.\");\n            return;\n        }\n\n        // will 수치만큼 회복\n        if (fpvalue == 0) {\n            await actor.update({ \"system.props.fpvalue\": will });\n        } else if (hpvalue == 0) {\n            await actor.update({ \"system.props.hpvalue\": will });\n        }\n\n        // Remove specified effects if they are active on the token\n        for (let effectName of effectsToRemove) {\n            const effect = token.actor.effects.find(e => e.label === effectName);\n            if (effect) {\n                await effect.delete();\n                ui.notifications.info(`${effectName} 상태가 제거되었습니다.`);\n            }\n        }\n\n        // Apply \"브레이크\" effect and play Sequencer animations\n        if (token) {\n            await applyEffect(token, \"브레이크\");\n\n            // 시퀸서 효과 재생\n            new Sequence()\n                .effect()\n                .file(\"jb2a.impact.011.orange\")\n                .atLocation(token)\n                .play();\n\n            new Sequence()\n                .effect()\n                .file(\"jb2a.impact.ground_crack.orange.01\")\n                .atLocation(token)\n                .belowTokens() // 토큰 아래에 그라운드 효과 생성\n                .play();\n\n            new Sequence()\n                .effect()\n                .file(\"jb2a.static_electricity.03.orange\")\n                .atLocation(token)\n                .scale(0.5)\n                .play();\n        } else {\n            ui.notifications.warn(\"토큰을 찾을 수 없습니다.\");\n        }\n    } catch (error) {\n        console.error(\"브레이크 상태 적용 중 오류 발생:\", error);\n        ui.notifications.error(\"브레이크 상태 적용 중 오류가 발생했습니다.\");\n    }\n})();\n\nasync function applyEffect(token, effectName) {\n    if (effectName.toLowerCase().trim() === '없음') {\n        return;\n    }\n\n    const statusId = effectName.toLowerCase().trim();\n    const statusEffect = CONFIG.statusEffects.find(e =>\n        e.id === statusId ||\n        e.label.toLowerCase() === statusId\n    );\n\n    if (!statusEffect) {\n        ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n        return;\n    }\n\n    try {\n        const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n        if (!hasEffect) {\n            await token.toggleEffect(statusEffect);\n            ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n        } else {\n            ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n        }\n    } catch (error) {\n        ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n        console.error(error);\n    }\n}\n}%\n",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "panel",
                          "contents": [
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "추가FP",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "최종FP",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "현재FP",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "fpinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "fpmax",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${fpinfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "fpvalue",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "${fpmax}$",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "기본AP",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "최종AP",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "현재AP",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "apinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "apmax",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${apinfut+apbonus}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "apvalue",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            }
                          ],
                          "flow": "grid-3",
                          "align": "center",
                          "collapsible": false,
                          "defaultCollapsed": false,
                          "title": "",
                          "titleStyle": "default"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "label"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "panel",
                          "contents": [
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "추가HP",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "최종HP",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "현재HP",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "hpinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "hpmax",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${hpinfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "hpvalue",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "${hpmax}$",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            }
                          ],
                          "flow": "grid-3",
                          "align": "center",
                          "collapsible": false,
                          "defaultCollapsed": false,
                          "title": "",
                          "titleStyle": "default"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "label"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "panel",
                          "contents": [
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "추가EN",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "최종EN",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "현재EN",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "eninfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "enmax",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${eninfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "envalue",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "${enmax}$",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            }
                          ],
                          "flow": "grid-3",
                          "align": "center",
                          "collapsible": false,
                          "defaultCollapsed": false,
                          "title": "",
                          "titleStyle": "default"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "label"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "panel",
                          "contents": [
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "방어 크리",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "defcrit",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "12",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "펌블",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "pumble",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "textField",
                              "label": "",
                              "defaultValue": "2",
                              "size": "full-size",
                              "charList": "",
                              "autocomplete": ""
                            }
                          ],
                          "flow": "grid-2",
                          "align": "center",
                          "collapsible": false,
                          "defaultCollapsed": false,
                          "title": "",
                          "titleStyle": "default"
                        }
                      ],
                      "flow": "vertical",
                      "align": "center",
                      "collapsible": false,
                      "defaultCollapsed": false,
                      "title": "",
                      "titleStyle": "default"
                    },
                    {
                      "key": "protec",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "panel",
                      "contents": [
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "panel",
                          "contents": [
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "추가 방어",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "최종 방어",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "기본 배리어",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "최종 배리어",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "참",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "slashdefinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totalslashdef",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${slashdefinfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "slashbar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totalslashbar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${slashbar+slashbarbonus}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "관",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "piercedefinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totalpiercedef",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${piercedefinfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "piercebar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totalpiercebar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${piercebar+piercebarbonus}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "타",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "bludgedefinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totalbludgedef",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${bludgedefinfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "bludgebar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totalbludgebar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${bludgebar+bludgebarbonus}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "화",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "firedefinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totalfiredef",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${firedefinfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "firebar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totalfirebar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${firebar+firebarbonus}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "빙",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "icedefinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totalicedef",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${icedefinfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "icebar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totalicebar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${icebar+icebarbonus}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "뇌",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "lightningdefinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totallightningdef",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${lightningdefinfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "lightningbar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totallightningbar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${lightningbar+lightningbarbonus}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "광",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "lightdefinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totallightdef",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${lightdefinfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "lightbar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totallightbar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${lightbar+lightbarbonus}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "암",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "bold"
                            },
                            {
                              "key": "darkdefinfut",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totaldarkdef",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${darkdefinfut}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            },
                            {
                              "key": "darkbar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "numberField",
                              "label": "",
                              "defaultValue": "0",
                              "size": "full-size",
                              "allowDecimal": false,
                              "minVal": "",
                              "maxVal": "",
                              "allowRelative": false,
                              "showControls": false,
                              "controlsStyle": "hover",
                              "inputStyle": "text"
                            },
                            {
                              "key": "totaldarkbar",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "label",
                              "size": "full-size",
                              "icon": "",
                              "value": "${darkbar+darkbarbonus}$",
                              "prefix": "",
                              "suffix": "",
                              "rollMessage": "",
                              "altRollMessage": "",
                              "rollMessageToChat": true,
                              "altRollMessageToChat": true,
                              "style": "label"
                            }
                          ],
                          "flow": "grid-5",
                          "align": "center",
                          "collapsible": false,
                          "defaultCollapsed": false,
                          "title": "",
                          "titleStyle": "default"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "label"
                        },
                        {
                          "key": "",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "변신/합체",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "%{async function guardianTransformation() {\n    const selectedToken = canvas.tokens.controlled[0];\n    if (!selectedToken) {\n        ui.notifications.error(\"변신할 토큰을 선택해주세요.\");\n        return;\n    }\n\n    const guardians = game.actors.filter(actor => \n        actor.ownership[game.user.id] >= CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER && \n        actor.system?.props?.type === \"guardian\"\n    );\n\n    if (guardians.length === 0) {\n        ui.notifications.warn(\"사용 가능한 가디언이 없습니다.\");\n        return;\n    }\n\n    new Dialog({\n        title: \"가디언 변신\",\n        content: `\n                <style>\n                .guardian-transform-dialog .window-content {\n                    position: relative; /* 상대 위치 설정 */\n                    padding-bottom: 60px; /* 버튼 영역만큼 패딩 */\n                }\n                    \n                .guardian-transform-dialog .dialog-buttons {\n                    position: absolute; /* fixed 대신 absolute 사용 */\n                    bottom: 0;\n                    left: 0;\n                    right: 0;\n                    padding: 8px;\n                    background: rgba(240, 240, 240, 0.95);\n                    border-top: 1px solid #ddd;\n                    box-shadow: 0 -2px 10px rgba(0,0,0,0.1);\n                    z-index: 1000;\n                    display: flex;\n                    justify-content: center;\n                    gap: 10px;\n                    backdrop-filter: blur(5px);\n                }\n                \n                .guardian-transform-dialog .dialog-button {\n                    background: #4a4a4a;\n                    color: white;\n                    padding: 6px 12px;\n                    border-radius: 4px;\n                    border: none;\n                    font-size: 14px;\n                    line-height: 20px;\n                    width: 120px;\n                    height: 36px;\n                    cursor: pointer;\n                    display: flex;\n                    align-items: center;\n                    gap: 5px;\n                    justify-content: center;\n                    white-space: nowrap;\n                }\n\n                .guardian-transform-dialog .dialog-button.transform-button {\n                    background: #4a90e2;\n                }\n\n                .guardian-transform-dialog .dialog-button:hover {\n                    background: #666;\n                }\n\n                .guardian-transform-dialog .dialog-button.transform-button:hover {\n                    background: #357abd;\n                }\n\n                .guardian-list {\n                    display: grid;\n                    grid-template-columns: repeat(2, 1fr);\n                    gap: 15px;\n                    padding: 15px;\n                    max-height: calc(100vh - 200px);\n                    overflow-y: auto;\n                    padding-bottom: 60px; /* 버튼 영역만큼 패딩 */\n                }\n\n                .guardian-option {\n                    background: white;\n                    border-radius: 8px;\n                    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n                    overflow: hidden;\n                    cursor: pointer;\n                    transition: all 0.2s ease;\n                }\n\n                .guardian-option:hover {\n                    transform: translateY(-2px);\n                    box-shadow: 0 4px 10px rgba(0,0,0,0.15);\n                }\n\n                .guardian-option.selected {\n                    outline: 3px solid #4a90e2;\n                }\n\n                .guardian-image {\n                    width: 100%;\n                    height: 200px;\n                    object-fit: cover;\n                    border-bottom: 1px solid #eee;\n                }\n\n                .guardian-info {\n                    padding: 12px;\n                }\n\n                .guardian-name {\n                    font-size: 1.2em;\n                    font-weight: bold;\n                    margin-bottom: 8px;\n                    color: #2c3e50;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                }\n\n                .guardian-size {\n                    font-size: 0.8em;\n                    padding: 2px 6px;\n                    background: #e9ecef;\n                    border-radius: 4px;\n                    color: #666;\n                }\n\n                .guardian-stats {\n                    display: grid;\n                    grid-template-columns: repeat(2, 1fr);\n                    gap: 8px;\n                    margin-bottom: 8px;\n                }\n\n                .stat-item {\n                    display: flex;\n                    align-items: center;\n                    gap: 5px;\n                    background: #f8f9fa;\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                    font-size: 0.9em;\n                }\n\n                .stat-item.fp {\n                    color: #2c7be5;\n                }\n\n                .stat-item.hp {\n                    color: #dc3545;\n                }\n\n                .stat-item.en {\n                    color: #198754;\n                }\n\n                .stat-item.speed {\n                    color: #fd7e14;\n                }\n\n                .detail-button {\n                    width: 100%;\n                    padding: 6px;\n                    background: #4a90e2;\n                    color: white;\n                    border: none;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    transition: background 0.2s;\n                    font-size: 13px;\n                }\n\n                .detail-button:hover {\n                    background: #357abd;\n                }\n\n                .guardian-details {\n                    display: none;\n                    background: #f8f9fa;\n                    margin-top: 8px;\n                    padding: 8px;\n                    border-radius: 4px;\n                }\n\n                .detail-grid {\n                    display: grid;\n                    grid-template-columns: repeat(2, 1fr);\n                    gap: 4px;\n                }\n\n                .detail-item {\n                    display: flex;\n                    align-items: center;\n                    gap: 5px;\n                    font-size: 0.85em;\n                    color: #666;\n                    padding: 4px;\n                }\n            </style>\n            <div class=\"guardian-list\">\n                ${guardians.map((guardian, i) => `\n                    <div class=\"guardian-option\" data-guardian-id=\"${guardian.id}\">\n                        <img class=\"guardian-image\" src=\"${guardian.img}\" alt=\"${guardian.name}\">\n                        <div class=\"guardian-info\">\n                            <div class=\"guardian-name\">\n                                ${guardian.name}\n                                <span class=\"guardian-size\">${guardian.system.props.guardiansize || 'M'}</span>\n                            </div>\n                            <div class=\"guardian-stats\">\n                                <div class=\"stat-item fp\">\n                                    <i class=\"fas fa-heart\"></i>\n                                    <span>FP: ${guardian.system.props.fpmax}</span>\n                                </div>\n                                <div class=\"stat-item hp\">\n                                    <i class=\"fas fa-heart-broken\"></i>\n                                    <span>HP: ${guardian.system.props.hpmax}</span>\n                                </div>\n                                <div class=\"stat-item en\">\n                                    <i class=\"fas fa-bolt\"></i>\n                                    <span>EN: ${guardian.system.props.enmax}</span>\n                                </div>\n                            <div class=\"stat-item speed\">\n                                <i class=\"fas fa-walking\"></i>\n                                <span>이동: ${guardian.system.props.speed || 0}</span>\n                            </div>\n                            </div>\n                            <button class=\"detail-button\" data-guardian-id=\"${guardian.id}\">\n                                상세 정보 보기\n                            </button>\n                            <div class=\"guardian-details\" id=\"details-${guardian.id}\">\n                                <div class=\"detail-grid\">\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-bullseye\"></i>\n                                        <span>명중: ${guardian.system.props.hit || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-running\"></i>\n                                        <span>회피: ${guardian.system.props.evasion || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-shield-alt\"></i>\n                                        <span>방벽: ${guardian.system.props.pro || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-forward\"></i>\n                                        <span>행동: ${guardian.system.props.init || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-crosshairs\"></i>\n                                        <span>포격: ${guardian.system.props.shelling || 0}</span>\n                                    </div>\n                                </div>\n                                ${guardian.system.props.memo ? `\n                                    <div class=\"guardian-memo\" style=\"margin-top: 8px; font-size: 0.9em; padding: 4px;\">\n                                        <i class=\"fas fa-sticky-note\"></i>\n                                        <span>${guardian.system.props.memo}</span>\n                                    </div>\n                                ` : ''}\n                            </div>\n                        </div>\n                    </div>\n                `).join('')}\n            </div>\n        `,\n        buttons: {\n            transform: {\n                icon: '<i class=\"fas fa-robot\"></i>',\n                label: \"변신/합체\",\n                callback: async (html) => {\n                    const selectedGuardian = html.find('.guardian-option.selected');\n                    if (!selectedGuardian.length) {\n                        ui.notifications.warn(\"변신할 가디언을 선택해주세요.\");\n                        return;\n                    }\n            \n                    const guardianId = selectedGuardian.data('guardianId');\n                    // TransformationManager 대신 game.MetalicCombatSystem.TransformationManager 사용\n                    await game.modules.get('metalic-combat-system').api.TransformationManager.performTransformation(selectedToken, guardianId);\n                }\n            },\n            cancel: {\n                icon: '<i class=\"fas fa-times\"></i>',\n                label: \"취소\"\n            }\n        },\n        render: html => {\n            html.find('.guardian-option').click(ev => {\n                html.find('.guardian-option').removeClass('selected');\n                $(ev.currentTarget).addClass('selected');\n            });\n\n            html.find('.detail-button').click(ev => {\n                ev.stopPropagation();\n                const guardianId = ev.currentTarget.dataset.guardianId;\n                const details = html.find(`#details-${guardianId}`);\n                details.slideToggle(200);\n                \n                const button = $(ev.currentTarget);\n                button.text(details.is(':visible') ? '상세 정보 닫기' : '상세 정보 보기');\n            });\n        }\n    }, {\n        width: 800,\n        height: 800,\n        resizable: true,\n        classes: ['guardian-transform-dialog']\n    }).render(true);\n}\n\nguardianTransformation();}%",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button"
                        }
                      ],
                      "flow": "vertical",
                      "align": "center",
                      "collapsible": false,
                      "defaultCollapsed": false,
                      "title": "",
                      "titleStyle": "default"
                    }
                  ],
                  "flow": "grid-3",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                },
                {
                  "key": "itembox",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "tabbedPanel",
                      "contents": [
                        {
                          "key": "weapontab",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "tab",
                          "contents": [
                            {
                              "key": "waeapon",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "itemContainer",
                              "contents": [],
                              "rowLayout": [
                                {
                                  "key": "part",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.part}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "부위"
                                },
                                {
                                  "key": "weaponrange",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.weaponrange}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.weaponrange}$`;\n    const weaponTarget = `${item.weapontarget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%\n",
                                  "altRollMessage": "",
                                  "rollMessageToChat": false,
                                  "altRollMessageToChat": true,
                                  "style": "button",
                                  "align": "left",
                                  "colName": "사정거리"
                                },
                                {
                                  "key": "weapontarget",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.weapontarget}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.weaponrange}$`;\n    const weaponTarget = `${item.weapontarget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%\n",
                                  "altRollMessage": "",
                                  "rollMessageToChat": false,
                                  "altRollMessageToChat": true,
                                  "style": "button",
                                  "align": "left",
                                  "colName": "대상"
                                },
                                {
                                  "key": "weaponcost",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.weaponcost}$\n\n",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "대가"
                                },
                                {
                                  "key": "weaponbullets",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.bullets}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "탄수"
                                },
                                {
                                  "key": "weapontype",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.weapontype}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "피해유형"
                                },
                                {
                                  "key": "weaponfinaldmg",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.weaponfinaldmg}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "주공격력"
                                },
                                {
                                  "key": "sidedamage",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "",
                                  "prefix": "${item.sidedamage}$",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "부공격력"
                                },
                                {
                                  "key": "weaponcrit",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.weaponcrit}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "크리티컬"
                                },
                                {
                                  "key": "isEquipped",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.isEquipped? '✓' : '☐'}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "${setPropertyInEntity('item', 'isEquipped', 'item.isEquipped == true ? false : true')}$",
                                  "altRollMessage": "",
                                  "rollMessageToChat": false,
                                  "altRollMessageToChat": true,
                                  "style": "button",
                                  "align": "left",
                                  "colName": "장착"
                                },
                                {
                                  "key": "weaponroll",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "사용",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "%{const MCS = window.MetalicCombatSystem;\n    if (!MCS) {\n        ui.notifications.error(\"전투 시스템을 찾을 수 없습니다. 모듈이 활성화되어 있는지 확인해주세요.\");\n        return;\n    }\n\n    const debugMode = true;\n\n    if (!debugMode) {\n        console.log = function() {}; // console.log 비활성화\n    }\n    \n    // 필요한 아이템 정보들을 변수로 선언\n    let itemName = `${item.name}$`;\n    let itemWeaponCrit = `${item.weaponcrit}$`;\n    let itemWeaponType = `${item.weapontype}$`;\n    let itemWeaponRange = `${item.weaponrange}$`;\n    let itemWeaponCost = `${item.weaponcost}$`;\n    let itemWeaponFinalDmg = `${item.weaponfinaldmg}$`;\n    let sidedamage = `${item.sidedamage}$`;\n    let itemWeaponEffect = `${item.weaponeffect}$`;\n    let dmgdiebonus = `${dmgdiebonus}$`;\n    let dmgnumbonus = `${dmgnumbonus}$`;\n    let atkcritMod = `${atkcritmod}$`;\n    let attackPart = `${item.part}$`;\n    let itemWeaponFx = `${item.weaponfx}$`;\n    let itemWeaponTarget = `${item.weapontarget}$`;\n    let atk = `${atk}$`;\n    let itemSniping = `${item.sniping}$`;\n    let itemArmorIgnore = `${item.armorignore}$`;\n    let weaponkind = `${item.weaponkind}$`;\n    \n    console.log('아이템 정보:', {\n        itemName, itemWeaponCrit, itemWeaponType, itemWeaponRange, \n        itemWeaponCost, itemWeaponFinalDmg, itemWeaponEffect,\n        dmgdiebonus, dmgnumbonus, itemWeaponFx, atkcritMod, attackPart,\n        weaponkind\n    });\n    \n    const attackers = canvas.tokens.controlled;\n    if (attackers.length === 0) {\n        ui.notifications.warn(\"공격할 토큰을 선택해주세요.\");\n        return;\n    }\n    \n    console.log('선택된 공격자 토큰:', attackers);\n    \n    let selectedToken = canvas.tokens.controlled[0];\n    if (!selectedToken) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n    \n    console.log('선택된 토큰:', selectedToken);\n    \n    let actor = selectedToken.actor;\n    const targets = Array.from(game.user.targets);\n    const targetIds = targets.length > 0 ? targets.map(t => t.id) : [];\n    \n    console.log('선택된 액터:', actor);\n    console.log('대상 토큰:', targets);\n    console.log('대상 ID:', targetIds);\n    \n    // 상태 효과 적용 함수\n    async function applyEffect(token, effectName) {\n        console.log(`상태 효과 적용 시작 - 토큰: ${token.name}, 효과: ${effectName}`);\n        if (effectName.toLowerCase().trim() === '없음') {\n            return;\n        }\n         \n        const statusId = effectName.toLowerCase().trim();\n        const statusEffect = CONFIG.statusEffects.find(e => \n            e.id === statusId || \n            e.label.toLowerCase() === statusId\n        );\n        \n        if (!statusEffect) {\n            ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n            console.log(`상태 효과 적용 실패 - 효과를 찾을 수 없음: ${effectName}`);\n            return;\n        }\n    \n        try {\n            const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n            if (!hasEffect) {\n                await token.toggleEffect(statusEffect);\n                ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n                console.log(`상태 효과 적용 완료 - 토큰: ${token.name}, 효과: ${effectName}`);\n            } else {\n                ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n                console.log(`상태 효과 적용 건너뜀 - 이미 적용됨: ${effectName}`);\n            }\n        } catch (error) {\n            ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n            console.error(`상태 효과 적용 중 오류 발생 - 토큰: ${token.name}, 효과: ${effectName}`, error);\n        }\n    }\n    \n    // 비용 처리 함수\n    async function handleCost() {\n        console.log('비용 처리 시작');\n        \n        let cost = itemWeaponCost.toLowerCase().replace(/\\s+/g, '');\n        console.log('처리할 비용 문자열:', cost);\n        \n        // 비용 패턴 정규식 수정 - 탄수 패턴 추가\n        const costPattern = /(\\d+)?(?:fp|hp|en|탄수)(\\d+)?/g;\n        const effectPattern = /[^,]+/g;\n        \n        // 모든 비용 패턴 찾기\n        let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n        console.log('찾은 모든 비용 패턴:', allCosts);\n    \n        // 비용 유형별로 분리하고 계산\n        let fpTotal = 0;\n        let hpTotal = 0;\n        let enTotal = 0;\n        let bulletTotal = 0;\n        \n        allCosts.forEach(match => {\n            const type = match[2];  // fp, hp, en, 탄수 중 하나\n            const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n            const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n            const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n            \n            switch(type) {\n                case 'fp': fpTotal += value; break;\n                case 'hp': hpTotal += value; break;\n                case 'en': enTotal += value; break;\n                case '탄수': bulletTotal += value; break;\n            }\n        });\n    \n        // 현재 무기 아이템 찾기\n        const weaponItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n        if (!weaponItem) {\n            console.error('무기 아이템을 찾을 수 없습니다:', itemName);\n            return false;\n        }\n    \n        console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n    \n        // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n        let remainingText = cost;\n        allCosts.forEach(match => {\n            remainingText = remainingText.replace(match[0], ',');\n        });\n    \n        // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n        let otherEffects = remainingText\n            .split(',')\n            .map(effect => effect.trim())\n            .filter(effect => effect !== '');\n    \n        console.log('추출된 효과:', otherEffects);\n    \n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"비용 소비 확인\",\n                content: `\n                    <style>\n                        .cost-dialog {\n                            background: #f0f0f0;\n                            padding: 15px;\n                            border-radius: 8px;\n                        }\n                        .cost-list {\n                            background: white;\n                            padding: 10px 15px;\n                            border-radius: 6px;\n                            margin: 10px 0;\n                            box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                        }\n                        .cost-item {\n                            display: flex;\n                            align-items: center;\n                            gap: 8px;\n                            padding: 4px 0;\n                        }\n                        .cost-label {\n                            display: inline-flex;\n                            align-items: center;\n                            padding: 2px 6px;\n                            border-radius: 4px;\n                            font-size: 12px;\n                            font-weight: bold;\n                        }\n                        .fp-label { color: #2c7be5; }\n                        .hp-label { color: #dc3545; }\n                        .en-label { color: #6c757d; }\n                        .bullet-label { color: #ffc107; }\n                        .effect-label { color: #198754; }\n                        .consume-option {\n                            background: #f8f9fa;\n                            padding: 8px;\n                            border-radius: 6px;\n                            margin-top: 10px;\n                            display: flex;\n                            align-items: center;\n                            gap: 10px;\n                        }\n                    </style>\n                    <div class=\"cost-dialog\">\n                        <div class=\"cost-list\">\n                            ${fpTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label fp-label\">FP</span>\n                                    <span>${fpTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${hpTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label hp-label\">HP</span>\n                                    <span>${hpTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${enTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label en-label\">EN</span>\n                                    <span>${enTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${bulletTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label bullet-label\">탄수</span>\n                                    <span>${bulletTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${otherEffects.length > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label effect-label\">효과</span>\n                                    <span>${otherEffects.join(\", \")}</span>\n                                </div>\n                            ` : \"\"}\n                        </div>\n                        <div class=\"consume-option\">\n                            <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                            <label for=\"consumeCost\">비용 소비</label>\n                        </div>\n                    </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            console.log('비용 소비 확인:', consumeCost);\n                            \n                            if (consumeCost) {\n                                // FP 소비\n                                if (fpTotal > 0) {\n                                    let fpValue = actor.system.props.fpvalue;\n                                    await actor.update({ \n                                        \"system.props.fpvalue\": fpValue - fpTotal\n                                    });\n                                    console.log('FP 소비:', fpTotal);\n                                }\n                                \n                                // HP 소비\n                                if (hpTotal > 0) {\n                                    let hpValue = actor.system.props.hpvalue;\n                                    await actor.update({ \n                                        \"system.props.hpvalue\": hpValue - hpTotal\n                                    });\n                                    console.log('HP 소비:', hpTotal);\n                                }\n                                \n                                // EN 소비\n                                if (enTotal > 0) {\n                                    let enValue = actor.system.props.envalue;\n                                    await actor.update({ \n                                        \"system.props.envalue\": enValue - enTotal\n                                    });\n                                    console.log('EN 소비:', enTotal);\n                                }\n    \n                                // 탄수 소비\n                                if (bulletTotal > 0 && weaponItem) {\n                                    let currentBullets = weaponItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await weaponItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                                \n                                // 기타 효과 적용\n                                for (let effect of otherEffects) {\n                                    if (effect) {  // 빈 문자열이 아닌 경우에만 적용\n                                        await applyEffect(attackers[0], effect);\n                                    }\n                                }\n                            }\n                            console.log('비용 처리 완료');\n                            resolve(true);\n                        }\n                    },\n                    cancel: {\n                        icon: '<i class=\"fas fa-times\"></i>',\n                        label: \"취소\",\n                        callback: () => {\n                            console.log('비용 처리 취소');\n                            resolve(false);\n                        }\n                    }\n                },\n                default: \"confirm\",\n                width: 400\n            }).render(true);\n        });\n    }\n    \n    // 아이템 정보 카드 표시\n    async function displayItemCard() {\n        console.log('아이템 정보 카드 표시 시작');\n        \n        let content = `\n        <div class=\"diceroll\">\n            <div class=\"item-card\" style=\"background-color: #f9f9f9; border: 1px solid #ddd; border-radius: 5px; margin-bottom: 10px;\">\n                <div style=\"background-color: #e9e9e9; padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">\n                    <h3 style=\"margin: 0;\">${itemName} (${itemWeaponCrit})</h3>\n                </div>\n                <div style=\"padding: 8px;\">\n                    <div style=\"text-align: center; margin-bottom: 8px;\">\n                        ${attackPart} / ${itemWeaponType} / ${itemWeaponRange} / ${itemWeaponCost} / ${weaponkind}\n                    </div>\n                    <div style=\"margin-top: 8px;\">\n                        <strong>효과:</strong><br>\n                        ${itemWeaponEffect}\n                    </div>\n                </div>\n            </div>\n        </div>`;\n    \n        await ChatMessage.create({\n            author: game.user.id,\n            speaker: ChatMessage.getSpeaker({ actor: actor }),\n            content: content\n        });\n        \n        console.log('아이템 정보 카드 표시 완료');\n    }\n    \n    // 실행 순서 시작\n    (async () => {\n        console.log('매크로 실행 시작');\n        \n        // 1. 특기 선택 먼저 실행\n        const selectedSpecialties = await MCS.CombatManager._showEffectSelectionDialog(null, actor);\n        if (selectedSpecialties?.length) {\n            const totalCost = MCS.CombatManager._calculateEffectsCost(selectedSpecialties);\n            if (!await MCS.CombatManager._handleEffectsCost(totalCost, actor, selectedSpecialties)) {\n                return;\n            }\n            await MCS.CombatManager._activateEffects(actor, selectedSpecialties);\n        }\n    \n        // 2. 비용 처리\n        const costConfirmed = await handleCost();\n        if (!costConfirmed) {\n            console.log('비용 처리 취소로 인해 매크로 실행 종료');\n            return;\n        }\n    \n        // 3. 무장 정보 객체 생성\n        const weaponData = {\n            name: itemName,\n            weaponcrit: itemWeaponCrit,\n            weapontype: itemWeaponType,\n            weaponrange: itemWeaponRange,\n            weaponcost: itemWeaponCost,\n            weaponfinaldmg: itemWeaponFinalDmg,\n            sidedamage: sidedamage,\n            weaponkind: weaponkind,\n            weaponeffect: itemWeaponEffect,\n            weapontarget: itemWeaponTarget,\n            weaponfx: itemWeaponFx,\n            part: attackPart,\n            dmgdiebonus: dmgdiebonus,\n            dmgnumbonus: dmgnumbonus,\n            atk: atk,\n            sniping: itemSniping,\n            armorignore: itemArmorIgnore,\n        };\n        console.log(\"웨폰데이터 :\",weaponData);\n    \n        // 4. 명중 판정 다이얼로그\n        new Dialog({\n            title: \"명중 판정\",\n            content: `\n                <style>\n    .attack-dialog {\n        background: #f5f5f5;\n        padding: 15px;\n        border-radius: 8px;\n    }\n    .attack-dialog .form-group {\n        background: white;\n        padding: 12px;\n        border-radius: 6px;\n        box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n        margin-bottom: 15px;\n    }\n    .attack-dialog .form-group label {\n        display: block;\n        margin-bottom: 8px;\n        color: #4a4a4a;\n        font-weight: bold;\n    }\n    .attack-dialog .form-group select,\n    .attack-dialog .form-group input {\n        width: 100%;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background: white;\n        height: 38px;\n        font-size: 14px;\n    }\n    .attack-dialog .form-group select:focus,\n    .attack-dialog .form-group input:focus {\n        border-color: #4a4a4a;\n        box-shadow: 0 0 0 2px rgba(74,74,74,0.2);\n        outline: none;\n    }\n                    }\n                </style>\n                <div class=\"attack-dialog\">\n                    <div class=\"form-group\">\n                        <label>판정 능력치:</label>\n                        <select name=\"attackType\">\n                            <option value=\"hit\" ${attackPart?.includes('백병') ? 'selected' : ''}>명중</option>\n                            <option value=\"shelling\" ${attackPart?.includes('원격') ? 'selected' : ''}>포격</option>\n                            <option value=\"evasion\">회피</option>\n                            <option value=\"pro\">방벽</option>\n                            <option value=\"init\">행동</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>수정치:</label>\n                        <input type=\"number\" name=\"modifier\" value=\"0\">\n                    </div>\n                </div>\n            `,\n            buttons: {\n                roll: {\n                    icon: '<i class=\"fas fa-dice\"></i>',\n                    label: \"공격\",\n                    callback: async (html) => {\n                        const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                        const selectedAttackType = html.find('[name=\"attackType\"]').val();\n                        \n                        const attackerIds = attackers.map(a => a.id);\n                        \n                        if (targetIds.length === 0) {\n                            await MCS.CombatManager.performSimpleAttack(attackerIds, selectedAttackType, modifier);\n                        } else {\n                            await MCS.CombatManager.performMultiAttack(\n                                attackerIds, \n                                targetIds, \n                                selectedAttackType, \n                                modifier,\n                                weaponData.weaponcrit,\n                                actor.system.props.atkcritmod || '0',\n                                weaponData.part,\n                                weaponData,\n                                selectedSpecialties\n                            );\n                        }\n                        if (selectedSpecialties?.length) {\n                            // 자동 데미지 굴림일 때만 여기서 특기 해제\n                            if (game.settings.get(\"metalic-combat-system\", \"autoDamageRoll\")) {\n                                await MCS.CombatManager._deactivateEffects(actor, selectedSpecialties);\n                            }\n                        }\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\"\n                }\n            },\n            default: \"roll\",\n            width: 400\n        }).render(true);\n    })();}%",
                                  "altRollMessage": "",
                                  "rollMessageToChat": false,
                                  "altRollMessageToChat": false,
                                  "style": "button",
                                  "align": "left",
                                  "colName": ""
                                }
                              ],
                              "head": false,
                              "deleteWarning": false,
                              "title": "",
                              "hideEmpty": false,
                              "sortOption": "manual",
                              "headDisplay": true,
                              "showDelete": true,
                              "statusIcon": false,
                              "nameAlign": "left",
                              "nameLabel": "이름",
                              "templateFilter": [
                                "MM7gLtk9hJiYZc8f"
                              ],
                              "itemFilterFormula": "",
                              "sortPredicates": []
                            }
                          ],
                          "name": "무장"
                        },
                        {
                          "key": "specialtytab",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "tab",
                          "contents": [
                            {
                              "key": "specialty",
                              "cssClass": "",
                              "role": "0",
                              "permission": "0",
                              "tooltip": "",
                              "visibilityFormula": "",
                              "type": "itemContainer",
                              "contents": [],
                              "rowLayout": [
                                {
                                  "key": "slv",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.slv}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "레벨"
                                },
                                {
                                  "key": "stype",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.stype}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "종류"
                                },
                                {
                                  "key": "stiming",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.stiming}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "타이밍"
                                },
                                {
                                  "key": "srange",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.srange}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.srange}$`;\n    const weaponTarget = `${item.starget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%",
                                  "altRollMessage": "",
                                  "rollMessageToChat": false,
                                  "altRollMessageToChat": true,
                                  "style": "button",
                                  "align": "left",
                                  "colName": "사정거리"
                                },
                                {
                                  "key": "starget",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.starget}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.srange}$`;\n    const weaponTarget = `${item.starget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%",
                                  "altRollMessage": "",
                                  "rollMessageToChat": false,
                                  "altRollMessageToChat": true,
                                  "style": "button",
                                  "align": "left",
                                  "colName": "대상"
                                },
                                {
                                  "key": "scost",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.scost}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "대가"
                                },
                                {
                                  "key": "bullets",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.bullets}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "탄수"
                                },
                                {
                                  "key": "limit",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "${item.limit}$",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "",
                                  "altRollMessage": "",
                                  "rollMessageToChat": true,
                                  "altRollMessageToChat": true,
                                  "style": "label",
                                  "align": "left",
                                  "colName": "사용횟수"
                                },
                                {
                                  "key": "sroll",
                                  "cssClass": "",
                                  "role": "0",
                                  "permission": "0",
                                  "tooltip": "",
                                  "visibilityFormula": "",
                                  "type": "label",
                                  "size": "full-size",
                                  "icon": "",
                                  "value": "사용",
                                  "prefix": "",
                                  "suffix": "",
                                  "rollMessage": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemLevel = `${item.slv}$`;\nlet itemTarget = `${item.starget}$`;\nlet itemRange = `${item.srange}$`;\nlet itemCost = `${item.scost}$`;\nlet itemTiming = `${item.stiming}$`;\nlet itemEffect = `${item.seffect}$`;\nlet modifierName = `${item.name}$`;\nlet itemLimit  = `${item.limit}$`;\nlet maxLimit  = `${item.maxlimit}$`;\n\n// 상태 효과 적용 함수를 먼저 정의\nasync function applyEffect(token, effectName) {\n    // '없음'인 경우 그냥 리턴\n    if (effectName.toLowerCase().trim() === '없음') {\n        return;\n    }\n\n    const statusId = effectName.toLowerCase().trim();\n    const statusEffect = CONFIG.statusEffects.find(e => \n        e.id === statusId || \n        e.label.toLowerCase() === statusId\n    );\n    \n    if (!statusEffect) {\n        ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n        return;\n    }\n    \n    try {\n        const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n        if (!hasEffect) {\n            await token.toggleEffect(statusEffect);\n            ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n        } else {\n            ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n        }\n    } catch (error) {\n        ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n        console.error(error);\n    }\n}\n\n// 비용 처리 함수\nasync function handleCost() {\n    console.log('비용 처리 시작');\n    \n    let cost = itemCost.toLowerCase().replace(/\\s+/g, '');\n    console.log('처리할 비용 문자열:', cost);\n    \n    // 모든 비용 패턴 찾기 (탄수 패턴 추가)\n    let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n    console.log('찾은 모든 비용 패턴:', allCosts);\n\n    // 비용 유형별로 분리하고 계산\n    let fpTotal = 0;\n    let hpTotal = 0;\n    let enTotal = 0;\n    let bulletTotal = 0;\n    \n    allCosts.forEach(match => {\n        const type = match[2];  // fp, hp, en, 탄수 중 하나\n        const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n        const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n        const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n        \n        switch(type) {\n            case 'fp': fpTotal += value; break;\n            case 'hp': hpTotal += value; break;\n            case 'en': enTotal += value; break;\n            case '탄수': bulletTotal += value; break;\n        }\n    });\n\n    // 무기 아이템 찾기\n    let weaponItems = actor.items.filter(i => \n        i.system?.props?.type === \"weapon\" && \n        i.system?.props?.bullets !== undefined\n    );\n\n    console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n\n    // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n    let remainingText = cost;\n    allCosts.forEach(match => {\n        remainingText = remainingText.replace(match[0], ',');\n    });\n\n    // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n    let otherEffects = remainingText\n        .split(',')\n        .map(effect => effect.trim())\n        .filter(effect => effect !== '');\n\n    console.log('추출된 효과:', otherEffects);\n\n    const item = actor.items.find(i => i.name === itemName);\n    const hasToggleableEffects = item?.system.modifiers\n        ?.some(m => m.conditionalGroup);\n\n    // 사용횟수 확인\n    const maxLimit = item?.system?.props?.maxlimit;\n    const hasLimit = maxLimit > 0 && itemLimit && itemLimit !== '0' && itemLimit !== '$';\n    const currentLimit = hasLimit ? parseInt(itemLimit.replace('$', '')) : 0;\n\n    return new Promise((resolve) => {\n        new Dialog({\n            title: \"비용 소비 확인\",\n            content: `\n                <style>\n                    .cost-dialog {\n                        background: #f0f0f0;\n                        padding: 15px;\n                        border-radius: 8px;\n                    }\n                    .cost-list {\n                        background: white;\n                        padding: 10px 15px;\n                        border-radius: 6px;\n                        margin: 10px 0;\n                        box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                    }\n                    .cost-item {\n                        display: flex;\n                        align-items: center;\n                        gap: 8px;\n                        padding: 4px 0;\n                    }\n                    .cost-label {\n                        display: inline-flex;\n                        align-items: center;\n                        padding: 2px 6px;\n                        border-radius: 4px;\n                        font-size: 12px;\n                        font-weight: bold;\n                    }\n                    .fp-label { color: #2c7be5; }\n                    .hp-label { color: #dc3545; }\n                    .en-label { color: #6c757d; }\n                    .bullet-label { color: #ffc107; }\n                    .effect-label { color: #198754; }\n                    .consume-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .toggle-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-value {\n                        color: #666;\n                        font-size: 12px;\n                        margin-left: auto;\n                    }                        \n                </style>\n                <div class=\"cost-dialog\">\n                    <div class=\"cost-list\">\n                        ${fpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label fp-label\">FP</span>\n                                <span>${fpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${hpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label hp-label\">HP</span>\n                                <span>${hpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${enTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label en-label\">EN</span>\n                                <span>${enTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${bulletTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label bullet-label\">탄수</span>\n                                <span>${bulletTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${otherEffects.length > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label effect-label\">효과</span>\n                                <span>${otherEffects.join(\", \")}</span>\n                            </div>\n                        ` : \"\"}\n                    </div>\n                    <div class=\"consume-option\">\n                        <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                        <label for=\"consumeCost\">비용 소비</label>\n                    </div>\n                    ${hasToggleableEffects ? `\n                        <div class=\"toggle-option\">\n                            <input type=\"checkbox\" id=\"toggleEffects\" name=\"toggleEffects\" checked>\n                            <label for=\"toggleEffects\">특기 효과 토글</label>\n                        </div>\n                    ` : ''}\n                    ${hasLimit ? `\n                        <div class=\"limit-option\">\n                            <input type=\"checkbox\" id=\"consumeLimit\" name=\"consumeLimit\" checked>\n                            <label for=\"consumeLimit\">사용횟수 소비</label>\n                            <span class=\"limit-value\">현재: ${currentLimit}/${maxLimit}회</span>\n                        </div>\n                    ` : ''}\n                </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            let toggleEffects = hasToggleableEffects && \n                                html.find('[name=\"toggleEffects\"]').is(\":checked\");\n                            let consumeLimit = hasLimit && \n                                html.find('[name=\"consumeLimit\"]').is(\":checked\");\n    \n                            if (consumeLimit) {\n                                    // maxLimit 확인 추가\n                                const specialtyItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n                                const maxLimit = specialtyItem?.system?.props?.maxlimit;\n                                    \n                                if (maxLimit > 0) {  // maxLimit이 1 이상인 경우만 처리\n                                    // 사용횟수가 0 이하인 경우 경고\n                                    if (currentLimit <= 0) {\n                                        ui.notifications.warn(\"남은 사용횟수가 없습니다!\");\n                                        return resolve(false);\n                                    }\n                                \n                                    await specialtyItem.update({\n                                        \"system.props.limit\": currentLimit - 1\n                                    });\n                                    console.log('사용횟수 감소:', currentLimit - 1);\n                                }\n                            }\n                        \n                        if (consumeCost) {\n                            // FP 소비\n                            if (fpTotal > 0) {\n                                let fpValue = actor.system.props.fpvalue;\n                                await actor.update({ \n                                    \"system.props.fpvalue\": fpValue - fpTotal\n                                });\n                                console.log('FP 소비:', fpTotal);\n                            }\n                            \n                            // HP 소비\n                            if (hpTotal > 0) {\n                                let hpValue = actor.system.props.hpvalue;\n                                await actor.update({ \n                                    \"system.props.hpvalue\": hpValue - hpTotal\n                                });\n                                console.log('HP 소비:', hpTotal);\n                            }\n                            \n                            // EN 소비\n                            if (enTotal > 0) {\n                                let enValue = actor.system.props.envalue;\n                                await actor.update({ \n                                    \"system.props.envalue\": enValue - enTotal\n                                });\n                                console.log('EN 소비:', enTotal);\n                            }\n\n                            // 탄수 소비\n                            if (bulletTotal > 0) {\n                                const specialtyItem = actor.items.find(i => i.name === itemName);\n                                if (specialtyItem) {\n                                    const currentBullets = specialtyItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await specialtyItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                            }\n                            \n                            // 기타 효과 적용\n                            for (let effect of otherEffects) {\n                                if (effect) {\n                                    await applyEffect(selectedToken, effect);\n                                }\n                            }\n                        }\n\n                        if (toggleEffects) {\n                            await toggleItemEffects();\n                        }\n\n                        resolve(true);\n\n                        let content = `\n                            <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n                                <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n                                    <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                                        ${itemName}\n                                    </h3>\n                                    <span style=\"background:#e9ecef;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#4a4a4a\">\n                                        LV.${itemLevel}\n                                    </span>\n                                </div>\n\n                                <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTarget}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemRange}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemCost}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTiming}\n                                    </span>\n                                </div>\n\n                                ${itemEffect ? `\n                                    <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                                        <strong>효과:</strong> ${itemEffect}\n                                    </div>\n                                ` : ''}\n                            </div>`;\n\n                        let chatData = {\n                            content: content,\n                            speaker: ChatMessage.getSpeaker({ actor: actor })\n                        };\n\n                        await ChatMessage.create(chatData);\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\",\n                    callback: () => {\n                        console.log('비용 처리 취소');\n                        resolve(false);\n                    }\n                }\n            },\n            default: \"confirm\",\n            width: 400\n        }).render(true);\n    });\n}\n\nconst toggleItemEffects = async () => {\n    const item = actor.items.find(i => i.name === itemName);\n    if (!item) {\n        ui.notifications.warn(`${itemName}을(를) 찾을 수 없습니다.`);\n        return;\n    }\n    \n    const modifierGroups = new Set(\n        item.system.modifiers\n            .map(m => m.conditionalGroup)\n            .filter(group => group)\n    );\n\n    // 토글할 상태가 없는 경우 조용히 리턴\n    if (modifierGroups.size === 0) {\n        return;\n    }\n\n    let activeGroups = actor.system.activeConditionalModifierGroups || [];\n    const allGroupsActive = Array.from(modifierGroups)\n        .every(group => activeGroups.includes(group));\n\n    try {\n        if (allGroupsActive) {\n            activeGroups = activeGroups.filter(group => !modifierGroups.has(group));\n            ui.notifications.info(`${itemName}의 효과가 비활성화되었습니다.`);\n        } else {\n            modifierGroups.forEach(group => {\n                if (!activeGroups.includes(group)) {\n                    activeGroups.push(group);\n                }\n            });\n            ui.notifications.info(`${itemName}의 효과가 활성화되었습니다.`);\n        }\n        await actor.update({\n            \"system.activeConditionalModifierGroups\": activeGroups\n        });\n    } catch (error) {\n        console.error(\"효과 토글 중 오류 발생:\", error);\n        ui.notifications.error(\"효과 토글 중 오류가 발생했습니다.\");\n    }\n};\n\n// 토큰 선택 확인\nlet selectedToken = canvas.tokens.controlled[0];\nif (!selectedToken) {\n    ui.notifications.warn(\"토큰을 선택해주세요.\");\n    return;\n}\n\nlet actor = selectedToken.actor;\n\n// 비용 처리 실행\nhandleCost();\n}%",
                                  "altRollMessage": "",
                                  "rollMessageToChat": false,
                                  "altRollMessageToChat": true,
                                  "style": "button",
                                  "align": "left",
                                  "colName": ""
                                }
                              ],
                              "head": false,
                              "deleteWarning": false,
                              "title": "",
                              "hideEmpty": false,
                              "sortOption": "manual",
                              "headDisplay": true,
                              "showDelete": true,
                              "statusIcon": false,
                              "nameAlign": "left",
                              "nameLabel": "이름",
                              "templateFilter": [
                                "xL5PDDgxvo1pkkeh"
                              ],
                              "itemFilterFormula": "",
                              "sortPredicates": []
                            }
                          ],
                          "name": "특기"
                        }
                      ]
                    },
                    {
                      "key": "bless",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "itemContainer",
                      "contents": [],
                      "rowLayout": [
                        {
                          "key": "btarget",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "${item.btarget}$",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponTarget = `${item.btarget}$`;\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button",
                          "align": "left",
                          "colName": "대상"
                        },
                        {
                          "key": "btiming",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "${item.btiming}$",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "",
                          "altRollMessage": "",
                          "rollMessageToChat": true,
                          "altRollMessageToChat": true,
                          "style": "label",
                          "align": "left",
                          "colName": "타이밍"
                        },
                        {
                          "key": "blessuse",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "사용",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemTiming = `${item.btiming}$`;\nlet itemTarget = `${item.btarget}$`;\nlet itemEffect = `${item.beffect}$`;\n\n// 토큰 선택 확인\nlet selectedToken = canvas.tokens.controlled[0];\nif (!selectedToken) {\n    ui.notifications.warn(\"토큰을 선택해주세요.\");\n    return;\n}\n\nlet actor = selectedToken.actor;\n\nconst toggleItemEffects = async () => {\n    const item = actor.items.find(i => i.name === itemName);\n    if (!item) {\n        ui.notifications.warn(`${itemName}을(를) 찾을 수 없습니다.`);\n        return;\n    }\n    \n    const modifierGroups = new Set(\n        item.system.modifiers\n            .map(m => m.conditionalGroup)\n            .filter(group => group)\n    );\n\n    if (modifierGroups.size === 0) return;\n\n    let activeGroups = actor.system.activeConditionalModifierGroups || [];\n    const allGroupsActive = Array.from(modifierGroups)\n        .every(group => activeGroups.includes(group));\n\n    try {\n        if (allGroupsActive) {\n            activeGroups = activeGroups.filter(group => !modifierGroups.has(group));\n            ui.notifications.info(`${itemName}의 효과가 비활성화되었습니다.`);\n        } else {\n            modifierGroups.forEach(group => {\n                if (!activeGroups.includes(group)) {\n                    activeGroups.push(group);\n                }\n            });\n            ui.notifications.info(`${itemName}의 효과가 활성화되었습니다.`);\n        }\n        await actor.update({\n            \"system.activeConditionalModifierGroups\": activeGroups\n        });\n    } catch (error) {\n        console.error(\"효과 토글 중 오류 발생:\", error);\n        ui.notifications.error(\"효과 토글 중 오류가 발생했습니다.\");\n    }\n};\n\n// 효과 토글 가능 여부 확인\nconst item = actor.items.find(i => i.name === itemName);\nconst hasToggleableEffects = item?.system.modifiers\n    ?.some(m => m.conditionalGroup);\n\n// 토글 가능한 효과가 있는 경우에만 다이얼로그 표시\nif (hasToggleableEffects) {\n    return new Promise((resolve) => {\n        new Dialog({\n            title: \"기본 행동 사용\",\n            content: `\n                <style>\n                    .toggle-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                </style>\n                <div class=\"toggle-option\">\n                    <input type=\"checkbox\" id=\"toggleEffects\" name=\"toggleEffects\" checked>\n                    <label for=\"toggleEffects\">특기 효과 토글</label>\n                </div>`,\n            buttons: {\n                confirm: {\n                    icon: '<i class=\"fas fa-check\"></i>',\n                    label: \"사용\",\n                    callback: async (html) => {\n                        let toggleEffects = html.find('[name=\"toggleEffects\"]').is(\":checked\");\n                        if (toggleEffects) {\n                            await toggleItemEffects();\n                        }\n\n                        let content = `\n                            <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n                                <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n                                    <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                                        ${itemName}\n                                    </h3>\n                                </div>\n                                <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTiming}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTarget}\n                                    </span>\n                                </div>\n                                ${itemEffect ? `\n                                    <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                                        <strong>효과:</strong> ${itemEffect}\n                                    </div>\n                                ` : ''}\n                            </div>`;\n\n                        let chatData = {\n                            content: content,\n                            speaker: ChatMessage.getSpeaker({ actor: actor })\n                        };\n\n                        await ChatMessage.create(chatData);\n                        resolve(true);\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\",\n                    callback: () => resolve(false)\n                }\n            },\n            default: \"confirm\",\n            width: 300\n        }).render(true);\n    });\n} else {\n    // 토글 가능한 효과가 없는 경우 바로 채팅 메시지 생성\n    let content = `\n        <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n            <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n                <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                    ${itemName}\n                </h3>\n            </div>\n            <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n                <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                    ${itemTiming}\n                </span>\n                <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                    ${itemTarget}\n                </span>\n            </div>\n            ${itemEffect ? `\n                <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                    <strong>효과:</strong> ${itemEffect}\n                </div>\n            ` : ''}\n        </div>`;\n\n    let chatData = {\n        content: content,\n        speaker: ChatMessage.getSpeaker({ actor: actor })\n    };\n\n    return ChatMessage.create(chatData);\n}\n}%",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button",
                          "align": "left",
                          "colName": ""
                        },
                        {
                          "key": "use",
                          "cssClass": "",
                          "role": "0",
                          "permission": "0",
                          "tooltip": "",
                          "visibilityFormula": "",
                          "type": "label",
                          "size": "full-size",
                          "icon": "",
                          "value": "${item.use ? '✓' : '☐'}$",
                          "prefix": "",
                          "suffix": "",
                          "rollMessage": "${setPropertyInEntity('item', 'use', 'item.use == true ? false : true')}$",
                          "altRollMessage": "",
                          "rollMessageToChat": false,
                          "altRollMessageToChat": true,
                          "style": "button",
                          "align": "left",
                          "colName": ""
                        }
                      ],
                      "head": false,
                      "deleteWarning": false,
                      "title": "가호",
                      "hideEmpty": false,
                      "sortOption": "manual",
                      "headDisplay": true,
                      "showDelete": true,
                      "statusIcon": false,
                      "nameAlign": "left",
                      "nameLabel": "이름",
                      "templateFilter": [
                        "e95RJR7TAIMXAu8S"
                      ],
                      "itemFilterFormula": "",
                      "sortPredicates": []
                    }
                  ],
                  "flow": "vertical",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                }
              ],
              "name": "가디언"
            },
            {
              "key": "memo",
              "cssClass": "",
              "role": "0",
              "permission": "0",
              "tooltip": "",
              "visibilityFormula": "",
              "type": "tab",
              "contents": [
                {
                  "key": "guardiannl",
                  "cssClass": "",
                  "role": "0",
                  "permission": "0",
                  "tooltip": "",
                  "visibilityFormula": "",
                  "type": "panel",
                  "contents": [
                    {
                      "key": "",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "가디언 외형",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "bold"
                    },
                    {
                      "key": "",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "label",
                      "size": "full-size",
                      "icon": "",
                      "value": "가디언 설정",
                      "prefix": "",
                      "suffix": "",
                      "rollMessage": "",
                      "altRollMessage": "",
                      "rollMessageToChat": true,
                      "altRollMessageToChat": true,
                      "style": "bold"
                    },
                    {
                      "key": "appearance",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "textArea",
                      "label": "",
                      "defaultValue": "",
                      "size": "full-size",
                      "style": "dialog"
                    },
                    {
                      "key": "guardiansetting",
                      "cssClass": "",
                      "role": "0",
                      "permission": "0",
                      "tooltip": "",
                      "visibilityFormula": "",
                      "type": "textArea",
                      "label": "",
                      "defaultValue": "",
                      "size": "full-size",
                      "style": "dialog"
                    }
                  ],
                  "flow": "grid-2",
                  "align": "center",
                  "collapsible": false,
                  "defaultCollapsed": false,
                  "title": "",
                  "titleStyle": "default"
                }
              ],
              "name": "메모"
            }
          ]
        },
        {
          "key": "",
          "cssClass": "",
          "role": "0",
          "permission": "0",
          "tooltip": "",
          "visibilityFormula": "",
          "type": "panel",
          "contents": [
            {
              "key": "",
              "cssClass": "",
              "role": "0",
              "permission": "0",
              "tooltip": "",
              "visibilityFormula": "",
              "type": "label",
              "size": "full-size",
              "icon": "",
              "value": "액티브 효과",
              "prefix": "",
              "suffix": "",
              "rollMessage": "",
              "altRollMessage": "",
              "rollMessageToChat": true,
              "altRollMessageToChat": true,
              "style": "bold"
            },
            {
              "key": "activeEffects",
              "cssClass": "",
              "role": "0",
              "permission": "0",
              "tooltip": "",
              "visibilityFormula": "",
              "type": "conditionalModifierList",
              "contents": [],
              "rowLayout": [],
              "head": true,
              "deleteWarning": false,
              "headDisplay": true,
              "infoDisplay": true,
              "selectionLabel": "Selected",
              "selectionAlign": "left",
              "groupLabel": "Group",
              "groupAlign": "left",
              "groupFilter": [],
              "groupFilterFormula": ""
            }
          ],
          "flow": "vertical",
          "align": "center",
          "collapsible": false,
          "defaultCollapsed": false,
          "title": "",
          "titleStyle": "default"
        }
      ],
      "key": "custom_header",
      "cssClass": "",
      "role": 0,
      "permission": 0,
      "tooltip": "",
      "visibilityFormula": "",
      "type": "panel",
      "flow": "vertical",
      "align": "",
      "collapsible": false,
      "defaultCollapsed": true,
      "title": "",
      "titleStyle": "default"
    },
    "body": {
      "contents": [],
      "key": "custom_body",
      "cssClass": "",
      "role": 0,
      "permission": 0,
      "tooltip": "",
      "visibilityFormula": "",
      "type": "panel",
      "flow": "vertical",
      "align": "",
      "collapsible": false,
      "defaultCollapsed": true,
      "title": "",
      "titleStyle": "default"
    },
    "display": {
      "width": "1200",
      "height": "800",
      "fix_size": false,
      "pp_width": "64",
      "pp_height": "64"
    },
    "attributeBar": {},
    "activeEffects": {
      "dead": [],
      "unconscious": [],
      "sleep": [],
      "stun": [],
      "prone": [],
      "restrain": [],
      "paralysis": [],
      "fly": [],
      "blind": [],
      "deaf": [],
      "silence": [],
      "fear": [],
      "burning": [],
      "frozen": [],
      "shock": [],
      "corrode": [],
      "bleeding": [],
      "disease": [],
      "poison": [],
      "curse": [],
      "regen": [],
      "degen": [],
      "hover": [],
      "burrow": [],
      "upgrade": [],
      "downgrade": [],
      "invisible": [],
      "target": [],
      "eye": [],
      "bless": [],
      "fireShield": [],
      "coldShield": [],
      "magicShield": [],
      "holyShield": [],
      "KKu51jMai0h49wAk": [],
      "1LImdFBpjk0luIUu": [],
      "CsFX4cz5kQOudiYc": [],
      "lzleFtPJQF92gzsv": [],
      "AXrlCgbC8Lu31xeU": [],
      "cLKOuzRY9Iq2YGF0": [],
      "YWxrosYN2ttPxXZX": [],
      "BxK5YY4WxUodBlpz": [],
      "wkf9I1ZpDz54jcnx": [],
      "ZPzDsMd2DOqerRfw": [],
      "fp9Qgv2x0xrjV8sD": [],
      "XGuivrrqo4FjbVRW": [],
      "wJSV8KvvH6u4isHe": [],
      "f0uTsEM10LOCVFXW": [],
      "FqIkoGyJwZnALPVe": [],
      "eksOUZbBAbEj1VA9": [],
      "Rl7Wj9QAQxBQIe6a": []
    },
    "activeConditionalModifierGroups": [],
    "templateSystemUniqueVersion": 1240332676,
    "props": {
      "guardianlv": "1",
      "linkagelv1": "2"
    }
  },
  "prototypeToken": {
    "name": "에너미",
    "displayName": 0,
    "actorLink": false,
    "appendNumber": false,
    "prependAdjective": false,
    "width": 1,
    "height": 1,
    "texture": {
      "src": "icons/svg/mystery-man.svg",
      "anchorX": 0.5,
      "anchorY": 0.5,
      "offsetX": 0,
      "offsetY": 0,
      "fit": "contain",
      "scaleX": 1,
      "scaleY": 1,
      "rotation": 0,
      "tint": "#ffffff",
      "alphaThreshold": 0.75
    },
    "hexagonalShape": 0,
    "lockRotation": false,
    "rotation": 0,
    "alpha": 1,
    "disposition": -1,
    "displayBars": 0,
    "bar1": {
      "attribute": null
    },
    "bar2": {
      "attribute": null
    },
    "light": {
      "negative": false,
      "priority": 0,
      "alpha": 0.5,
      "angle": 360,
      "bright": 0,
      "color": null,
      "coloration": 1,
      "dim": 0,
      "attenuation": 0.5,
      "luminosity": 0.5,
      "saturation": 0,
      "contrast": 0,
      "shadows": 0,
      "animation": {
        "type": null,
        "speed": 5,
        "intensity": 5,
        "reverse": false
      },
      "darkness": {
        "min": 0,
        "max": 1
      }
    },
    "sight": {
      "enabled": false,
      "range": 0,
      "angle": 360,
      "visionMode": "basic",
      "color": null,
      "attenuation": 0.1,
      "brightness": 0,
      "saturation": 0,
      "contrast": 0
    },
    "detectionModes": [],
    "occludable": {
      "radius": 0
    },
    "ring": {
      "enabled": false,
      "colors": {
        "ring": null,
        "background": null
      },
      "effects": 1,
      "subject": {
        "scale": 1,
        "texture": null
      }
    },
    "flags": {},
    "randomImg": false
  },
  "items": [],
  "effects": [],
  "folder": "JVXmX9e25aVBF8LD",
  "flags": {
    "custom-system-builder": {
      "version": "4.0.1",
      "templateHistory": [
        [
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              17,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              16,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              5,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              7,
              "contents",
              0,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents"
            ],
            "index": 4,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "chalv",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${floor(guardianlv + linkagelv1 + linkagelv2)}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label"
              }
            }
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              4,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "maxLength"
            ]
          }
        ],
        [
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              17,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              16,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              5,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              7,
              "contents",
              0,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "key"
            ],
            "lhs": "guardianlv",
            "rhs": "enemy"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              4,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "maxLength"
            ]
          }
        ],
        [
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              17,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              16,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              5,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              7,
              "contents",
              0,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents"
            ],
            "index": 3,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "enemy",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "numberField",
                "label": "",
                "defaultValue": "",
                "size": "full-size",
                "allowDecimal": false,
                "minVal": "",
                "maxVal": "",
                "allowRelative": false,
                "showControls": false,
                "controlsStyle": "hover",
                "inputStyle": "text"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "key"
            ],
            "lhs": "",
            "rhs": "enemy"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "type"
            ],
            "lhs": "label",
            "rhs": "numberField"
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "icon"
            ],
            "lhs": ""
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "value"
            ],
            "lhs": "에너미 레벨"
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "prefix"
            ],
            "lhs": ""
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "suffix"
            ],
            "lhs": ""
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "rollMessage"
            ],
            "lhs": ""
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "altRollMessage"
            ],
            "lhs": ""
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "rollMessageToChat"
            ],
            "lhs": true
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "altRollMessageToChat"
            ],
            "lhs": true
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "style"
            ],
            "lhs": "bold"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ],
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ],
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "allowDecimal"
            ],
            "rhs": false
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "minVal"
            ],
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "maxVal"
            ],
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "allowRelative"
            ],
            "rhs": false
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "showControls"
            ],
            "rhs": false
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "controlsStyle"
            ],
            "rhs": "hover"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "inputStyle"
            ],
            "rhs": "text"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "value"
            ],
            "lhs": "레벨",
            "rhs": "에너미 레벨"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "style"
            ],
            "lhs": "label",
            "rhs": "bold"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "value"
            ],
            "lhs": "클래스",
            "rhs": "레벨"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              4,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "maxLength"
            ]
          }
        ],
        [
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              5,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              17,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              16,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              5,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              7,
              "contents",
              0,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents"
            ],
            "index": 2,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "enemy",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "numberField",
                "label": "",
                "defaultValue": "",
                "size": "full-size",
                "allowDecimal": false,
                "minVal": "",
                "maxVal": "",
                "allowRelative": false,
                "showControls": false,
                "controlsStyle": "hover",
                "inputStyle": "text"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "key"
            ],
            "lhs": "",
            "rhs": "enemy"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "type"
            ],
            "lhs": "label",
            "rhs": "numberField"
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "icon"
            ],
            "lhs": ""
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "value"
            ],
            "lhs": "에너미 레벨"
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "prefix"
            ],
            "lhs": ""
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "suffix"
            ],
            "lhs": ""
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rollMessage"
            ],
            "lhs": ""
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "altRollMessage"
            ],
            "lhs": ""
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rollMessageToChat"
            ],
            "lhs": true
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "altRollMessageToChat"
            ],
            "lhs": true
          },
          {
            "kind": "D",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "style"
            ],
            "lhs": "bold"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "label"
            ],
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ],
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "allowDecimal"
            ],
            "rhs": false
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "minVal"
            ],
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "maxVal"
            ],
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "allowRelative"
            ],
            "rhs": false
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "showControls"
            ],
            "rhs": false
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "controlsStyle"
            ],
            "rhs": "hover"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "inputStyle"
            ],
            "rhs": "text"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "value"
            ],
            "lhs": "레벨",
            "rhs": "에너미 레벨"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "style"
            ],
            "lhs": "label",
            "rhs": "bold"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              4,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "maxLength"
            ]
          }
        ],
        [
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents"
            ],
            "index": 5,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "itemtab",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "tab",
                "contents": [
                  {
                    "key": "iitem",
                    "cssClass": "",
                    "role": "0",
                    "permission": "0",
                    "tooltip": "",
                    "visibilityFormula": "",
                    "type": "itemContainer",
                    "contents": [],
                    "rowLayout": [
                      {
                        "key": "itype",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.itype}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "종류"
                      },
                      {
                        "key": "itiming",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.itiming}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "타이밍"
                      },
                      {
                        "key": "iquantity",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.iquantity}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "수량"
                      },
                      {
                        "key": "idifficulty",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.idifficulty}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "구입난이도"
                      },
                      {
                        "key": "itemuse",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "사용",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemTiming = `${item.itiming}$`;\nlet itemQuantity = `${item.iquantity}$`;\nlet itemEffect = `${item.ieffect}$`;\n\nlet content = `\n    <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n        <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n            <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                ${itemName}\n            </h3>\n        </div>\n\n        <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemTiming}\n            </span>\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemQuantity}\n            </span>\n        </div>\n\n        ${itemEffect ? `\n            <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                <strong>효과:</strong> ${itemEffect}\n            </div>\n        ` : ''}\n    </div>`;\n\nlet chatData = {\n    user: game.user._id,\n    content: content\n};\n\nreturn ChatMessage.create(chatData);\n}%",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "button",
                        "align": "left",
                        "colName": ""
                      }
                    ],
                    "head": false,
                    "deleteWarning": false,
                    "title": "",
                    "hideEmpty": false,
                    "sortOption": "manual",
                    "headDisplay": true,
                    "showDelete": true,
                    "statusIcon": false,
                    "nameAlign": "left",
                    "nameLabel": "이름",
                    "templateFilter": [
                      "aSaP8Yx3Zmv1pxIr"
                    ],
                    "itemFilterFormula": "",
                    "sortPredicates": []
                  }
                ],
                "name": "아이템"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "key"
            ],
            "lhs": "option",
            "rhs": "itemtab"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "key"
            ],
            "lhs": "option",
            "rhs": "iitem"
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 9,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "isEquipped",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.isEquipped? '✓' : '☐'}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "${setPropertyInEntity('item', 'isEquipped', 'item.isEquipped == true ? false : true')}$",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": true,
                "style": "button",
                "align": "left",
                "colName": "장착"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 8,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionspeed",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionspeed}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "이동력"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 7,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionatk",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionatk}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "공격력"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 6,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionen",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionen}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "감응"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 5,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionfp",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionfp}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "역장"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "key"
            ],
            "lhs": "optioninit",
            "rhs": "itemuse"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "value"
            ],
            "lhs": "${item.optioninit}$",
            "rhs": "사용"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemTiming = `${item.itiming}$`;\nlet itemQuantity = `${item.iquantity}$`;\nlet itemEffect = `${item.ieffect}$`;\n\nlet content = `\n    <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n        <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n            <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                ${itemName}\n            </h3>\n        </div>\n\n        <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemTiming}\n            </span>\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemQuantity}\n            </span>\n        </div>\n\n        ${itemEffect ? `\n            <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                <strong>효과:</strong> ${itemEffect}\n            </div>\n        ` : ''}\n    </div>`;\n\nlet chatData = {\n    user: game.user._id,\n    content: content\n};\n\nreturn ChatMessage.create(chatData);\n}%"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "colName"
            ],
            "lhs": "행동",
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "key"
            ],
            "lhs": "optionpro",
            "rhs": "idifficulty"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "value"
            ],
            "lhs": "${item.optionpro}$",
            "rhs": "${item.idifficulty}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "colName"
            ],
            "lhs": "방벽",
            "rhs": "구입난이도"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "key"
            ],
            "lhs": "optionshelling",
            "rhs": "iquantity"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "value"
            ],
            "lhs": "${item.optionshelling}$",
            "rhs": "${item.iquantity}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "colName"
            ],
            "lhs": "포격",
            "rhs": "수량"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "key"
            ],
            "lhs": "optionevasion",
            "rhs": "itiming"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "value"
            ],
            "lhs": "${item.optionevasion}$",
            "rhs": "${item.itiming}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "colName"
            ],
            "lhs": "회피",
            "rhs": "타이밍"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "key"
            ],
            "lhs": "optionhit",
            "rhs": "itype"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "value"
            ],
            "lhs": "${item.optionhit}$",
            "rhs": "${item.itype}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "colName"
            ],
            "lhs": "명중",
            "rhs": "종류"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "contents",
              0,
              "templateFilter",
              0
            ],
            "lhs": "WAdeM4z6efeMcdIw",
            "rhs": "aSaP8Yx3Zmv1pxIr"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              4,
              "name"
            ],
            "lhs": "옵션",
            "rhs": "아이템"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "key"
            ],
            "lhs": "specialtytab",
            "rhs": "option"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "key"
            ],
            "lhs": "specialty",
            "rhs": "option"
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 9,
            "item": {
              "kind": "N",
              "rhs": {
                "key": "isEquipped",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.isEquipped? '✓' : '☐'}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "${setPropertyInEntity('item', 'isEquipped', 'item.isEquipped == true ? false : true')}$",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": true,
                "style": "button",
                "align": "left",
                "colName": "장착"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "key"
            ],
            "lhs": "sroll",
            "rhs": "optionspeed"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "value"
            ],
            "lhs": "사용",
            "rhs": "${item.optionspeed}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "rollMessage"
            ],
            "lhs": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemLevel = `${item.slv}$`;\nlet itemTarget = `${item.starget}$`;\nlet itemRange = `${item.srange}$`;\nlet itemCost = `${item.scost}$`;\nlet itemTiming = `${item.stiming}$`;\nlet itemEffect = `${item.seffect}$`;\nlet modifierName = `${item.name}$`;\nlet itemLimit  = `${item.limit}$`;\n\n// 상태 효과 적용 함수를 먼저 정의\nasync function applyEffect(token, effectName) {\n    // '없음'인 경우 그냥 리턴\n    if (effectName.toLowerCase().trim() === '없음') {\n        return;\n    }\n\n    const statusId = effectName.toLowerCase().trim();\n    const statusEffect = CONFIG.statusEffects.find(e => \n        e.id === statusId || \n        e.label.toLowerCase() === statusId\n    );\n    \n    if (!statusEffect) {\n        ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n        return;\n    }\n    \n    try {\n        const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n        if (!hasEffect) {\n            await token.toggleEffect(statusEffect);\n            ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n        } else {\n            ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n        }\n    } catch (error) {\n        ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n        console.error(error);\n    }\n}\n\n// 비용 처리 함수\nasync function handleCost() {\n    console.log('비용 처리 시작');\n    \n    let cost = itemCost.toLowerCase().replace(/\\s+/g, '');\n    console.log('처리할 비용 문자열:', cost);\n    \n    // 모든 비용 패턴 찾기 (탄수 패턴 추가)\n    let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n    console.log('찾은 모든 비용 패턴:', allCosts);\n\n    // 비용 유형별로 분리하고 계산\n    let fpTotal = 0;\n    let hpTotal = 0;\n    let enTotal = 0;\n    let bulletTotal = 0;\n    \n    allCosts.forEach(match => {\n        const type = match[2];  // fp, hp, en, 탄수 중 하나\n        const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n        const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n        const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n        \n        switch(type) {\n            case 'fp': fpTotal += value; break;\n            case 'hp': hpTotal += value; break;\n            case 'en': enTotal += value; break;\n            case '탄수': bulletTotal += value; break;\n        }\n    });\n\n    // 무기 아이템 찾기\n    let weaponItems = actor.items.filter(i => \n        i.system?.props?.type === \"weapon\" && \n        i.system?.props?.bullets !== undefined\n    );\n\n    console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n\n    // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n    let remainingText = cost;\n    allCosts.forEach(match => {\n        remainingText = remainingText.replace(match[0], ',');\n    });\n\n    // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n    let otherEffects = remainingText\n        .split(',')\n        .map(effect => effect.trim())\n        .filter(effect => effect !== '');\n\n    console.log('추출된 효과:', otherEffects);\n\n    const item = actor.items.find(i => i.name === itemName);\n    const hasToggleableEffects = item?.system.modifiers\n        ?.some(m => m.conditionalGroup);\n\n    // 사용횟수 확인\n    const hasLimit = itemLimit && itemLimit !== '0' && itemLimit !== '$';\n    const currentLimit = hasLimit ? parseInt(itemLimit.replace('$', '')) : 0;\n\n    return new Promise((resolve) => {\n        new Dialog({\n            title: \"비용 소비 확인\",\n            content: `\n                <style>\n                    .cost-dialog {\n                        background: #f0f0f0;\n                        padding: 15px;\n                        border-radius: 8px;\n                    }\n                    .cost-list {\n                        background: white;\n                        padding: 10px 15px;\n                        border-radius: 6px;\n                        margin: 10px 0;\n                        box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                    }\n                    .cost-item {\n                        display: flex;\n                        align-items: center;\n                        gap: 8px;\n                        padding: 4px 0;\n                    }\n                    .cost-label {\n                        display: inline-flex;\n                        align-items: center;\n                        padding: 2px 6px;\n                        border-radius: 4px;\n                        font-size: 12px;\n                        font-weight: bold;\n                    }\n                    .fp-label { color: #2c7be5; }\n                    .hp-label { color: #dc3545; }\n                    .en-label { color: #6c757d; }\n                    .bullet-label { color: #ffc107; }\n                    .effect-label { color: #198754; }\n                    .consume-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .toggle-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-value {\n                        color: #666;\n                        font-size: 12px;\n                        margin-left: auto;\n                    }                        \n                </style>\n                <div class=\"cost-dialog\">\n                    <div class=\"cost-list\">\n                        ${fpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label fp-label\">FP</span>\n                                <span>${fpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${hpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label hp-label\">HP</span>\n                                <span>${hpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${enTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label en-label\">EN</span>\n                                <span>${enTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${bulletTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label bullet-label\">탄수</span>\n                                <span>${bulletTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${otherEffects.length > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label effect-label\">효과</span>\n                                <span>${otherEffects.join(\", \")}</span>\n                            </div>\n                        ` : \"\"}\n                    </div>\n                    <div class=\"consume-option\">\n                        <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                        <label for=\"consumeCost\">비용 소비</label>\n                    </div>\n                    ${hasToggleableEffects ? `\n                        <div class=\"toggle-option\">\n                            <input type=\"checkbox\" id=\"toggleEffects\" name=\"toggleEffects\" checked>\n                            <label for=\"toggleEffects\">특기 효과 토글</label>\n                        </div>\n                    ` : ''}\n                    ${hasLimit ? `\n                        <div class=\"limit-option\">\n                            <input type=\"checkbox\" id=\"consumeLimit\" name=\"consumeLimit\" checked>\n                            <label for=\"consumeLimit\">사용횟수 소비</label>\n                            <span class=\"limit-value\">현재: ${currentLimit}회</span>\n                        </div>\n                    ` : ''}\n                </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            let toggleEffects = hasToggleableEffects && \n                                html.find('[name=\"toggleEffects\"]').is(\":checked\");\n                            let consumeLimit = hasLimit && \n                                html.find('[name=\"consumeLimit\"]').is(\":checked\");\n    \n                            if (consumeLimit) {\n                                // 사용횟수가 0 이하인 경우 경고\n                                if (currentLimit <= 0) {\n                                    ui.notifications.warn(\"남은 사용횟수가 없습니다!\");\n                                    return resolve(false);\n                                }\n    \n                                const specialtyItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n                                if (specialtyItem) {\n                                    await specialtyItem.update({\n                                        \"system.props.limit\": currentLimit - 1\n                                    });\n                                    console.log('사용횟수 감소:', currentLimit - 1);\n                                }\n                            }    \n                        \n                        if (consumeCost) {\n                            // FP 소비\n                            if (fpTotal > 0) {\n                                let fpValue = actor.system.props.fpvalue;\n                                await actor.update({ \n                                    \"system.props.fpvalue\": fpValue - fpTotal\n                                });\n                                console.log('FP 소비:', fpTotal);\n                            }\n                            \n                            // HP 소비\n                            if (hpTotal > 0) {\n                                let hpValue = actor.system.props.hpvalue;\n                                await actor.update({ \n                                    \"system.props.hpvalue\": hpValue - hpTotal\n                                });\n                                console.log('HP 소비:', hpTotal);\n                            }\n                            \n                            // EN 소비\n                            if (enTotal > 0) {\n                                let enValue = actor.system.props.envalue;\n                                await actor.update({ \n                                    \"system.props.envalue\": enValue - enTotal\n                                });\n                                console.log('EN 소비:', enTotal);\n                            }\n\n                            // 탄수 소비\n                            if (bulletTotal > 0) {\n                                const specialtyItem = actor.items.find(i => i.name === itemName);\n                                if (specialtyItem) {\n                                    const currentBullets = specialtyItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await specialtyItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                            }\n                            \n                            // 기타 효과 적용\n                            for (let effect of otherEffects) {\n                                if (effect) {\n                                    await applyEffect(selectedToken, effect);\n                                }\n                            }\n                        }\n\n                        if (toggleEffects) {\n                            await toggleItemEffects();\n                        }\n\n                        resolve(true);\n\n                        let content = `\n                            <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n                                <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n                                    <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                                        ${itemName}\n                                    </h3>\n                                    <span style=\"background:#e9ecef;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#4a4a4a\">\n                                        LV.${itemLevel}\n                                    </span>\n                                </div>\n\n                                <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTarget}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemRange}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemCost}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTiming}\n                                    </span>\n                                </div>\n\n                                ${itemEffect ? `\n                                    <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                                        <strong>효과:</strong> ${itemEffect}\n                                    </div>\n                                ` : ''}\n                            </div>`;\n\n                        let chatData = {\n                            content: content,\n                            speaker: ChatMessage.getSpeaker({ actor: actor })\n                        };\n\n                        await ChatMessage.create(chatData);\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\",\n                    callback: () => {\n                        console.log('비용 처리 취소');\n                        resolve(false);\n                    }\n                }\n            },\n            default: \"confirm\",\n            width: 400\n        }).render(true);\n    });\n}\n\nconst toggleItemEffects = async () => {\n    const item = actor.items.find(i => i.name === itemName);\n    if (!item) {\n        ui.notifications.warn(`${itemName}을(를) 찾을 수 없습니다.`);\n        return;\n    }\n    \n    const modifierGroups = new Set(\n        item.system.modifiers\n            .map(m => m.conditionalGroup)\n            .filter(group => group)\n    );\n\n    // 토글할 상태가 없는 경우 조용히 리턴\n    if (modifierGroups.size === 0) {\n        return;\n    }\n\n    let activeGroups = actor.system.activeConditionalModifierGroups || [];\n    const allGroupsActive = Array.from(modifierGroups)\n        .every(group => activeGroups.includes(group));\n\n    try {\n        if (allGroupsActive) {\n            activeGroups = activeGroups.filter(group => !modifierGroups.has(group));\n            ui.notifications.info(`${itemName}의 효과가 비활성화되었습니다.`);\n        } else {\n            modifierGroups.forEach(group => {\n                if (!activeGroups.includes(group)) {\n                    activeGroups.push(group);\n                }\n            });\n            ui.notifications.info(`${itemName}의 효과가 활성화되었습니다.`);\n        }\n        await actor.update({\n            \"system.activeConditionalModifierGroups\": activeGroups\n        });\n    } catch (error) {\n        console.error(\"효과 토글 중 오류 발생:\", error);\n        ui.notifications.error(\"효과 토글 중 오류가 발생했습니다.\");\n    }\n};\n\n// 토큰 선택 확인\nlet selectedToken = canvas.tokens.controlled[0];\nif (!selectedToken) {\n    ui.notifications.warn(\"토큰을 선택해주세요.\");\n    return;\n}\n\nlet actor = selectedToken.actor;\n\n// 비용 처리 실행\nhandleCost();\n}%",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "rollMessageToChat"
            ],
            "lhs": false,
            "rhs": true
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "style"
            ],
            "lhs": "button",
            "rhs": "label"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "colName"
            ],
            "lhs": "",
            "rhs": "이동력"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "key"
            ],
            "lhs": "limit",
            "rhs": "optionatk"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "value"
            ],
            "lhs": "${item.limit}$",
            "rhs": "${item.optionatk}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "colName"
            ],
            "lhs": "사용횟수",
            "rhs": "공격력"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "key"
            ],
            "lhs": "bullets",
            "rhs": "optionen"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "value"
            ],
            "lhs": "${item.bullets}$",
            "rhs": "${item.optionen}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "colName"
            ],
            "lhs": "탄수",
            "rhs": "감응"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "key"
            ],
            "lhs": "scost",
            "rhs": "optionfp"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "value"
            ],
            "lhs": "${item.scost}$",
            "rhs": "${item.optionfp}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "colName"
            ],
            "lhs": "대가",
            "rhs": "역장"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "key"
            ],
            "lhs": "starget",
            "rhs": "optioninit"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "value"
            ],
            "lhs": "${item.starget}$",
            "rhs": "${item.optioninit}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessage"
            ],
            "lhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.srange}$`;\n    const weaponTarget = `${item.starget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessageToChat"
            ],
            "lhs": false,
            "rhs": true
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "style"
            ],
            "lhs": "button",
            "rhs": "label"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "colName"
            ],
            "lhs": "대상",
            "rhs": "행동"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "key"
            ],
            "lhs": "srange",
            "rhs": "optionpro"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "value"
            ],
            "lhs": "${item.srange}$",
            "rhs": "${item.optionpro}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "rollMessage"
            ],
            "lhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.srange}$`;\n    const weaponTarget = `${item.starget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "rollMessageToChat"
            ],
            "lhs": false,
            "rhs": true
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "style"
            ],
            "lhs": "button",
            "rhs": "label"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "colName"
            ],
            "lhs": "사정거리",
            "rhs": "방벽"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "key"
            ],
            "lhs": "stiming",
            "rhs": "optionshelling"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "value"
            ],
            "lhs": "${item.stiming}$",
            "rhs": "${item.optionshelling}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "colName"
            ],
            "lhs": "타이밍",
            "rhs": "포격"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "key"
            ],
            "lhs": "stype",
            "rhs": "optionevasion"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "value"
            ],
            "lhs": "${item.stype}$",
            "rhs": "${item.optionevasion}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "colName"
            ],
            "lhs": "종류",
            "rhs": "회피"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "key"
            ],
            "lhs": "slv",
            "rhs": "optionhit"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "value"
            ],
            "lhs": "${item.slv}$",
            "rhs": "${item.optionhit}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "colName"
            ],
            "lhs": "레벨",
            "rhs": "명중"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "templateFilter",
              0
            ],
            "lhs": "xL5PDDgxvo1pkkeh",
            "rhs": "WAdeM4z6efeMcdIw"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "name"
            ],
            "lhs": "특기",
            "rhs": "옵션"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "key"
            ],
            "lhs": "weapontab",
            "rhs": "specialtytab"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "key"
            ],
            "lhs": "waeapon",
            "rhs": "specialty"
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 10,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "weaponroll",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "사용",
                "prefix": "",
                "suffix": "",
                "rollMessage": "%{const MCS = window.MetalicCombatSystem;\n    if (!MCS) {\n        ui.notifications.error(\"전투 시스템을 찾을 수 없습니다. 모듈이 활성화되어 있는지 확인해주세요.\");\n        return;\n    }\n\n    const debugMode = true;\n\n    if (!debugMode) {\n        console.log = function() {}; // console.log 비활성화\n    }\n    \n    // 필요한 아이템 정보들을 변수로 선언\n    let itemName = `${item.name}$`;\n    let itemWeaponCrit = `${item.weaponcrit}$`;\n    let itemWeaponType = `${item.weapontype}$`;\n    let itemWeaponRange = `${item.weaponrange}$`;\n    let itemWeaponCost = `${item.weaponcost}$`;\n    let itemWeaponFinalDmg = `${item.weaponfinaldmg}$`;\n    let sidedamage = `${item.sidedamage}$`;\n    let itemWeaponEffect = `${item.weaponeffect}$`;\n    let dmgdiebonus = `${dmgdiebonus}$`;\n    let dmgnumbonus = `${dmgnumbonus}$`;\n    let atkcritMod = `${atkcritmod}$`;\n    let attackPart = `${item.part}$`;\n    let itemWeaponFx = `${item.weaponfx}$`;\n    let itemWeaponTarget = `${item.weapontarget}$`;\n    let atk = `${atk}$`;\n    let itemSniping = `${item.sniping}$`;\n    let itemArmorIgnore = `${item.armorignore}$`;\n    let weaponkind = `${item.weaponkind}$`;\n    \n    console.log('아이템 정보:', {\n        itemName, itemWeaponCrit, itemWeaponType, itemWeaponRange, \n        itemWeaponCost, itemWeaponFinalDmg, itemWeaponEffect,\n        dmgdiebonus, dmgnumbonus, itemWeaponFx, atkcritMod, attackPart,\n        weaponkind\n    });\n    \n    const attackers = canvas.tokens.controlled;\n    if (attackers.length === 0) {\n        ui.notifications.warn(\"공격할 토큰을 선택해주세요.\");\n        return;\n    }\n    \n    console.log('선택된 공격자 토큰:', attackers);\n    \n    let selectedToken = canvas.tokens.controlled[0];\n    if (!selectedToken) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n    \n    console.log('선택된 토큰:', selectedToken);\n    \n    let actor = selectedToken.actor;\n    const targets = Array.from(game.user.targets);\n    const targetIds = targets.length > 0 ? targets.map(t => t.id) : [];\n    \n    console.log('선택된 액터:', actor);\n    console.log('대상 토큰:', targets);\n    console.log('대상 ID:', targetIds);\n    \n    // 상태 효과 적용 함수\n    async function applyEffect(token, effectName) {\n        console.log(`상태 효과 적용 시작 - 토큰: ${token.name}, 효과: ${effectName}`);\n        if (effectName.toLowerCase().trim() === '없음') {\n            return;\n        }\n         \n        const statusId = effectName.toLowerCase().trim();\n        const statusEffect = CONFIG.statusEffects.find(e => \n            e.id === statusId || \n            e.label.toLowerCase() === statusId\n        );\n        \n        if (!statusEffect) {\n            ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n            console.log(`상태 효과 적용 실패 - 효과를 찾을 수 없음: ${effectName}`);\n            return;\n        }\n    \n        try {\n            const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n            if (!hasEffect) {\n                await token.toggleEffect(statusEffect);\n                ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n                console.log(`상태 효과 적용 완료 - 토큰: ${token.name}, 효과: ${effectName}`);\n            } else {\n                ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n                console.log(`상태 효과 적용 건너뜀 - 이미 적용됨: ${effectName}`);\n            }\n        } catch (error) {\n            ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n            console.error(`상태 효과 적용 중 오류 발생 - 토큰: ${token.name}, 효과: ${effectName}`, error);\n        }\n    }\n    \n    // 비용 처리 함수\n    async function handleCost() {\n        console.log('비용 처리 시작');\n        \n        let cost = itemWeaponCost.toLowerCase().replace(/\\s+/g, '');\n        console.log('처리할 비용 문자열:', cost);\n        \n        // 비용 패턴 정규식 수정 - 탄수 패턴 추가\n        const costPattern = /(\\d+)?(?:fp|hp|en|탄수)(\\d+)?/g;\n        const effectPattern = /[^,]+/g;\n        \n        // 모든 비용 패턴 찾기\n        let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n        console.log('찾은 모든 비용 패턴:', allCosts);\n    \n        // 비용 유형별로 분리하고 계산\n        let fpTotal = 0;\n        let hpTotal = 0;\n        let enTotal = 0;\n        let bulletTotal = 0;\n        \n        allCosts.forEach(match => {\n            const type = match[2];  // fp, hp, en, 탄수 중 하나\n            const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n            const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n            const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n            \n            switch(type) {\n                case 'fp': fpTotal += value; break;\n                case 'hp': hpTotal += value; break;\n                case 'en': enTotal += value; break;\n                case '탄수': bulletTotal += value; break;\n            }\n        });\n    \n        // 현재 무기 아이템 찾기\n        const weaponItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n        if (!weaponItem) {\n            console.error('무기 아이템을 찾을 수 없습니다:', itemName);\n            return false;\n        }\n    \n        console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n    \n        // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n        let remainingText = cost;\n        allCosts.forEach(match => {\n            remainingText = remainingText.replace(match[0], ',');\n        });\n    \n        // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n        let otherEffects = remainingText\n            .split(',')\n            .map(effect => effect.trim())\n            .filter(effect => effect !== '');\n    \n        console.log('추출된 효과:', otherEffects);\n    \n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"비용 소비 확인\",\n                content: `\n                    <style>\n                        .cost-dialog {\n                            background: #f0f0f0;\n                            padding: 15px;\n                            border-radius: 8px;\n                        }\n                        .cost-list {\n                            background: white;\n                            padding: 10px 15px;\n                            border-radius: 6px;\n                            margin: 10px 0;\n                            box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                        }\n                        .cost-item {\n                            display: flex;\n                            align-items: center;\n                            gap: 8px;\n                            padding: 4px 0;\n                        }\n                        .cost-label {\n                            display: inline-flex;\n                            align-items: center;\n                            padding: 2px 6px;\n                            border-radius: 4px;\n                            font-size: 12px;\n                            font-weight: bold;\n                        }\n                        .fp-label { color: #2c7be5; }\n                        .hp-label { color: #dc3545; }\n                        .en-label { color: #6c757d; }\n                        .bullet-label { color: #ffc107; }\n                        .effect-label { color: #198754; }\n                        .consume-option {\n                            background: #f8f9fa;\n                            padding: 8px;\n                            border-radius: 6px;\n                            margin-top: 10px;\n                            display: flex;\n                            align-items: center;\n                            gap: 10px;\n                        }\n                    </style>\n                    <div class=\"cost-dialog\">\n                        <div class=\"cost-list\">\n                            ${fpTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label fp-label\">FP</span>\n                                    <span>${fpTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${hpTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label hp-label\">HP</span>\n                                    <span>${hpTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${enTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label en-label\">EN</span>\n                                    <span>${enTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${bulletTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label bullet-label\">탄수</span>\n                                    <span>${bulletTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${otherEffects.length > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label effect-label\">효과</span>\n                                    <span>${otherEffects.join(\", \")}</span>\n                                </div>\n                            ` : \"\"}\n                        </div>\n                        <div class=\"consume-option\">\n                            <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                            <label for=\"consumeCost\">비용 소비</label>\n                        </div>\n                    </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            console.log('비용 소비 확인:', consumeCost);\n                            \n                            if (consumeCost) {\n                                // FP 소비\n                                if (fpTotal > 0) {\n                                    let fpValue = actor.system.props.fpvalue;\n                                    await actor.update({ \n                                        \"system.props.fpvalue\": fpValue - fpTotal\n                                    });\n                                    console.log('FP 소비:', fpTotal);\n                                }\n                                \n                                // HP 소비\n                                if (hpTotal > 0) {\n                                    let hpValue = actor.system.props.hpvalue;\n                                    await actor.update({ \n                                        \"system.props.hpvalue\": hpValue - hpTotal\n                                    });\n                                    console.log('HP 소비:', hpTotal);\n                                }\n                                \n                                // EN 소비\n                                if (enTotal > 0) {\n                                    let enValue = actor.system.props.envalue;\n                                    await actor.update({ \n                                        \"system.props.envalue\": enValue - enTotal\n                                    });\n                                    console.log('EN 소비:', enTotal);\n                                }\n    \n                                // 탄수 소비\n                                if (bulletTotal > 0 && weaponItem) {\n                                    let currentBullets = weaponItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await weaponItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                                \n                                // 기타 효과 적용\n                                for (let effect of otherEffects) {\n                                    if (effect) {  // 빈 문자열이 아닌 경우에만 적용\n                                        await applyEffect(attackers[0], effect);\n                                    }\n                                }\n                            }\n                            console.log('비용 처리 완료');\n                            resolve(true);\n                        }\n                    },\n                    cancel: {\n                        icon: '<i class=\"fas fa-times\"></i>',\n                        label: \"취소\",\n                        callback: () => {\n                            console.log('비용 처리 취소');\n                            resolve(false);\n                        }\n                    }\n                },\n                default: \"confirm\",\n                width: 400\n            }).render(true);\n        });\n    }\n    \n    // 아이템 정보 카드 표시\n    async function displayItemCard() {\n        console.log('아이템 정보 카드 표시 시작');\n        \n        let content = `\n        <div class=\"diceroll\">\n            <div class=\"item-card\" style=\"background-color: #f9f9f9; border: 1px solid #ddd; border-radius: 5px; margin-bottom: 10px;\">\n                <div style=\"background-color: #e9e9e9; padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">\n                    <h3 style=\"margin: 0;\">${itemName} (${itemWeaponCrit})</h3>\n                </div>\n                <div style=\"padding: 8px;\">\n                    <div style=\"text-align: center; margin-bottom: 8px;\">\n                        ${attackPart} / ${itemWeaponType} / ${itemWeaponRange} / ${itemWeaponCost} / ${weaponkind}\n                    </div>\n                    <div style=\"margin-top: 8px;\">\n                        <strong>효과:</strong><br>\n                        ${itemWeaponEffect}\n                    </div>\n                </div>\n            </div>\n        </div>`;\n    \n        await ChatMessage.create({\n            author: game.user.id,\n            speaker: ChatMessage.getSpeaker({ actor: actor }),\n            content: content\n        });\n        \n        console.log('아이템 정보 카드 표시 완료');\n    }\n    \n    // 실행 순서 시작\n    (async () => {\n        console.log('매크로 실행 시작');\n        \n        // 1. 특기 선택 먼저 실행\n        const selectedSpecialties = await MCS.CombatManager._showEffectSelectionDialog(null, actor);\n        if (selectedSpecialties?.length) {\n            const totalCost = MCS.CombatManager._calculateEffectsCost(selectedSpecialties);\n            if (!await MCS.CombatManager._handleEffectsCost(totalCost, actor, selectedSpecialties)) {\n                return;\n            }\n            await MCS.CombatManager._activateEffects(actor, selectedSpecialties);\n        }\n    \n        // 2. 비용 처리\n        const costConfirmed = await handleCost();\n        if (!costConfirmed) {\n            console.log('비용 처리 취소로 인해 매크로 실행 종료');\n            return;\n        }\n    \n        // 3. 무장 정보 객체 생성\n        const weaponData = {\n            name: itemName,\n            weaponcrit: itemWeaponCrit,\n            weapontype: itemWeaponType,\n            weaponrange: itemWeaponRange,\n            weaponcost: itemWeaponCost,\n            weaponfinaldmg: itemWeaponFinalDmg,\n            sidedamage: sidedamage,\n            weaponkind: weaponkind,\n            weaponeffect: itemWeaponEffect,\n            weapontarget: itemWeaponTarget,\n            weaponfx: itemWeaponFx,\n            part: attackPart,\n            dmgdiebonus: dmgdiebonus,\n            dmgnumbonus: dmgnumbonus,\n            atk: atk,\n            sniping: itemSniping,\n            armorignore: itemArmorIgnore,\n        };\n        console.log(\"웨폰데이터 :\",weaponData);\n    \n        // 4. 명중 판정 다이얼로그\n        new Dialog({\n            title: \"명중 판정\",\n            content: `\n                <style>\n    .attack-dialog {\n        background: #f5f5f5;\n        padding: 15px;\n        border-radius: 8px;\n    }\n    .attack-dialog .form-group {\n        background: white;\n        padding: 12px;\n        border-radius: 6px;\n        box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n        margin-bottom: 15px;\n    }\n    .attack-dialog .form-group label {\n        display: block;\n        margin-bottom: 8px;\n        color: #4a4a4a;\n        font-weight: bold;\n    }\n    .attack-dialog .form-group select,\n    .attack-dialog .form-group input {\n        width: 100%;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background: white;\n        height: 38px;\n        font-size: 14px;\n    }\n    .attack-dialog .form-group select:focus,\n    .attack-dialog .form-group input:focus {\n        border-color: #4a4a4a;\n        box-shadow: 0 0 0 2px rgba(74,74,74,0.2);\n        outline: none;\n    }\n                    }\n                </style>\n                <div class=\"attack-dialog\">\n                    <div class=\"form-group\">\n                        <label>판정 능력치:</label>\n                        <select name=\"attackType\">\n                            <option value=\"hit\" ${attackPart?.includes('백병') ? 'selected' : ''}>명중</option>\n                            <option value=\"shelling\" ${attackPart?.includes('원격') ? 'selected' : ''}>포격</option>\n                            <option value=\"evasion\">회피</option>\n                            <option value=\"pro\">방벽</option>\n                            <option value=\"init\">행동</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>수정치:</label>\n                        <input type=\"number\" name=\"modifier\" value=\"0\">\n                    </div>\n                </div>\n            `,\n            buttons: {\n                roll: {\n                    icon: '<i class=\"fas fa-dice\"></i>',\n                    label: \"공격\",\n                    callback: async (html) => {\n                        const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                        const selectedAttackType = html.find('[name=\"attackType\"]').val();\n                        \n                        const attackerIds = attackers.map(a => a.id);\n                        \n                        if (targetIds.length === 0) {\n                            await MCS.CombatManager.performSimpleAttack(attackerIds, selectedAttackType, modifier);\n                        } else {\n                            await MCS.CombatManager.performMultiAttack(\n                                attackerIds, \n                                targetIds, \n                                selectedAttackType, \n                                modifier,\n                                weaponData.weaponcrit,\n                                actor.system.props.atkcritmod || '0',\n                                weaponData.part,\n                                weaponData,\n                                selectedSpecialties\n                            );\n                        }\n                        if (selectedSpecialties?.length) {\n                            // 자동 데미지 굴림일 때만 여기서 특기 해제\n                            if (game.settings.get(\"metalic-combat-system\", \"autoDamageRoll\")) {\n                                await MCS.CombatManager._deactivateEffects(actor, selectedSpecialties);\n                            }\n                        }\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\"\n                }\n            },\n            default: \"roll\",\n            width: 400\n        }).render(true);\n    })();}%",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": false,
                "style": "button",
                "align": "left",
                "colName": ""
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 9,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "isEquipped",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.isEquipped? '✓' : '☐'}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "${setPropertyInEntity('item', 'isEquipped', 'item.isEquipped == true ? false : true')}$",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": true,
                "style": "button",
                "align": "left",
                "colName": "장착"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "key"
            ],
            "lhs": "weaponcrit",
            "rhs": "sroll"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "value"
            ],
            "lhs": "${item.weaponcrit}$",
            "rhs": "사용"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemLevel = `${item.slv}$`;\nlet itemTarget = `${item.starget}$`;\nlet itemRange = `${item.srange}$`;\nlet itemCost = `${item.scost}$`;\nlet itemTiming = `${item.stiming}$`;\nlet itemEffect = `${item.seffect}$`;\nlet modifierName = `${item.name}$`;\nlet itemLimit  = `${item.limit}$`;\n\n// 상태 효과 적용 함수를 먼저 정의\nasync function applyEffect(token, effectName) {\n    // '없음'인 경우 그냥 리턴\n    if (effectName.toLowerCase().trim() === '없음') {\n        return;\n    }\n\n    const statusId = effectName.toLowerCase().trim();\n    const statusEffect = CONFIG.statusEffects.find(e => \n        e.id === statusId || \n        e.label.toLowerCase() === statusId\n    );\n    \n    if (!statusEffect) {\n        ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n        return;\n    }\n    \n    try {\n        const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n        if (!hasEffect) {\n            await token.toggleEffect(statusEffect);\n            ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n        } else {\n            ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n        }\n    } catch (error) {\n        ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n        console.error(error);\n    }\n}\n\n// 비용 처리 함수\nasync function handleCost() {\n    console.log('비용 처리 시작');\n    \n    let cost = itemCost.toLowerCase().replace(/\\s+/g, '');\n    console.log('처리할 비용 문자열:', cost);\n    \n    // 모든 비용 패턴 찾기 (탄수 패턴 추가)\n    let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n    console.log('찾은 모든 비용 패턴:', allCosts);\n\n    // 비용 유형별로 분리하고 계산\n    let fpTotal = 0;\n    let hpTotal = 0;\n    let enTotal = 0;\n    let bulletTotal = 0;\n    \n    allCosts.forEach(match => {\n        const type = match[2];  // fp, hp, en, 탄수 중 하나\n        const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n        const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n        const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n        \n        switch(type) {\n            case 'fp': fpTotal += value; break;\n            case 'hp': hpTotal += value; break;\n            case 'en': enTotal += value; break;\n            case '탄수': bulletTotal += value; break;\n        }\n    });\n\n    // 무기 아이템 찾기\n    let weaponItems = actor.items.filter(i => \n        i.system?.props?.type === \"weapon\" && \n        i.system?.props?.bullets !== undefined\n    );\n\n    console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n\n    // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n    let remainingText = cost;\n    allCosts.forEach(match => {\n        remainingText = remainingText.replace(match[0], ',');\n    });\n\n    // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n    let otherEffects = remainingText\n        .split(',')\n        .map(effect => effect.trim())\n        .filter(effect => effect !== '');\n\n    console.log('추출된 효과:', otherEffects);\n\n    const item = actor.items.find(i => i.name === itemName);\n    const hasToggleableEffects = item?.system.modifiers\n        ?.some(m => m.conditionalGroup);\n\n    // 사용횟수 확인\n    const hasLimit = itemLimit && itemLimit !== '0' && itemLimit !== '$';\n    const currentLimit = hasLimit ? parseInt(itemLimit.replace('$', '')) : 0;\n\n    return new Promise((resolve) => {\n        new Dialog({\n            title: \"비용 소비 확인\",\n            content: `\n                <style>\n                    .cost-dialog {\n                        background: #f0f0f0;\n                        padding: 15px;\n                        border-radius: 8px;\n                    }\n                    .cost-list {\n                        background: white;\n                        padding: 10px 15px;\n                        border-radius: 6px;\n                        margin: 10px 0;\n                        box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                    }\n                    .cost-item {\n                        display: flex;\n                        align-items: center;\n                        gap: 8px;\n                        padding: 4px 0;\n                    }\n                    .cost-label {\n                        display: inline-flex;\n                        align-items: center;\n                        padding: 2px 6px;\n                        border-radius: 4px;\n                        font-size: 12px;\n                        font-weight: bold;\n                    }\n                    .fp-label { color: #2c7be5; }\n                    .hp-label { color: #dc3545; }\n                    .en-label { color: #6c757d; }\n                    .bullet-label { color: #ffc107; }\n                    .effect-label { color: #198754; }\n                    .consume-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .toggle-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-value {\n                        color: #666;\n                        font-size: 12px;\n                        margin-left: auto;\n                    }                        \n                </style>\n                <div class=\"cost-dialog\">\n                    <div class=\"cost-list\">\n                        ${fpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label fp-label\">FP</span>\n                                <span>${fpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${hpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label hp-label\">HP</span>\n                                <span>${hpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${enTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label en-label\">EN</span>\n                                <span>${enTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${bulletTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label bullet-label\">탄수</span>\n                                <span>${bulletTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${otherEffects.length > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label effect-label\">효과</span>\n                                <span>${otherEffects.join(\", \")}</span>\n                            </div>\n                        ` : \"\"}\n                    </div>\n                    <div class=\"consume-option\">\n                        <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                        <label for=\"consumeCost\">비용 소비</label>\n                    </div>\n                    ${hasToggleableEffects ? `\n                        <div class=\"toggle-option\">\n                            <input type=\"checkbox\" id=\"toggleEffects\" name=\"toggleEffects\" checked>\n                            <label for=\"toggleEffects\">특기 효과 토글</label>\n                        </div>\n                    ` : ''}\n                    ${hasLimit ? `\n                        <div class=\"limit-option\">\n                            <input type=\"checkbox\" id=\"consumeLimit\" name=\"consumeLimit\" checked>\n                            <label for=\"consumeLimit\">사용횟수 소비</label>\n                            <span class=\"limit-value\">현재: ${currentLimit}회</span>\n                        </div>\n                    ` : ''}\n                </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            let toggleEffects = hasToggleableEffects && \n                                html.find('[name=\"toggleEffects\"]').is(\":checked\");\n                            let consumeLimit = hasLimit && \n                                html.find('[name=\"consumeLimit\"]').is(\":checked\");\n    \n                            if (consumeLimit) {\n                                // 사용횟수가 0 이하인 경우 경고\n                                if (currentLimit <= 0) {\n                                    ui.notifications.warn(\"남은 사용횟수가 없습니다!\");\n                                    return resolve(false);\n                                }\n    \n                                const specialtyItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n                                if (specialtyItem) {\n                                    await specialtyItem.update({\n                                        \"system.props.limit\": currentLimit - 1\n                                    });\n                                    console.log('사용횟수 감소:', currentLimit - 1);\n                                }\n                            }    \n                        \n                        if (consumeCost) {\n                            // FP 소비\n                            if (fpTotal > 0) {\n                                let fpValue = actor.system.props.fpvalue;\n                                await actor.update({ \n                                    \"system.props.fpvalue\": fpValue - fpTotal\n                                });\n                                console.log('FP 소비:', fpTotal);\n                            }\n                            \n                            // HP 소비\n                            if (hpTotal > 0) {\n                                let hpValue = actor.system.props.hpvalue;\n                                await actor.update({ \n                                    \"system.props.hpvalue\": hpValue - hpTotal\n                                });\n                                console.log('HP 소비:', hpTotal);\n                            }\n                            \n                            // EN 소비\n                            if (enTotal > 0) {\n                                let enValue = actor.system.props.envalue;\n                                await actor.update({ \n                                    \"system.props.envalue\": enValue - enTotal\n                                });\n                                console.log('EN 소비:', enTotal);\n                            }\n\n                            // 탄수 소비\n                            if (bulletTotal > 0) {\n                                const specialtyItem = actor.items.find(i => i.name === itemName);\n                                if (specialtyItem) {\n                                    const currentBullets = specialtyItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await specialtyItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                            }\n                            \n                            // 기타 효과 적용\n                            for (let effect of otherEffects) {\n                                if (effect) {\n                                    await applyEffect(selectedToken, effect);\n                                }\n                            }\n                        }\n\n                        if (toggleEffects) {\n                            await toggleItemEffects();\n                        }\n\n                        resolve(true);\n\n                        let content = `\n                            <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n                                <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n                                    <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                                        ${itemName}\n                                    </h3>\n                                    <span style=\"background:#e9ecef;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#4a4a4a\">\n                                        LV.${itemLevel}\n                                    </span>\n                                </div>\n\n                                <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTarget}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemRange}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemCost}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTiming}\n                                    </span>\n                                </div>\n\n                                ${itemEffect ? `\n                                    <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                                        <strong>효과:</strong> ${itemEffect}\n                                    </div>\n                                ` : ''}\n                            </div>`;\n\n                        let chatData = {\n                            content: content,\n                            speaker: ChatMessage.getSpeaker({ actor: actor })\n                        };\n\n                        await ChatMessage.create(chatData);\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\",\n                    callback: () => {\n                        console.log('비용 처리 취소');\n                        resolve(false);\n                    }\n                }\n            },\n            default: \"confirm\",\n            width: 400\n        }).render(true);\n    });\n}\n\nconst toggleItemEffects = async () => {\n    const item = actor.items.find(i => i.name === itemName);\n    if (!item) {\n        ui.notifications.warn(`${itemName}을(를) 찾을 수 없습니다.`);\n        return;\n    }\n    \n    const modifierGroups = new Set(\n        item.system.modifiers\n            .map(m => m.conditionalGroup)\n            .filter(group => group)\n    );\n\n    // 토글할 상태가 없는 경우 조용히 리턴\n    if (modifierGroups.size === 0) {\n        return;\n    }\n\n    let activeGroups = actor.system.activeConditionalModifierGroups || [];\n    const allGroupsActive = Array.from(modifierGroups)\n        .every(group => activeGroups.includes(group));\n\n    try {\n        if (allGroupsActive) {\n            activeGroups = activeGroups.filter(group => !modifierGroups.has(group));\n            ui.notifications.info(`${itemName}의 효과가 비활성화되었습니다.`);\n        } else {\n            modifierGroups.forEach(group => {\n                if (!activeGroups.includes(group)) {\n                    activeGroups.push(group);\n                }\n            });\n            ui.notifications.info(`${itemName}의 효과가 활성화되었습니다.`);\n        }\n        await actor.update({\n            \"system.activeConditionalModifierGroups\": activeGroups\n        });\n    } catch (error) {\n        console.error(\"효과 토글 중 오류 발생:\", error);\n        ui.notifications.error(\"효과 토글 중 오류가 발생했습니다.\");\n    }\n};\n\n// 토큰 선택 확인\nlet selectedToken = canvas.tokens.controlled[0];\nif (!selectedToken) {\n    ui.notifications.warn(\"토큰을 선택해주세요.\");\n    return;\n}\n\nlet actor = selectedToken.actor;\n\n// 비용 처리 실행\nhandleCost();\n}%"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "colName"
            ],
            "lhs": "크리티컬",
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "key"
            ],
            "lhs": "sidedamage",
            "rhs": "limit"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "value"
            ],
            "lhs": "",
            "rhs": "${item.limit}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "prefix"
            ],
            "lhs": "${item.sidedamage}$",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "colName"
            ],
            "lhs": "부공격력",
            "rhs": "사용횟수"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "key"
            ],
            "lhs": "weaponfinaldmg",
            "rhs": "bullets"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "value"
            ],
            "lhs": "${item.weaponfinaldmg}$",
            "rhs": "${item.bullets}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "colName"
            ],
            "lhs": "주공격력",
            "rhs": "탄수"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "key"
            ],
            "lhs": "weapontype",
            "rhs": "scost"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "value"
            ],
            "lhs": "${item.weapontype}$",
            "rhs": "${item.scost}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "colName"
            ],
            "lhs": "피해유형",
            "rhs": "대가"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "key"
            ],
            "lhs": "weaponbullets",
            "rhs": "starget"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "value"
            ],
            "lhs": "${item.bullets}$",
            "rhs": "${item.starget}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.srange}$`;\n    const weaponTarget = `${item.starget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "colName"
            ],
            "lhs": "탄수",
            "rhs": "대상"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "key"
            ],
            "lhs": "weaponcost",
            "rhs": "srange"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "value"
            ],
            "lhs": "${item.weaponcost}$\n\n",
            "rhs": "${item.srange}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.srange}$`;\n    const weaponTarget = `${item.starget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "colName"
            ],
            "lhs": "대가",
            "rhs": "사정거리"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "key"
            ],
            "lhs": "weapontarget",
            "rhs": "stiming"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "value"
            ],
            "lhs": "${item.weapontarget}$",
            "rhs": "${item.stiming}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "rollMessage"
            ],
            "lhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.weaponrange}$`;\n    const weaponTarget = `${item.weapontarget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%\n",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "rollMessageToChat"
            ],
            "lhs": false,
            "rhs": true
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "style"
            ],
            "lhs": "button",
            "rhs": "label"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "colName"
            ],
            "lhs": "대상",
            "rhs": "타이밍"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "key"
            ],
            "lhs": "weaponrange",
            "rhs": "stype"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "value"
            ],
            "lhs": "${item.weaponrange}$",
            "rhs": "${item.stype}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "rollMessage"
            ],
            "lhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.weaponrange}$`;\n    const weaponTarget = `${item.weapontarget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%\n",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "rollMessageToChat"
            ],
            "lhs": false,
            "rhs": true
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "style"
            ],
            "lhs": "button",
            "rhs": "label"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "colName"
            ],
            "lhs": "사정거리",
            "rhs": "종류"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "key"
            ],
            "lhs": "part",
            "rhs": "slv"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "value"
            ],
            "lhs": "${item.part}$",
            "rhs": "${item.slv}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "colName"
            ],
            "lhs": "부위",
            "rhs": "레벨"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "templateFilter",
              0
            ],
            "lhs": "MM7gLtk9hJiYZc8f",
            "rhs": "xL5PDDgxvo1pkkeh"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "name"
            ],
            "lhs": "무장",
            "rhs": "특기"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "key"
            ],
            "lhs": "guardian",
            "rhs": "weapontab"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "key"
            ],
            "lhs": "guardian",
            "rhs": "waeapon"
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 10,
            "item": {
              "kind": "N",
              "rhs": {
                "key": "weaponroll",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "사용",
                "prefix": "",
                "suffix": "",
                "rollMessage": "%{const MCS = window.MetalicCombatSystem;\n    if (!MCS) {\n        ui.notifications.error(\"전투 시스템을 찾을 수 없습니다. 모듈이 활성화되어 있는지 확인해주세요.\");\n        return;\n    }\n\n    const debugMode = true;\n\n    if (!debugMode) {\n        console.log = function() {}; // console.log 비활성화\n    }\n    \n    // 필요한 아이템 정보들을 변수로 선언\n    let itemName = `${item.name}$`;\n    let itemWeaponCrit = `${item.weaponcrit}$`;\n    let itemWeaponType = `${item.weapontype}$`;\n    let itemWeaponRange = `${item.weaponrange}$`;\n    let itemWeaponCost = `${item.weaponcost}$`;\n    let itemWeaponFinalDmg = `${item.weaponfinaldmg}$`;\n    let sidedamage = `${item.sidedamage}$`;\n    let itemWeaponEffect = `${item.weaponeffect}$`;\n    let dmgdiebonus = `${dmgdiebonus}$`;\n    let dmgnumbonus = `${dmgnumbonus}$`;\n    let atkcritMod = `${atkcritmod}$`;\n    let attackPart = `${item.part}$`;\n    let itemWeaponFx = `${item.weaponfx}$`;\n    let itemWeaponTarget = `${item.weapontarget}$`;\n    let atk = `${atk}$`;\n    let itemSniping = `${item.sniping}$`;\n    let itemArmorIgnore = `${item.armorignore}$`;\n    let weaponkind = `${item.weaponkind}$`;\n    \n    console.log('아이템 정보:', {\n        itemName, itemWeaponCrit, itemWeaponType, itemWeaponRange, \n        itemWeaponCost, itemWeaponFinalDmg, itemWeaponEffect,\n        dmgdiebonus, dmgnumbonus, itemWeaponFx, atkcritMod, attackPart,\n        weaponkind\n    });\n    \n    const attackers = canvas.tokens.controlled;\n    if (attackers.length === 0) {\n        ui.notifications.warn(\"공격할 토큰을 선택해주세요.\");\n        return;\n    }\n    \n    console.log('선택된 공격자 토큰:', attackers);\n    \n    let selectedToken = canvas.tokens.controlled[0];\n    if (!selectedToken) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n    \n    console.log('선택된 토큰:', selectedToken);\n    \n    let actor = selectedToken.actor;\n    const targets = Array.from(game.user.targets);\n    const targetIds = targets.length > 0 ? targets.map(t => t.id) : [];\n    \n    console.log('선택된 액터:', actor);\n    console.log('대상 토큰:', targets);\n    console.log('대상 ID:', targetIds);\n    \n    // 상태 효과 적용 함수\n    async function applyEffect(token, effectName) {\n        console.log(`상태 효과 적용 시작 - 토큰: ${token.name}, 효과: ${effectName}`);\n        if (effectName.toLowerCase().trim() === '없음') {\n            return;\n        }\n         \n        const statusId = effectName.toLowerCase().trim();\n        const statusEffect = CONFIG.statusEffects.find(e => \n            e.id === statusId || \n            e.label.toLowerCase() === statusId\n        );\n        \n        if (!statusEffect) {\n            ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n            console.log(`상태 효과 적용 실패 - 효과를 찾을 수 없음: ${effectName}`);\n            return;\n        }\n    \n        try {\n            const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n            if (!hasEffect) {\n                await token.toggleEffect(statusEffect);\n                ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n                console.log(`상태 효과 적용 완료 - 토큰: ${token.name}, 효과: ${effectName}`);\n            } else {\n                ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n                console.log(`상태 효과 적용 건너뜀 - 이미 적용됨: ${effectName}`);\n            }\n        } catch (error) {\n            ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n            console.error(`상태 효과 적용 중 오류 발생 - 토큰: ${token.name}, 효과: ${effectName}`, error);\n        }\n    }\n    \n    // 비용 처리 함수\n    async function handleCost() {\n        console.log('비용 처리 시작');\n        \n        let cost = itemWeaponCost.toLowerCase().replace(/\\s+/g, '');\n        console.log('처리할 비용 문자열:', cost);\n        \n        // 비용 패턴 정규식 수정 - 탄수 패턴 추가\n        const costPattern = /(\\d+)?(?:fp|hp|en|탄수)(\\d+)?/g;\n        const effectPattern = /[^,]+/g;\n        \n        // 모든 비용 패턴 찾기\n        let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n        console.log('찾은 모든 비용 패턴:', allCosts);\n    \n        // 비용 유형별로 분리하고 계산\n        let fpTotal = 0;\n        let hpTotal = 0;\n        let enTotal = 0;\n        let bulletTotal = 0;\n        \n        allCosts.forEach(match => {\n            const type = match[2];  // fp, hp, en, 탄수 중 하나\n            const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n            const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n            const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n            \n            switch(type) {\n                case 'fp': fpTotal += value; break;\n                case 'hp': hpTotal += value; break;\n                case 'en': enTotal += value; break;\n                case '탄수': bulletTotal += value; break;\n            }\n        });\n    \n        // 현재 무기 아이템 찾기\n        const weaponItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n        if (!weaponItem) {\n            console.error('무기 아이템을 찾을 수 없습니다:', itemName);\n            return false;\n        }\n    \n        console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n    \n        // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n        let remainingText = cost;\n        allCosts.forEach(match => {\n            remainingText = remainingText.replace(match[0], ',');\n        });\n    \n        // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n        let otherEffects = remainingText\n            .split(',')\n            .map(effect => effect.trim())\n            .filter(effect => effect !== '');\n    \n        console.log('추출된 효과:', otherEffects);\n    \n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"비용 소비 확인\",\n                content: `\n                    <style>\n                        .cost-dialog {\n                            background: #f0f0f0;\n                            padding: 15px;\n                            border-radius: 8px;\n                        }\n                        .cost-list {\n                            background: white;\n                            padding: 10px 15px;\n                            border-radius: 6px;\n                            margin: 10px 0;\n                            box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                        }\n                        .cost-item {\n                            display: flex;\n                            align-items: center;\n                            gap: 8px;\n                            padding: 4px 0;\n                        }\n                        .cost-label {\n                            display: inline-flex;\n                            align-items: center;\n                            padding: 2px 6px;\n                            border-radius: 4px;\n                            font-size: 12px;\n                            font-weight: bold;\n                        }\n                        .fp-label { color: #2c7be5; }\n                        .hp-label { color: #dc3545; }\n                        .en-label { color: #6c757d; }\n                        .bullet-label { color: #ffc107; }\n                        .effect-label { color: #198754; }\n                        .consume-option {\n                            background: #f8f9fa;\n                            padding: 8px;\n                            border-radius: 6px;\n                            margin-top: 10px;\n                            display: flex;\n                            align-items: center;\n                            gap: 10px;\n                        }\n                    </style>\n                    <div class=\"cost-dialog\">\n                        <div class=\"cost-list\">\n                            ${fpTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label fp-label\">FP</span>\n                                    <span>${fpTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${hpTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label hp-label\">HP</span>\n                                    <span>${hpTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${enTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label en-label\">EN</span>\n                                    <span>${enTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${bulletTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label bullet-label\">탄수</span>\n                                    <span>${bulletTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${otherEffects.length > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label effect-label\">효과</span>\n                                    <span>${otherEffects.join(\", \")}</span>\n                                </div>\n                            ` : \"\"}\n                        </div>\n                        <div class=\"consume-option\">\n                            <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                            <label for=\"consumeCost\">비용 소비</label>\n                        </div>\n                    </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            console.log('비용 소비 확인:', consumeCost);\n                            \n                            if (consumeCost) {\n                                // FP 소비\n                                if (fpTotal > 0) {\n                                    let fpValue = actor.system.props.fpvalue;\n                                    await actor.update({ \n                                        \"system.props.fpvalue\": fpValue - fpTotal\n                                    });\n                                    console.log('FP 소비:', fpTotal);\n                                }\n                                \n                                // HP 소비\n                                if (hpTotal > 0) {\n                                    let hpValue = actor.system.props.hpvalue;\n                                    await actor.update({ \n                                        \"system.props.hpvalue\": hpValue - hpTotal\n                                    });\n                                    console.log('HP 소비:', hpTotal);\n                                }\n                                \n                                // EN 소비\n                                if (enTotal > 0) {\n                                    let enValue = actor.system.props.envalue;\n                                    await actor.update({ \n                                        \"system.props.envalue\": enValue - enTotal\n                                    });\n                                    console.log('EN 소비:', enTotal);\n                                }\n    \n                                // 탄수 소비\n                                if (bulletTotal > 0 && weaponItem) {\n                                    let currentBullets = weaponItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await weaponItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                                \n                                // 기타 효과 적용\n                                for (let effect of otherEffects) {\n                                    if (effect) {  // 빈 문자열이 아닌 경우에만 적용\n                                        await applyEffect(attackers[0], effect);\n                                    }\n                                }\n                            }\n                            console.log('비용 처리 완료');\n                            resolve(true);\n                        }\n                    },\n                    cancel: {\n                        icon: '<i class=\"fas fa-times\"></i>',\n                        label: \"취소\",\n                        callback: () => {\n                            console.log('비용 처리 취소');\n                            resolve(false);\n                        }\n                    }\n                },\n                default: \"confirm\",\n                width: 400\n            }).render(true);\n        });\n    }\n    \n    // 아이템 정보 카드 표시\n    async function displayItemCard() {\n        console.log('아이템 정보 카드 표시 시작');\n        \n        let content = `\n        <div class=\"diceroll\">\n            <div class=\"item-card\" style=\"background-color: #f9f9f9; border: 1px solid #ddd; border-radius: 5px; margin-bottom: 10px;\">\n                <div style=\"background-color: #e9e9e9; padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">\n                    <h3 style=\"margin: 0;\">${itemName} (${itemWeaponCrit})</h3>\n                </div>\n                <div style=\"padding: 8px;\">\n                    <div style=\"text-align: center; margin-bottom: 8px;\">\n                        ${attackPart} / ${itemWeaponType} / ${itemWeaponRange} / ${itemWeaponCost} / ${weaponkind}\n                    </div>\n                    <div style=\"margin-top: 8px;\">\n                        <strong>효과:</strong><br>\n                        ${itemWeaponEffect}\n                    </div>\n                </div>\n            </div>\n        </div>`;\n    \n        await ChatMessage.create({\n            author: game.user.id,\n            speaker: ChatMessage.getSpeaker({ actor: actor }),\n            content: content\n        });\n        \n        console.log('아이템 정보 카드 표시 완료');\n    }\n    \n    // 실행 순서 시작\n    (async () => {\n        console.log('매크로 실행 시작');\n        \n        // 1. 특기 선택 먼저 실행\n        const selectedSpecialties = await MCS.CombatManager._showEffectSelectionDialog(null, actor);\n        if (selectedSpecialties?.length) {\n            const totalCost = MCS.CombatManager._calculateEffectsCost(selectedSpecialties);\n            if (!await MCS.CombatManager._handleEffectsCost(totalCost, actor, selectedSpecialties)) {\n                return;\n            }\n            await MCS.CombatManager._activateEffects(actor, selectedSpecialties);\n        }\n    \n        // 2. 비용 처리\n        const costConfirmed = await handleCost();\n        if (!costConfirmed) {\n            console.log('비용 처리 취소로 인해 매크로 실행 종료');\n            return;\n        }\n    \n        // 3. 무장 정보 객체 생성\n        const weaponData = {\n            name: itemName,\n            weaponcrit: itemWeaponCrit,\n            weapontype: itemWeaponType,\n            weaponrange: itemWeaponRange,\n            weaponcost: itemWeaponCost,\n            weaponfinaldmg: itemWeaponFinalDmg,\n            sidedamage: sidedamage,\n            weaponkind: weaponkind,\n            weaponeffect: itemWeaponEffect,\n            weapontarget: itemWeaponTarget,\n            weaponfx: itemWeaponFx,\n            part: attackPart,\n            dmgdiebonus: dmgdiebonus,\n            dmgnumbonus: dmgnumbonus,\n            atk: atk,\n            sniping: itemSniping,\n            armorignore: itemArmorIgnore,\n        };\n        console.log(\"웨폰데이터 :\",weaponData);\n    \n        // 4. 명중 판정 다이얼로그\n        new Dialog({\n            title: \"명중 판정\",\n            content: `\n                <style>\n    .attack-dialog {\n        background: #f5f5f5;\n        padding: 15px;\n        border-radius: 8px;\n    }\n    .attack-dialog .form-group {\n        background: white;\n        padding: 12px;\n        border-radius: 6px;\n        box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n        margin-bottom: 15px;\n    }\n    .attack-dialog .form-group label {\n        display: block;\n        margin-bottom: 8px;\n        color: #4a4a4a;\n        font-weight: bold;\n    }\n    .attack-dialog .form-group select,\n    .attack-dialog .form-group input {\n        width: 100%;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background: white;\n        height: 38px;\n        font-size: 14px;\n    }\n    .attack-dialog .form-group select:focus,\n    .attack-dialog .form-group input:focus {\n        border-color: #4a4a4a;\n        box-shadow: 0 0 0 2px rgba(74,74,74,0.2);\n        outline: none;\n    }\n                    }\n                </style>\n                <div class=\"attack-dialog\">\n                    <div class=\"form-group\">\n                        <label>판정 능력치:</label>\n                        <select name=\"attackType\">\n                            <option value=\"hit\" ${attackPart?.includes('백병') ? 'selected' : ''}>명중</option>\n                            <option value=\"shelling\" ${attackPart?.includes('원격') ? 'selected' : ''}>포격</option>\n                            <option value=\"evasion\">회피</option>\n                            <option value=\"pro\">방벽</option>\n                            <option value=\"init\">행동</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>수정치:</label>\n                        <input type=\"number\" name=\"modifier\" value=\"0\">\n                    </div>\n                </div>\n            `,\n            buttons: {\n                roll: {\n                    icon: '<i class=\"fas fa-dice\"></i>',\n                    label: \"공격\",\n                    callback: async (html) => {\n                        const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                        const selectedAttackType = html.find('[name=\"attackType\"]').val();\n                        \n                        const attackerIds = attackers.map(a => a.id);\n                        \n                        if (targetIds.length === 0) {\n                            await MCS.CombatManager.performSimpleAttack(attackerIds, selectedAttackType, modifier);\n                        } else {\n                            await MCS.CombatManager.performMultiAttack(\n                                attackerIds, \n                                targetIds, \n                                selectedAttackType, \n                                modifier,\n                                weaponData.weaponcrit,\n                                actor.system.props.atkcritmod || '0',\n                                weaponData.part,\n                                weaponData,\n                                selectedSpecialties\n                            );\n                        }\n                        if (selectedSpecialties?.length) {\n                            // 자동 데미지 굴림일 때만 여기서 특기 해제\n                            if (game.settings.get(\"metalic-combat-system\", \"autoDamageRoll\")) {\n                                await MCS.CombatManager._deactivateEffects(actor, selectedSpecialties);\n                            }\n                        }\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\"\n                }\n            },\n            default: \"roll\",\n            width: 400\n        }).render(true);\n    })();}%",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": false,
                "style": "button",
                "align": "left",
                "colName": ""
              }
            }
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "key"
            ],
            "lhs": "guardiansize",
            "rhs": "weaponcrit"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "value"
            ],
            "lhs": "${item.guardiansize}$",
            "rhs": "${item.weaponcrit}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "colName"
            ],
            "lhs": "사이즈",
            "rhs": "크리티컬"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "key"
            ],
            "lhs": "guardianspeed",
            "rhs": "sidedamage"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "value"
            ],
            "lhs": "${item.guardianspeed}$",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "prefix"
            ],
            "lhs": "",
            "rhs": "${item.sidedamage}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "colName"
            ],
            "lhs": "이동력",
            "rhs": "부공격력"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "key"
            ],
            "lhs": "guardianweapon",
            "rhs": "weaponfinaldmg"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "value"
            ],
            "lhs": "${item.guardianweapon}$",
            "rhs": "${item.weaponfinaldmg}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "colName"
            ],
            "lhs": "고정무장",
            "rhs": "주공격력"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "key"
            ],
            "lhs": "guardianatk",
            "rhs": "weapontype"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "value"
            ],
            "lhs": "${item.guardianatk}$",
            "rhs": "${item.weapontype}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "colName"
            ],
            "lhs": "공격력",
            "rhs": "피해유형"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "key"
            ],
            "lhs": "guardianinit",
            "rhs": "weaponbullets"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "value"
            ],
            "lhs": "${item.guardianinit}$",
            "rhs": "${item.bullets}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "colName"
            ],
            "lhs": "행동",
            "rhs": "탄수"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "key"
            ],
            "lhs": "guardianpro",
            "rhs": "weaponcost"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "value"
            ],
            "lhs": "${item.guardianpro}$",
            "rhs": "${item.weaponcost}$\n\n"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "colName"
            ],
            "lhs": "방벽",
            "rhs": "대가"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "key"
            ],
            "lhs": "guardianshelling",
            "rhs": "weapontarget"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "value"
            ],
            "lhs": "${item.guardianshelling}$",
            "rhs": "${item.weapontarget}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.weaponrange}$`;\n    const weaponTarget = `${item.weapontarget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%\n"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "colName"
            ],
            "lhs": "포격",
            "rhs": "대상"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "key"
            ],
            "lhs": "guardianevasion",
            "rhs": "weaponrange"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "value"
            ],
            "lhs": "${item.guardianevasion}$",
            "rhs": "${item.weaponrange}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.weaponrange}$`;\n    const weaponTarget = `${item.weapontarget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%\n"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "colName"
            ],
            "lhs": "회피",
            "rhs": "사정거리"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "key"
            ],
            "lhs": "guardianhit",
            "rhs": "part"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "value"
            ],
            "lhs": "${item.guardianhit}$",
            "rhs": "${item.part}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "colName"
            ],
            "lhs": "명중",
            "rhs": "부위"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "templateFilter",
              0
            ],
            "lhs": "X37eEl8hKTkIW965",
            "rhs": "MM7gLtk9hJiYZc8f"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "name"
            ],
            "lhs": "가디언",
            "rhs": "무장"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "key"
            ],
            "lhs": "classitem",
            "rhs": "guardian"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "key"
            ],
            "lhs": "classitem",
            "rhs": "guardian"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "key"
            ],
            "lhs": "classatk",
            "rhs": "isEquipped"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "value"
            ],
            "lhs": "${item.classatk}$",
            "rhs": "${item.isEquipped? '✓' : '☐'}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "${setPropertyInEntity('item', 'isEquipped', 'item.isEquipped == true ? false : true')}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "colName"
            ],
            "lhs": "공격",
            "rhs": "장착"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "key"
            ],
            "lhs": "classen",
            "rhs": "guardiansize"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "value"
            ],
            "lhs": "${item.classen}$",
            "rhs": "${item.guardiansize}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "colName"
            ],
            "lhs": "감응",
            "rhs": "사이즈"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "key"
            ],
            "lhs": "classhp",
            "rhs": "guardianspeed"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "value"
            ],
            "lhs": "${item.classhp}$",
            "rhs": "${item.guardianspeed}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "colName"
            ],
            "lhs": "내구",
            "rhs": "이동력"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "key"
            ],
            "lhs": "classfp",
            "rhs": "guardianweapon"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "value"
            ],
            "lhs": "${item.classfp}$",
            "rhs": "${item.guardianweapon}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "colName"
            ],
            "lhs": "역장",
            "rhs": "고정무장"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "key"
            ],
            "lhs": "classinit",
            "rhs": "guardianatk"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "value"
            ],
            "lhs": "${item.classinit}$",
            "rhs": "${item.guardianatk}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "colName"
            ],
            "lhs": "행동",
            "rhs": "공격력"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "key"
            ],
            "lhs": "classpro",
            "rhs": "guardianinit"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "value"
            ],
            "lhs": "${item.classpro}$",
            "rhs": "${item.guardianinit}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "colName"
            ],
            "lhs": "방벽",
            "rhs": "행동"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "key"
            ],
            "lhs": "classshelling",
            "rhs": "guardianpro"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "value"
            ],
            "lhs": "${item.classshelling}$",
            "rhs": "${item.guardianpro}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "colName"
            ],
            "lhs": "포격",
            "rhs": "방벽"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "key"
            ],
            "lhs": "classevasion",
            "rhs": "guardianshelling"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "value"
            ],
            "lhs": "${item.classevasion}$",
            "rhs": "${item.guardianshelling}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "colName"
            ],
            "lhs": "회피",
            "rhs": "포격"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "key"
            ],
            "lhs": "classhit",
            "rhs": "guardianevasion"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "value"
            ],
            "lhs": "${item.classhit}$",
            "rhs": "${item.guardianevasion}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "colName"
            ],
            "lhs": "명중",
            "rhs": "회피"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "key"
            ],
            "lhs": "classlv",
            "rhs": "guardianhit"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "value"
            ],
            "lhs": "${item.classlv}$",
            "rhs": "${item.guardianhit}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "colName"
            ],
            "lhs": "레벨",
            "rhs": "명중"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "templateFilter",
              0
            ],
            "lhs": "nwApP4fD3OWDKGkH",
            "rhs": "X37eEl8hKTkIW965"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "name"
            ],
            "lhs": "클래스",
            "rhs": "가디언"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              17,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              16,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              5,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              7,
              "contents",
              0,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              4,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "maxLength"
            ]
          }
        ],
        [
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents"
            ],
            "index": 4,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "itemtab",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "tab",
                "contents": [
                  {
                    "key": "iitem",
                    "cssClass": "",
                    "role": "0",
                    "permission": "0",
                    "tooltip": "",
                    "visibilityFormula": "",
                    "type": "itemContainer",
                    "contents": [],
                    "rowLayout": [
                      {
                        "key": "itype",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.itype}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "종류"
                      },
                      {
                        "key": "itiming",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.itiming}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "타이밍"
                      },
                      {
                        "key": "iquantity",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.iquantity}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "수량"
                      },
                      {
                        "key": "idifficulty",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.idifficulty}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "구입난이도"
                      },
                      {
                        "key": "itemuse",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "사용",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemTiming = `${item.itiming}$`;\nlet itemQuantity = `${item.iquantity}$`;\nlet itemEffect = `${item.ieffect}$`;\n\nlet content = `\n    <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n        <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n            <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                ${itemName}\n            </h3>\n        </div>\n\n        <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemTiming}\n            </span>\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemQuantity}\n            </span>\n        </div>\n\n        ${itemEffect ? `\n            <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                <strong>효과:</strong> ${itemEffect}\n            </div>\n        ` : ''}\n    </div>`;\n\nlet chatData = {\n    user: game.user._id,\n    content: content\n};\n\nreturn ChatMessage.create(chatData);\n}%",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "button",
                        "align": "left",
                        "colName": ""
                      }
                    ],
                    "head": false,
                    "deleteWarning": false,
                    "title": "",
                    "hideEmpty": false,
                    "sortOption": "manual",
                    "headDisplay": true,
                    "showDelete": true,
                    "statusIcon": false,
                    "nameAlign": "left",
                    "nameLabel": "이름",
                    "templateFilter": [
                      "aSaP8Yx3Zmv1pxIr"
                    ],
                    "itemFilterFormula": "",
                    "sortPredicates": []
                  }
                ],
                "name": "아이템"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "key"
            ],
            "lhs": "option",
            "rhs": "itemtab"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "key"
            ],
            "lhs": "option",
            "rhs": "iitem"
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 9,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "isEquipped",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.isEquipped? '✓' : '☐'}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "${setPropertyInEntity('item', 'isEquipped', 'item.isEquipped == true ? false : true')}$",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": true,
                "style": "button",
                "align": "left",
                "colName": "장착"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 8,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionspeed",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionspeed}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "이동력"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 7,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionatk",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionatk}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "공격력"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 6,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionen",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionen}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "감응"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 5,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionfp",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionfp}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "역장"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "key"
            ],
            "lhs": "optioninit",
            "rhs": "itemuse"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "value"
            ],
            "lhs": "${item.optioninit}$",
            "rhs": "사용"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemTiming = `${item.itiming}$`;\nlet itemQuantity = `${item.iquantity}$`;\nlet itemEffect = `${item.ieffect}$`;\n\nlet content = `\n    <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n        <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n            <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                ${itemName}\n            </h3>\n        </div>\n\n        <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemTiming}\n            </span>\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemQuantity}\n            </span>\n        </div>\n\n        ${itemEffect ? `\n            <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                <strong>효과:</strong> ${itemEffect}\n            </div>\n        ` : ''}\n    </div>`;\n\nlet chatData = {\n    user: game.user._id,\n    content: content\n};\n\nreturn ChatMessage.create(chatData);\n}%"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "colName"
            ],
            "lhs": "행동",
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "key"
            ],
            "lhs": "optionpro",
            "rhs": "idifficulty"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "value"
            ],
            "lhs": "${item.optionpro}$",
            "rhs": "${item.idifficulty}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "colName"
            ],
            "lhs": "방벽",
            "rhs": "구입난이도"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "key"
            ],
            "lhs": "optionshelling",
            "rhs": "iquantity"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "value"
            ],
            "lhs": "${item.optionshelling}$",
            "rhs": "${item.iquantity}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "colName"
            ],
            "lhs": "포격",
            "rhs": "수량"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "key"
            ],
            "lhs": "optionevasion",
            "rhs": "itiming"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "value"
            ],
            "lhs": "${item.optionevasion}$",
            "rhs": "${item.itiming}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "colName"
            ],
            "lhs": "회피",
            "rhs": "타이밍"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "key"
            ],
            "lhs": "optionhit",
            "rhs": "itype"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "value"
            ],
            "lhs": "${item.optionhit}$",
            "rhs": "${item.itype}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "colName"
            ],
            "lhs": "명중",
            "rhs": "종류"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "contents",
              0,
              "templateFilter",
              0
            ],
            "lhs": "WAdeM4z6efeMcdIw",
            "rhs": "aSaP8Yx3Zmv1pxIr"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              3,
              "name"
            ],
            "lhs": "옵션",
            "rhs": "아이템"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "key"
            ],
            "lhs": "specialtytab",
            "rhs": "option"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "key"
            ],
            "lhs": "specialty",
            "rhs": "option"
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 9,
            "item": {
              "kind": "N",
              "rhs": {
                "key": "isEquipped",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.isEquipped? '✓' : '☐'}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "${setPropertyInEntity('item', 'isEquipped', 'item.isEquipped == true ? false : true')}$",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": true,
                "style": "button",
                "align": "left",
                "colName": "장착"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "key"
            ],
            "lhs": "sroll",
            "rhs": "optionspeed"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "value"
            ],
            "lhs": "사용",
            "rhs": "${item.optionspeed}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "rollMessage"
            ],
            "lhs": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemLevel = `${item.slv}$`;\nlet itemTarget = `${item.starget}$`;\nlet itemRange = `${item.srange}$`;\nlet itemCost = `${item.scost}$`;\nlet itemTiming = `${item.stiming}$`;\nlet itemEffect = `${item.seffect}$`;\nlet modifierName = `${item.name}$`;\nlet itemLimit  = `${item.limit}$`;\n\n// 상태 효과 적용 함수를 먼저 정의\nasync function applyEffect(token, effectName) {\n    // '없음'인 경우 그냥 리턴\n    if (effectName.toLowerCase().trim() === '없음') {\n        return;\n    }\n\n    const statusId = effectName.toLowerCase().trim();\n    const statusEffect = CONFIG.statusEffects.find(e => \n        e.id === statusId || \n        e.label.toLowerCase() === statusId\n    );\n    \n    if (!statusEffect) {\n        ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n        return;\n    }\n    \n    try {\n        const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n        if (!hasEffect) {\n            await token.toggleEffect(statusEffect);\n            ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n        } else {\n            ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n        }\n    } catch (error) {\n        ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n        console.error(error);\n    }\n}\n\n// 비용 처리 함수\nasync function handleCost() {\n    console.log('비용 처리 시작');\n    \n    let cost = itemCost.toLowerCase().replace(/\\s+/g, '');\n    console.log('처리할 비용 문자열:', cost);\n    \n    // 모든 비용 패턴 찾기 (탄수 패턴 추가)\n    let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n    console.log('찾은 모든 비용 패턴:', allCosts);\n\n    // 비용 유형별로 분리하고 계산\n    let fpTotal = 0;\n    let hpTotal = 0;\n    let enTotal = 0;\n    let bulletTotal = 0;\n    \n    allCosts.forEach(match => {\n        const type = match[2];  // fp, hp, en, 탄수 중 하나\n        const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n        const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n        const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n        \n        switch(type) {\n            case 'fp': fpTotal += value; break;\n            case 'hp': hpTotal += value; break;\n            case 'en': enTotal += value; break;\n            case '탄수': bulletTotal += value; break;\n        }\n    });\n\n    // 무기 아이템 찾기\n    let weaponItems = actor.items.filter(i => \n        i.system?.props?.type === \"weapon\" && \n        i.system?.props?.bullets !== undefined\n    );\n\n    console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n\n    // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n    let remainingText = cost;\n    allCosts.forEach(match => {\n        remainingText = remainingText.replace(match[0], ',');\n    });\n\n    // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n    let otherEffects = remainingText\n        .split(',')\n        .map(effect => effect.trim())\n        .filter(effect => effect !== '');\n\n    console.log('추출된 효과:', otherEffects);\n\n    const item = actor.items.find(i => i.name === itemName);\n    const hasToggleableEffects = item?.system.modifiers\n        ?.some(m => m.conditionalGroup);\n\n    // 사용횟수 확인\n    const hasLimit = itemLimit && itemLimit !== '0' && itemLimit !== '$';\n    const currentLimit = hasLimit ? parseInt(itemLimit.replace('$', '')) : 0;\n\n    return new Promise((resolve) => {\n        new Dialog({\n            title: \"비용 소비 확인\",\n            content: `\n                <style>\n                    .cost-dialog {\n                        background: #f0f0f0;\n                        padding: 15px;\n                        border-radius: 8px;\n                    }\n                    .cost-list {\n                        background: white;\n                        padding: 10px 15px;\n                        border-radius: 6px;\n                        margin: 10px 0;\n                        box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                    }\n                    .cost-item {\n                        display: flex;\n                        align-items: center;\n                        gap: 8px;\n                        padding: 4px 0;\n                    }\n                    .cost-label {\n                        display: inline-flex;\n                        align-items: center;\n                        padding: 2px 6px;\n                        border-radius: 4px;\n                        font-size: 12px;\n                        font-weight: bold;\n                    }\n                    .fp-label { color: #2c7be5; }\n                    .hp-label { color: #dc3545; }\n                    .en-label { color: #6c757d; }\n                    .bullet-label { color: #ffc107; }\n                    .effect-label { color: #198754; }\n                    .consume-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .toggle-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-value {\n                        color: #666;\n                        font-size: 12px;\n                        margin-left: auto;\n                    }                        \n                </style>\n                <div class=\"cost-dialog\">\n                    <div class=\"cost-list\">\n                        ${fpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label fp-label\">FP</span>\n                                <span>${fpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${hpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label hp-label\">HP</span>\n                                <span>${hpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${enTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label en-label\">EN</span>\n                                <span>${enTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${bulletTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label bullet-label\">탄수</span>\n                                <span>${bulletTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${otherEffects.length > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label effect-label\">효과</span>\n                                <span>${otherEffects.join(\", \")}</span>\n                            </div>\n                        ` : \"\"}\n                    </div>\n                    <div class=\"consume-option\">\n                        <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                        <label for=\"consumeCost\">비용 소비</label>\n                    </div>\n                    ${hasToggleableEffects ? `\n                        <div class=\"toggle-option\">\n                            <input type=\"checkbox\" id=\"toggleEffects\" name=\"toggleEffects\" checked>\n                            <label for=\"toggleEffects\">특기 효과 토글</label>\n                        </div>\n                    ` : ''}\n                    ${hasLimit ? `\n                        <div class=\"limit-option\">\n                            <input type=\"checkbox\" id=\"consumeLimit\" name=\"consumeLimit\" checked>\n                            <label for=\"consumeLimit\">사용횟수 소비</label>\n                            <span class=\"limit-value\">현재: ${currentLimit}회</span>\n                        </div>\n                    ` : ''}\n                </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            let toggleEffects = hasToggleableEffects && \n                                html.find('[name=\"toggleEffects\"]').is(\":checked\");\n                            let consumeLimit = hasLimit && \n                                html.find('[name=\"consumeLimit\"]').is(\":checked\");\n    \n                            if (consumeLimit) {\n                                // 사용횟수가 0 이하인 경우 경고\n                                if (currentLimit <= 0) {\n                                    ui.notifications.warn(\"남은 사용횟수가 없습니다!\");\n                                    return resolve(false);\n                                }\n    \n                                const specialtyItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n                                if (specialtyItem) {\n                                    await specialtyItem.update({\n                                        \"system.props.limit\": currentLimit - 1\n                                    });\n                                    console.log('사용횟수 감소:', currentLimit - 1);\n                                }\n                            }    \n                        \n                        if (consumeCost) {\n                            // FP 소비\n                            if (fpTotal > 0) {\n                                let fpValue = actor.system.props.fpvalue;\n                                await actor.update({ \n                                    \"system.props.fpvalue\": fpValue - fpTotal\n                                });\n                                console.log('FP 소비:', fpTotal);\n                            }\n                            \n                            // HP 소비\n                            if (hpTotal > 0) {\n                                let hpValue = actor.system.props.hpvalue;\n                                await actor.update({ \n                                    \"system.props.hpvalue\": hpValue - hpTotal\n                                });\n                                console.log('HP 소비:', hpTotal);\n                            }\n                            \n                            // EN 소비\n                            if (enTotal > 0) {\n                                let enValue = actor.system.props.envalue;\n                                await actor.update({ \n                                    \"system.props.envalue\": enValue - enTotal\n                                });\n                                console.log('EN 소비:', enTotal);\n                            }\n\n                            // 탄수 소비\n                            if (bulletTotal > 0) {\n                                const specialtyItem = actor.items.find(i => i.name === itemName);\n                                if (specialtyItem) {\n                                    const currentBullets = specialtyItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await specialtyItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                            }\n                            \n                            // 기타 효과 적용\n                            for (let effect of otherEffects) {\n                                if (effect) {\n                                    await applyEffect(selectedToken, effect);\n                                }\n                            }\n                        }\n\n                        if (toggleEffects) {\n                            await toggleItemEffects();\n                        }\n\n                        resolve(true);\n\n                        let content = `\n                            <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n                                <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n                                    <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                                        ${itemName}\n                                    </h3>\n                                    <span style=\"background:#e9ecef;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#4a4a4a\">\n                                        LV.${itemLevel}\n                                    </span>\n                                </div>\n\n                                <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTarget}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemRange}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemCost}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTiming}\n                                    </span>\n                                </div>\n\n                                ${itemEffect ? `\n                                    <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                                        <strong>효과:</strong> ${itemEffect}\n                                    </div>\n                                ` : ''}\n                            </div>`;\n\n                        let chatData = {\n                            content: content,\n                            speaker: ChatMessage.getSpeaker({ actor: actor })\n                        };\n\n                        await ChatMessage.create(chatData);\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\",\n                    callback: () => {\n                        console.log('비용 처리 취소');\n                        resolve(false);\n                    }\n                }\n            },\n            default: \"confirm\",\n            width: 400\n        }).render(true);\n    });\n}\n\nconst toggleItemEffects = async () => {\n    const item = actor.items.find(i => i.name === itemName);\n    if (!item) {\n        ui.notifications.warn(`${itemName}을(를) 찾을 수 없습니다.`);\n        return;\n    }\n    \n    const modifierGroups = new Set(\n        item.system.modifiers\n            .map(m => m.conditionalGroup)\n            .filter(group => group)\n    );\n\n    // 토글할 상태가 없는 경우 조용히 리턴\n    if (modifierGroups.size === 0) {\n        return;\n    }\n\n    let activeGroups = actor.system.activeConditionalModifierGroups || [];\n    const allGroupsActive = Array.from(modifierGroups)\n        .every(group => activeGroups.includes(group));\n\n    try {\n        if (allGroupsActive) {\n            activeGroups = activeGroups.filter(group => !modifierGroups.has(group));\n            ui.notifications.info(`${itemName}의 효과가 비활성화되었습니다.`);\n        } else {\n            modifierGroups.forEach(group => {\n                if (!activeGroups.includes(group)) {\n                    activeGroups.push(group);\n                }\n            });\n            ui.notifications.info(`${itemName}의 효과가 활성화되었습니다.`);\n        }\n        await actor.update({\n            \"system.activeConditionalModifierGroups\": activeGroups\n        });\n    } catch (error) {\n        console.error(\"효과 토글 중 오류 발생:\", error);\n        ui.notifications.error(\"효과 토글 중 오류가 발생했습니다.\");\n    }\n};\n\n// 토큰 선택 확인\nlet selectedToken = canvas.tokens.controlled[0];\nif (!selectedToken) {\n    ui.notifications.warn(\"토큰을 선택해주세요.\");\n    return;\n}\n\nlet actor = selectedToken.actor;\n\n// 비용 처리 실행\nhandleCost();\n}%",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "rollMessageToChat"
            ],
            "lhs": false,
            "rhs": true
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "style"
            ],
            "lhs": "button",
            "rhs": "label"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "colName"
            ],
            "lhs": "",
            "rhs": "이동력"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "key"
            ],
            "lhs": "limit",
            "rhs": "optionatk"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "value"
            ],
            "lhs": "${item.limit}$",
            "rhs": "${item.optionatk}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "colName"
            ],
            "lhs": "사용횟수",
            "rhs": "공격력"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "key"
            ],
            "lhs": "bullets",
            "rhs": "optionen"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "value"
            ],
            "lhs": "${item.bullets}$",
            "rhs": "${item.optionen}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "colName"
            ],
            "lhs": "탄수",
            "rhs": "감응"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "key"
            ],
            "lhs": "scost",
            "rhs": "optionfp"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "value"
            ],
            "lhs": "${item.scost}$",
            "rhs": "${item.optionfp}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "colName"
            ],
            "lhs": "대가",
            "rhs": "역장"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "key"
            ],
            "lhs": "starget",
            "rhs": "optioninit"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "value"
            ],
            "lhs": "${item.starget}$",
            "rhs": "${item.optioninit}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessage"
            ],
            "lhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.srange}$`;\n    const weaponTarget = `${item.starget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessageToChat"
            ],
            "lhs": false,
            "rhs": true
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "style"
            ],
            "lhs": "button",
            "rhs": "label"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "colName"
            ],
            "lhs": "대상",
            "rhs": "행동"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "key"
            ],
            "lhs": "srange",
            "rhs": "optionpro"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "value"
            ],
            "lhs": "${item.srange}$",
            "rhs": "${item.optionpro}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "rollMessage"
            ],
            "lhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.srange}$`;\n    const weaponTarget = `${item.starget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "rollMessageToChat"
            ],
            "lhs": false,
            "rhs": true
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "style"
            ],
            "lhs": "button",
            "rhs": "label"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "colName"
            ],
            "lhs": "사정거리",
            "rhs": "방벽"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "key"
            ],
            "lhs": "stiming",
            "rhs": "optionshelling"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "value"
            ],
            "lhs": "${item.stiming}$",
            "rhs": "${item.optionshelling}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "colName"
            ],
            "lhs": "타이밍",
            "rhs": "포격"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "key"
            ],
            "lhs": "stype",
            "rhs": "optionevasion"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "value"
            ],
            "lhs": "${item.stype}$",
            "rhs": "${item.optionevasion}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "colName"
            ],
            "lhs": "종류",
            "rhs": "회피"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "key"
            ],
            "lhs": "slv",
            "rhs": "optionhit"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "value"
            ],
            "lhs": "${item.slv}$",
            "rhs": "${item.optionhit}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "colName"
            ],
            "lhs": "레벨",
            "rhs": "명중"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "templateFilter",
              0
            ],
            "lhs": "xL5PDDgxvo1pkkeh",
            "rhs": "WAdeM4z6efeMcdIw"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "name"
            ],
            "lhs": "특기",
            "rhs": "옵션"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "key"
            ],
            "lhs": "weapontab",
            "rhs": "specialtytab"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "key"
            ],
            "lhs": "waeapon",
            "rhs": "specialty"
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 10,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "weaponroll",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "사용",
                "prefix": "",
                "suffix": "",
                "rollMessage": "%{const MCS = window.MetalicCombatSystem;\n    if (!MCS) {\n        ui.notifications.error(\"전투 시스템을 찾을 수 없습니다. 모듈이 활성화되어 있는지 확인해주세요.\");\n        return;\n    }\n\n    const debugMode = true;\n\n    if (!debugMode) {\n        console.log = function() {}; // console.log 비활성화\n    }\n    \n    // 필요한 아이템 정보들을 변수로 선언\n    let itemName = `${item.name}$`;\n    let itemWeaponCrit = `${item.weaponcrit}$`;\n    let itemWeaponType = `${item.weapontype}$`;\n    let itemWeaponRange = `${item.weaponrange}$`;\n    let itemWeaponCost = `${item.weaponcost}$`;\n    let itemWeaponFinalDmg = `${item.weaponfinaldmg}$`;\n    let sidedamage = `${item.sidedamage}$`;\n    let itemWeaponEffect = `${item.weaponeffect}$`;\n    let dmgdiebonus = `${dmgdiebonus}$`;\n    let dmgnumbonus = `${dmgnumbonus}$`;\n    let atkcritMod = `${atkcritmod}$`;\n    let attackPart = `${item.part}$`;\n    let itemWeaponFx = `${item.weaponfx}$`;\n    let itemWeaponTarget = `${item.weapontarget}$`;\n    let atk = `${atk}$`;\n    let itemSniping = `${item.sniping}$`;\n    let itemArmorIgnore = `${item.armorignore}$`;\n    let weaponkind = `${item.weaponkind}$`;\n    \n    console.log('아이템 정보:', {\n        itemName, itemWeaponCrit, itemWeaponType, itemWeaponRange, \n        itemWeaponCost, itemWeaponFinalDmg, itemWeaponEffect,\n        dmgdiebonus, dmgnumbonus, itemWeaponFx, atkcritMod, attackPart,\n        weaponkind\n    });\n    \n    const attackers = canvas.tokens.controlled;\n    if (attackers.length === 0) {\n        ui.notifications.warn(\"공격할 토큰을 선택해주세요.\");\n        return;\n    }\n    \n    console.log('선택된 공격자 토큰:', attackers);\n    \n    let selectedToken = canvas.tokens.controlled[0];\n    if (!selectedToken) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n    \n    console.log('선택된 토큰:', selectedToken);\n    \n    let actor = selectedToken.actor;\n    const targets = Array.from(game.user.targets);\n    const targetIds = targets.length > 0 ? targets.map(t => t.id) : [];\n    \n    console.log('선택된 액터:', actor);\n    console.log('대상 토큰:', targets);\n    console.log('대상 ID:', targetIds);\n    \n    // 상태 효과 적용 함수\n    async function applyEffect(token, effectName) {\n        console.log(`상태 효과 적용 시작 - 토큰: ${token.name}, 효과: ${effectName}`);\n        if (effectName.toLowerCase().trim() === '없음') {\n            return;\n        }\n         \n        const statusId = effectName.toLowerCase().trim();\n        const statusEffect = CONFIG.statusEffects.find(e => \n            e.id === statusId || \n            e.label.toLowerCase() === statusId\n        );\n        \n        if (!statusEffect) {\n            ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n            console.log(`상태 효과 적용 실패 - 효과를 찾을 수 없음: ${effectName}`);\n            return;\n        }\n    \n        try {\n            const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n            if (!hasEffect) {\n                await token.toggleEffect(statusEffect);\n                ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n                console.log(`상태 효과 적용 완료 - 토큰: ${token.name}, 효과: ${effectName}`);\n            } else {\n                ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n                console.log(`상태 효과 적용 건너뜀 - 이미 적용됨: ${effectName}`);\n            }\n        } catch (error) {\n            ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n            console.error(`상태 효과 적용 중 오류 발생 - 토큰: ${token.name}, 효과: ${effectName}`, error);\n        }\n    }\n    \n    // 비용 처리 함수\n    async function handleCost() {\n        console.log('비용 처리 시작');\n        \n        let cost = itemWeaponCost.toLowerCase().replace(/\\s+/g, '');\n        console.log('처리할 비용 문자열:', cost);\n        \n        // 비용 패턴 정규식 수정 - 탄수 패턴 추가\n        const costPattern = /(\\d+)?(?:fp|hp|en|탄수)(\\d+)?/g;\n        const effectPattern = /[^,]+/g;\n        \n        // 모든 비용 패턴 찾기\n        let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n        console.log('찾은 모든 비용 패턴:', allCosts);\n    \n        // 비용 유형별로 분리하고 계산\n        let fpTotal = 0;\n        let hpTotal = 0;\n        let enTotal = 0;\n        let bulletTotal = 0;\n        \n        allCosts.forEach(match => {\n            const type = match[2];  // fp, hp, en, 탄수 중 하나\n            const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n            const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n            const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n            \n            switch(type) {\n                case 'fp': fpTotal += value; break;\n                case 'hp': hpTotal += value; break;\n                case 'en': enTotal += value; break;\n                case '탄수': bulletTotal += value; break;\n            }\n        });\n    \n        // 현재 무기 아이템 찾기\n        const weaponItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n        if (!weaponItem) {\n            console.error('무기 아이템을 찾을 수 없습니다:', itemName);\n            return false;\n        }\n    \n        console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n    \n        // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n        let remainingText = cost;\n        allCosts.forEach(match => {\n            remainingText = remainingText.replace(match[0], ',');\n        });\n    \n        // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n        let otherEffects = remainingText\n            .split(',')\n            .map(effect => effect.trim())\n            .filter(effect => effect !== '');\n    \n        console.log('추출된 효과:', otherEffects);\n    \n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"비용 소비 확인\",\n                content: `\n                    <style>\n                        .cost-dialog {\n                            background: #f0f0f0;\n                            padding: 15px;\n                            border-radius: 8px;\n                        }\n                        .cost-list {\n                            background: white;\n                            padding: 10px 15px;\n                            border-radius: 6px;\n                            margin: 10px 0;\n                            box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                        }\n                        .cost-item {\n                            display: flex;\n                            align-items: center;\n                            gap: 8px;\n                            padding: 4px 0;\n                        }\n                        .cost-label {\n                            display: inline-flex;\n                            align-items: center;\n                            padding: 2px 6px;\n                            border-radius: 4px;\n                            font-size: 12px;\n                            font-weight: bold;\n                        }\n                        .fp-label { color: #2c7be5; }\n                        .hp-label { color: #dc3545; }\n                        .en-label { color: #6c757d; }\n                        .bullet-label { color: #ffc107; }\n                        .effect-label { color: #198754; }\n                        .consume-option {\n                            background: #f8f9fa;\n                            padding: 8px;\n                            border-radius: 6px;\n                            margin-top: 10px;\n                            display: flex;\n                            align-items: center;\n                            gap: 10px;\n                        }\n                    </style>\n                    <div class=\"cost-dialog\">\n                        <div class=\"cost-list\">\n                            ${fpTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label fp-label\">FP</span>\n                                    <span>${fpTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${hpTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label hp-label\">HP</span>\n                                    <span>${hpTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${enTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label en-label\">EN</span>\n                                    <span>${enTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${bulletTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label bullet-label\">탄수</span>\n                                    <span>${bulletTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${otherEffects.length > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label effect-label\">효과</span>\n                                    <span>${otherEffects.join(\", \")}</span>\n                                </div>\n                            ` : \"\"}\n                        </div>\n                        <div class=\"consume-option\">\n                            <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                            <label for=\"consumeCost\">비용 소비</label>\n                        </div>\n                    </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            console.log('비용 소비 확인:', consumeCost);\n                            \n                            if (consumeCost) {\n                                // FP 소비\n                                if (fpTotal > 0) {\n                                    let fpValue = actor.system.props.fpvalue;\n                                    await actor.update({ \n                                        \"system.props.fpvalue\": fpValue - fpTotal\n                                    });\n                                    console.log('FP 소비:', fpTotal);\n                                }\n                                \n                                // HP 소비\n                                if (hpTotal > 0) {\n                                    let hpValue = actor.system.props.hpvalue;\n                                    await actor.update({ \n                                        \"system.props.hpvalue\": hpValue - hpTotal\n                                    });\n                                    console.log('HP 소비:', hpTotal);\n                                }\n                                \n                                // EN 소비\n                                if (enTotal > 0) {\n                                    let enValue = actor.system.props.envalue;\n                                    await actor.update({ \n                                        \"system.props.envalue\": enValue - enTotal\n                                    });\n                                    console.log('EN 소비:', enTotal);\n                                }\n    \n                                // 탄수 소비\n                                if (bulletTotal > 0 && weaponItem) {\n                                    let currentBullets = weaponItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await weaponItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                                \n                                // 기타 효과 적용\n                                for (let effect of otherEffects) {\n                                    if (effect) {  // 빈 문자열이 아닌 경우에만 적용\n                                        await applyEffect(attackers[0], effect);\n                                    }\n                                }\n                            }\n                            console.log('비용 처리 완료');\n                            resolve(true);\n                        }\n                    },\n                    cancel: {\n                        icon: '<i class=\"fas fa-times\"></i>',\n                        label: \"취소\",\n                        callback: () => {\n                            console.log('비용 처리 취소');\n                            resolve(false);\n                        }\n                    }\n                },\n                default: \"confirm\",\n                width: 400\n            }).render(true);\n        });\n    }\n    \n    // 아이템 정보 카드 표시\n    async function displayItemCard() {\n        console.log('아이템 정보 카드 표시 시작');\n        \n        let content = `\n        <div class=\"diceroll\">\n            <div class=\"item-card\" style=\"background-color: #f9f9f9; border: 1px solid #ddd; border-radius: 5px; margin-bottom: 10px;\">\n                <div style=\"background-color: #e9e9e9; padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">\n                    <h3 style=\"margin: 0;\">${itemName} (${itemWeaponCrit})</h3>\n                </div>\n                <div style=\"padding: 8px;\">\n                    <div style=\"text-align: center; margin-bottom: 8px;\">\n                        ${attackPart} / ${itemWeaponType} / ${itemWeaponRange} / ${itemWeaponCost} / ${weaponkind}\n                    </div>\n                    <div style=\"margin-top: 8px;\">\n                        <strong>효과:</strong><br>\n                        ${itemWeaponEffect}\n                    </div>\n                </div>\n            </div>\n        </div>`;\n    \n        await ChatMessage.create({\n            author: game.user.id,\n            speaker: ChatMessage.getSpeaker({ actor: actor }),\n            content: content\n        });\n        \n        console.log('아이템 정보 카드 표시 완료');\n    }\n    \n    // 실행 순서 시작\n    (async () => {\n        console.log('매크로 실행 시작');\n        \n        // 1. 특기 선택 먼저 실행\n        const selectedSpecialties = await MCS.CombatManager._showEffectSelectionDialog(null, actor);\n        if (selectedSpecialties?.length) {\n            const totalCost = MCS.CombatManager._calculateEffectsCost(selectedSpecialties);\n            if (!await MCS.CombatManager._handleEffectsCost(totalCost, actor, selectedSpecialties)) {\n                return;\n            }\n            await MCS.CombatManager._activateEffects(actor, selectedSpecialties);\n        }\n    \n        // 2. 비용 처리\n        const costConfirmed = await handleCost();\n        if (!costConfirmed) {\n            console.log('비용 처리 취소로 인해 매크로 실행 종료');\n            return;\n        }\n    \n        // 3. 무장 정보 객체 생성\n        const weaponData = {\n            name: itemName,\n            weaponcrit: itemWeaponCrit,\n            weapontype: itemWeaponType,\n            weaponrange: itemWeaponRange,\n            weaponcost: itemWeaponCost,\n            weaponfinaldmg: itemWeaponFinalDmg,\n            sidedamage: sidedamage,\n            weaponkind: weaponkind,\n            weaponeffect: itemWeaponEffect,\n            weapontarget: itemWeaponTarget,\n            weaponfx: itemWeaponFx,\n            part: attackPart,\n            dmgdiebonus: dmgdiebonus,\n            dmgnumbonus: dmgnumbonus,\n            atk: atk,\n            sniping: itemSniping,\n            armorignore: itemArmorIgnore,\n        };\n        console.log(\"웨폰데이터 :\",weaponData);\n    \n        // 4. 명중 판정 다이얼로그\n        new Dialog({\n            title: \"명중 판정\",\n            content: `\n                <style>\n    .attack-dialog {\n        background: #f5f5f5;\n        padding: 15px;\n        border-radius: 8px;\n    }\n    .attack-dialog .form-group {\n        background: white;\n        padding: 12px;\n        border-radius: 6px;\n        box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n        margin-bottom: 15px;\n    }\n    .attack-dialog .form-group label {\n        display: block;\n        margin-bottom: 8px;\n        color: #4a4a4a;\n        font-weight: bold;\n    }\n    .attack-dialog .form-group select,\n    .attack-dialog .form-group input {\n        width: 100%;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background: white;\n        height: 38px;\n        font-size: 14px;\n    }\n    .attack-dialog .form-group select:focus,\n    .attack-dialog .form-group input:focus {\n        border-color: #4a4a4a;\n        box-shadow: 0 0 0 2px rgba(74,74,74,0.2);\n        outline: none;\n    }\n                    }\n                </style>\n                <div class=\"attack-dialog\">\n                    <div class=\"form-group\">\n                        <label>판정 능력치:</label>\n                        <select name=\"attackType\">\n                            <option value=\"hit\" ${attackPart?.includes('백병') ? 'selected' : ''}>명중</option>\n                            <option value=\"shelling\" ${attackPart?.includes('원격') ? 'selected' : ''}>포격</option>\n                            <option value=\"evasion\">회피</option>\n                            <option value=\"pro\">방벽</option>\n                            <option value=\"init\">행동</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>수정치:</label>\n                        <input type=\"number\" name=\"modifier\" value=\"0\">\n                    </div>\n                </div>\n            `,\n            buttons: {\n                roll: {\n                    icon: '<i class=\"fas fa-dice\"></i>',\n                    label: \"공격\",\n                    callback: async (html) => {\n                        const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                        const selectedAttackType = html.find('[name=\"attackType\"]').val();\n                        \n                        const attackerIds = attackers.map(a => a.id);\n                        \n                        if (targetIds.length === 0) {\n                            await MCS.CombatManager.performSimpleAttack(attackerIds, selectedAttackType, modifier);\n                        } else {\n                            await MCS.CombatManager.performMultiAttack(\n                                attackerIds, \n                                targetIds, \n                                selectedAttackType, \n                                modifier,\n                                weaponData.weaponcrit,\n                                actor.system.props.atkcritmod || '0',\n                                weaponData.part,\n                                weaponData,\n                                selectedSpecialties\n                            );\n                        }\n                        if (selectedSpecialties?.length) {\n                            // 자동 데미지 굴림일 때만 여기서 특기 해제\n                            if (game.settings.get(\"metalic-combat-system\", \"autoDamageRoll\")) {\n                                await MCS.CombatManager._deactivateEffects(actor, selectedSpecialties);\n                            }\n                        }\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\"\n                }\n            },\n            default: \"roll\",\n            width: 400\n        }).render(true);\n    })();}%",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": false,
                "style": "button",
                "align": "left",
                "colName": ""
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 9,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "isEquipped",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.isEquipped? '✓' : '☐'}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "${setPropertyInEntity('item', 'isEquipped', 'item.isEquipped == true ? false : true')}$",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": true,
                "style": "button",
                "align": "left",
                "colName": "장착"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "key"
            ],
            "lhs": "weaponcrit",
            "rhs": "sroll"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "value"
            ],
            "lhs": "${item.weaponcrit}$",
            "rhs": "사용"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemLevel = `${item.slv}$`;\nlet itemTarget = `${item.starget}$`;\nlet itemRange = `${item.srange}$`;\nlet itemCost = `${item.scost}$`;\nlet itemTiming = `${item.stiming}$`;\nlet itemEffect = `${item.seffect}$`;\nlet modifierName = `${item.name}$`;\nlet itemLimit  = `${item.limit}$`;\n\n// 상태 효과 적용 함수를 먼저 정의\nasync function applyEffect(token, effectName) {\n    // '없음'인 경우 그냥 리턴\n    if (effectName.toLowerCase().trim() === '없음') {\n        return;\n    }\n\n    const statusId = effectName.toLowerCase().trim();\n    const statusEffect = CONFIG.statusEffects.find(e => \n        e.id === statusId || \n        e.label.toLowerCase() === statusId\n    );\n    \n    if (!statusEffect) {\n        ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n        return;\n    }\n    \n    try {\n        const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n        if (!hasEffect) {\n            await token.toggleEffect(statusEffect);\n            ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n        } else {\n            ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n        }\n    } catch (error) {\n        ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n        console.error(error);\n    }\n}\n\n// 비용 처리 함수\nasync function handleCost() {\n    console.log('비용 처리 시작');\n    \n    let cost = itemCost.toLowerCase().replace(/\\s+/g, '');\n    console.log('처리할 비용 문자열:', cost);\n    \n    // 모든 비용 패턴 찾기 (탄수 패턴 추가)\n    let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n    console.log('찾은 모든 비용 패턴:', allCosts);\n\n    // 비용 유형별로 분리하고 계산\n    let fpTotal = 0;\n    let hpTotal = 0;\n    let enTotal = 0;\n    let bulletTotal = 0;\n    \n    allCosts.forEach(match => {\n        const type = match[2];  // fp, hp, en, 탄수 중 하나\n        const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n        const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n        const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n        \n        switch(type) {\n            case 'fp': fpTotal += value; break;\n            case 'hp': hpTotal += value; break;\n            case 'en': enTotal += value; break;\n            case '탄수': bulletTotal += value; break;\n        }\n    });\n\n    // 무기 아이템 찾기\n    let weaponItems = actor.items.filter(i => \n        i.system?.props?.type === \"weapon\" && \n        i.system?.props?.bullets !== undefined\n    );\n\n    console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n\n    // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n    let remainingText = cost;\n    allCosts.forEach(match => {\n        remainingText = remainingText.replace(match[0], ',');\n    });\n\n    // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n    let otherEffects = remainingText\n        .split(',')\n        .map(effect => effect.trim())\n        .filter(effect => effect !== '');\n\n    console.log('추출된 효과:', otherEffects);\n\n    const item = actor.items.find(i => i.name === itemName);\n    const hasToggleableEffects = item?.system.modifiers\n        ?.some(m => m.conditionalGroup);\n\n    // 사용횟수 확인\n    const hasLimit = itemLimit && itemLimit !== '0' && itemLimit !== '$';\n    const currentLimit = hasLimit ? parseInt(itemLimit.replace('$', '')) : 0;\n\n    return new Promise((resolve) => {\n        new Dialog({\n            title: \"비용 소비 확인\",\n            content: `\n                <style>\n                    .cost-dialog {\n                        background: #f0f0f0;\n                        padding: 15px;\n                        border-radius: 8px;\n                    }\n                    .cost-list {\n                        background: white;\n                        padding: 10px 15px;\n                        border-radius: 6px;\n                        margin: 10px 0;\n                        box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                    }\n                    .cost-item {\n                        display: flex;\n                        align-items: center;\n                        gap: 8px;\n                        padding: 4px 0;\n                    }\n                    .cost-label {\n                        display: inline-flex;\n                        align-items: center;\n                        padding: 2px 6px;\n                        border-radius: 4px;\n                        font-size: 12px;\n                        font-weight: bold;\n                    }\n                    .fp-label { color: #2c7be5; }\n                    .hp-label { color: #dc3545; }\n                    .en-label { color: #6c757d; }\n                    .bullet-label { color: #ffc107; }\n                    .effect-label { color: #198754; }\n                    .consume-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .toggle-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-value {\n                        color: #666;\n                        font-size: 12px;\n                        margin-left: auto;\n                    }                        \n                </style>\n                <div class=\"cost-dialog\">\n                    <div class=\"cost-list\">\n                        ${fpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label fp-label\">FP</span>\n                                <span>${fpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${hpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label hp-label\">HP</span>\n                                <span>${hpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${enTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label en-label\">EN</span>\n                                <span>${enTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${bulletTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label bullet-label\">탄수</span>\n                                <span>${bulletTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${otherEffects.length > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label effect-label\">효과</span>\n                                <span>${otherEffects.join(\", \")}</span>\n                            </div>\n                        ` : \"\"}\n                    </div>\n                    <div class=\"consume-option\">\n                        <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                        <label for=\"consumeCost\">비용 소비</label>\n                    </div>\n                    ${hasToggleableEffects ? `\n                        <div class=\"toggle-option\">\n                            <input type=\"checkbox\" id=\"toggleEffects\" name=\"toggleEffects\" checked>\n                            <label for=\"toggleEffects\">특기 효과 토글</label>\n                        </div>\n                    ` : ''}\n                    ${hasLimit ? `\n                        <div class=\"limit-option\">\n                            <input type=\"checkbox\" id=\"consumeLimit\" name=\"consumeLimit\" checked>\n                            <label for=\"consumeLimit\">사용횟수 소비</label>\n                            <span class=\"limit-value\">현재: ${currentLimit}회</span>\n                        </div>\n                    ` : ''}\n                </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            let toggleEffects = hasToggleableEffects && \n                                html.find('[name=\"toggleEffects\"]').is(\":checked\");\n                            let consumeLimit = hasLimit && \n                                html.find('[name=\"consumeLimit\"]').is(\":checked\");\n    \n                            if (consumeLimit) {\n                                // 사용횟수가 0 이하인 경우 경고\n                                if (currentLimit <= 0) {\n                                    ui.notifications.warn(\"남은 사용횟수가 없습니다!\");\n                                    return resolve(false);\n                                }\n    \n                                const specialtyItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n                                if (specialtyItem) {\n                                    await specialtyItem.update({\n                                        \"system.props.limit\": currentLimit - 1\n                                    });\n                                    console.log('사용횟수 감소:', currentLimit - 1);\n                                }\n                            }    \n                        \n                        if (consumeCost) {\n                            // FP 소비\n                            if (fpTotal > 0) {\n                                let fpValue = actor.system.props.fpvalue;\n                                await actor.update({ \n                                    \"system.props.fpvalue\": fpValue - fpTotal\n                                });\n                                console.log('FP 소비:', fpTotal);\n                            }\n                            \n                            // HP 소비\n                            if (hpTotal > 0) {\n                                let hpValue = actor.system.props.hpvalue;\n                                await actor.update({ \n                                    \"system.props.hpvalue\": hpValue - hpTotal\n                                });\n                                console.log('HP 소비:', hpTotal);\n                            }\n                            \n                            // EN 소비\n                            if (enTotal > 0) {\n                                let enValue = actor.system.props.envalue;\n                                await actor.update({ \n                                    \"system.props.envalue\": enValue - enTotal\n                                });\n                                console.log('EN 소비:', enTotal);\n                            }\n\n                            // 탄수 소비\n                            if (bulletTotal > 0) {\n                                const specialtyItem = actor.items.find(i => i.name === itemName);\n                                if (specialtyItem) {\n                                    const currentBullets = specialtyItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await specialtyItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                            }\n                            \n                            // 기타 효과 적용\n                            for (let effect of otherEffects) {\n                                if (effect) {\n                                    await applyEffect(selectedToken, effect);\n                                }\n                            }\n                        }\n\n                        if (toggleEffects) {\n                            await toggleItemEffects();\n                        }\n\n                        resolve(true);\n\n                        let content = `\n                            <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n                                <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n                                    <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                                        ${itemName}\n                                    </h3>\n                                    <span style=\"background:#e9ecef;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#4a4a4a\">\n                                        LV.${itemLevel}\n                                    </span>\n                                </div>\n\n                                <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTarget}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemRange}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemCost}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTiming}\n                                    </span>\n                                </div>\n\n                                ${itemEffect ? `\n                                    <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                                        <strong>효과:</strong> ${itemEffect}\n                                    </div>\n                                ` : ''}\n                            </div>`;\n\n                        let chatData = {\n                            content: content,\n                            speaker: ChatMessage.getSpeaker({ actor: actor })\n                        };\n\n                        await ChatMessage.create(chatData);\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\",\n                    callback: () => {\n                        console.log('비용 처리 취소');\n                        resolve(false);\n                    }\n                }\n            },\n            default: \"confirm\",\n            width: 400\n        }).render(true);\n    });\n}\n\nconst toggleItemEffects = async () => {\n    const item = actor.items.find(i => i.name === itemName);\n    if (!item) {\n        ui.notifications.warn(`${itemName}을(를) 찾을 수 없습니다.`);\n        return;\n    }\n    \n    const modifierGroups = new Set(\n        item.system.modifiers\n            .map(m => m.conditionalGroup)\n            .filter(group => group)\n    );\n\n    // 토글할 상태가 없는 경우 조용히 리턴\n    if (modifierGroups.size === 0) {\n        return;\n    }\n\n    let activeGroups = actor.system.activeConditionalModifierGroups || [];\n    const allGroupsActive = Array.from(modifierGroups)\n        .every(group => activeGroups.includes(group));\n\n    try {\n        if (allGroupsActive) {\n            activeGroups = activeGroups.filter(group => !modifierGroups.has(group));\n            ui.notifications.info(`${itemName}의 효과가 비활성화되었습니다.`);\n        } else {\n            modifierGroups.forEach(group => {\n                if (!activeGroups.includes(group)) {\n                    activeGroups.push(group);\n                }\n            });\n            ui.notifications.info(`${itemName}의 효과가 활성화되었습니다.`);\n        }\n        await actor.update({\n            \"system.activeConditionalModifierGroups\": activeGroups\n        });\n    } catch (error) {\n        console.error(\"효과 토글 중 오류 발생:\", error);\n        ui.notifications.error(\"효과 토글 중 오류가 발생했습니다.\");\n    }\n};\n\n// 토큰 선택 확인\nlet selectedToken = canvas.tokens.controlled[0];\nif (!selectedToken) {\n    ui.notifications.warn(\"토큰을 선택해주세요.\");\n    return;\n}\n\nlet actor = selectedToken.actor;\n\n// 비용 처리 실행\nhandleCost();\n}%"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "colName"
            ],
            "lhs": "크리티컬",
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "key"
            ],
            "lhs": "sidedamage",
            "rhs": "limit"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "value"
            ],
            "lhs": "",
            "rhs": "${item.limit}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "prefix"
            ],
            "lhs": "${item.sidedamage}$",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "colName"
            ],
            "lhs": "부공격력",
            "rhs": "사용횟수"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "key"
            ],
            "lhs": "weaponfinaldmg",
            "rhs": "bullets"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "value"
            ],
            "lhs": "${item.weaponfinaldmg}$",
            "rhs": "${item.bullets}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "colName"
            ],
            "lhs": "주공격력",
            "rhs": "탄수"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "key"
            ],
            "lhs": "weapontype",
            "rhs": "scost"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "value"
            ],
            "lhs": "${item.weapontype}$",
            "rhs": "${item.scost}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "colName"
            ],
            "lhs": "피해유형",
            "rhs": "대가"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "key"
            ],
            "lhs": "weaponbullets",
            "rhs": "starget"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "value"
            ],
            "lhs": "${item.bullets}$",
            "rhs": "${item.starget}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.srange}$`;\n    const weaponTarget = `${item.starget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "colName"
            ],
            "lhs": "탄수",
            "rhs": "대상"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "key"
            ],
            "lhs": "weaponcost",
            "rhs": "srange"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "value"
            ],
            "lhs": "${item.weaponcost}$\n\n",
            "rhs": "${item.srange}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.srange}$`;\n    const weaponTarget = `${item.starget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "colName"
            ],
            "lhs": "대가",
            "rhs": "사정거리"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "key"
            ],
            "lhs": "weapontarget",
            "rhs": "stiming"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "value"
            ],
            "lhs": "${item.weapontarget}$",
            "rhs": "${item.stiming}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "rollMessage"
            ],
            "lhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.weaponrange}$`;\n    const weaponTarget = `${item.weapontarget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%\n",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "rollMessageToChat"
            ],
            "lhs": false,
            "rhs": true
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "style"
            ],
            "lhs": "button",
            "rhs": "label"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "colName"
            ],
            "lhs": "대상",
            "rhs": "타이밍"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "key"
            ],
            "lhs": "weaponrange",
            "rhs": "stype"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "value"
            ],
            "lhs": "${item.weaponrange}$",
            "rhs": "${item.stype}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "rollMessage"
            ],
            "lhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.weaponrange}$`;\n    const weaponTarget = `${item.weapontarget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%\n",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "rollMessageToChat"
            ],
            "lhs": false,
            "rhs": true
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "style"
            ],
            "lhs": "button",
            "rhs": "label"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "colName"
            ],
            "lhs": "사정거리",
            "rhs": "종류"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "key"
            ],
            "lhs": "part",
            "rhs": "slv"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "value"
            ],
            "lhs": "${item.part}$",
            "rhs": "${item.slv}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "colName"
            ],
            "lhs": "부위",
            "rhs": "레벨"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "templateFilter",
              0
            ],
            "lhs": "MM7gLtk9hJiYZc8f",
            "rhs": "xL5PDDgxvo1pkkeh"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "name"
            ],
            "lhs": "무장",
            "rhs": "특기"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "key"
            ],
            "lhs": "guardian",
            "rhs": "weapontab"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "key"
            ],
            "lhs": "guardian",
            "rhs": "waeapon"
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 10,
            "item": {
              "kind": "N",
              "rhs": {
                "key": "weaponroll",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "사용",
                "prefix": "",
                "suffix": "",
                "rollMessage": "%{const MCS = window.MetalicCombatSystem;\n    if (!MCS) {\n        ui.notifications.error(\"전투 시스템을 찾을 수 없습니다. 모듈이 활성화되어 있는지 확인해주세요.\");\n        return;\n    }\n\n    const debugMode = true;\n\n    if (!debugMode) {\n        console.log = function() {}; // console.log 비활성화\n    }\n    \n    // 필요한 아이템 정보들을 변수로 선언\n    let itemName = `${item.name}$`;\n    let itemWeaponCrit = `${item.weaponcrit}$`;\n    let itemWeaponType = `${item.weapontype}$`;\n    let itemWeaponRange = `${item.weaponrange}$`;\n    let itemWeaponCost = `${item.weaponcost}$`;\n    let itemWeaponFinalDmg = `${item.weaponfinaldmg}$`;\n    let sidedamage = `${item.sidedamage}$`;\n    let itemWeaponEffect = `${item.weaponeffect}$`;\n    let dmgdiebonus = `${dmgdiebonus}$`;\n    let dmgnumbonus = `${dmgnumbonus}$`;\n    let atkcritMod = `${atkcritmod}$`;\n    let attackPart = `${item.part}$`;\n    let itemWeaponFx = `${item.weaponfx}$`;\n    let itemWeaponTarget = `${item.weapontarget}$`;\n    let atk = `${atk}$`;\n    let itemSniping = `${item.sniping}$`;\n    let itemArmorIgnore = `${item.armorignore}$`;\n    let weaponkind = `${item.weaponkind}$`;\n    \n    console.log('아이템 정보:', {\n        itemName, itemWeaponCrit, itemWeaponType, itemWeaponRange, \n        itemWeaponCost, itemWeaponFinalDmg, itemWeaponEffect,\n        dmgdiebonus, dmgnumbonus, itemWeaponFx, atkcritMod, attackPart,\n        weaponkind\n    });\n    \n    const attackers = canvas.tokens.controlled;\n    if (attackers.length === 0) {\n        ui.notifications.warn(\"공격할 토큰을 선택해주세요.\");\n        return;\n    }\n    \n    console.log('선택된 공격자 토큰:', attackers);\n    \n    let selectedToken = canvas.tokens.controlled[0];\n    if (!selectedToken) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n    \n    console.log('선택된 토큰:', selectedToken);\n    \n    let actor = selectedToken.actor;\n    const targets = Array.from(game.user.targets);\n    const targetIds = targets.length > 0 ? targets.map(t => t.id) : [];\n    \n    console.log('선택된 액터:', actor);\n    console.log('대상 토큰:', targets);\n    console.log('대상 ID:', targetIds);\n    \n    // 상태 효과 적용 함수\n    async function applyEffect(token, effectName) {\n        console.log(`상태 효과 적용 시작 - 토큰: ${token.name}, 효과: ${effectName}`);\n        if (effectName.toLowerCase().trim() === '없음') {\n            return;\n        }\n         \n        const statusId = effectName.toLowerCase().trim();\n        const statusEffect = CONFIG.statusEffects.find(e => \n            e.id === statusId || \n            e.label.toLowerCase() === statusId\n        );\n        \n        if (!statusEffect) {\n            ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n            console.log(`상태 효과 적용 실패 - 효과를 찾을 수 없음: ${effectName}`);\n            return;\n        }\n    \n        try {\n            const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n            if (!hasEffect) {\n                await token.toggleEffect(statusEffect);\n                ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n                console.log(`상태 효과 적용 완료 - 토큰: ${token.name}, 효과: ${effectName}`);\n            } else {\n                ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n                console.log(`상태 효과 적용 건너뜀 - 이미 적용됨: ${effectName}`);\n            }\n        } catch (error) {\n            ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n            console.error(`상태 효과 적용 중 오류 발생 - 토큰: ${token.name}, 효과: ${effectName}`, error);\n        }\n    }\n    \n    // 비용 처리 함수\n    async function handleCost() {\n        console.log('비용 처리 시작');\n        \n        let cost = itemWeaponCost.toLowerCase().replace(/\\s+/g, '');\n        console.log('처리할 비용 문자열:', cost);\n        \n        // 비용 패턴 정규식 수정 - 탄수 패턴 추가\n        const costPattern = /(\\d+)?(?:fp|hp|en|탄수)(\\d+)?/g;\n        const effectPattern = /[^,]+/g;\n        \n        // 모든 비용 패턴 찾기\n        let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n        console.log('찾은 모든 비용 패턴:', allCosts);\n    \n        // 비용 유형별로 분리하고 계산\n        let fpTotal = 0;\n        let hpTotal = 0;\n        let enTotal = 0;\n        let bulletTotal = 0;\n        \n        allCosts.forEach(match => {\n            const type = match[2];  // fp, hp, en, 탄수 중 하나\n            const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n            const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n            const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n            \n            switch(type) {\n                case 'fp': fpTotal += value; break;\n                case 'hp': hpTotal += value; break;\n                case 'en': enTotal += value; break;\n                case '탄수': bulletTotal += value; break;\n            }\n        });\n    \n        // 현재 무기 아이템 찾기\n        const weaponItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n        if (!weaponItem) {\n            console.error('무기 아이템을 찾을 수 없습니다:', itemName);\n            return false;\n        }\n    \n        console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n    \n        // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n        let remainingText = cost;\n        allCosts.forEach(match => {\n            remainingText = remainingText.replace(match[0], ',');\n        });\n    \n        // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n        let otherEffects = remainingText\n            .split(',')\n            .map(effect => effect.trim())\n            .filter(effect => effect !== '');\n    \n        console.log('추출된 효과:', otherEffects);\n    \n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"비용 소비 확인\",\n                content: `\n                    <style>\n                        .cost-dialog {\n                            background: #f0f0f0;\n                            padding: 15px;\n                            border-radius: 8px;\n                        }\n                        .cost-list {\n                            background: white;\n                            padding: 10px 15px;\n                            border-radius: 6px;\n                            margin: 10px 0;\n                            box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                        }\n                        .cost-item {\n                            display: flex;\n                            align-items: center;\n                            gap: 8px;\n                            padding: 4px 0;\n                        }\n                        .cost-label {\n                            display: inline-flex;\n                            align-items: center;\n                            padding: 2px 6px;\n                            border-radius: 4px;\n                            font-size: 12px;\n                            font-weight: bold;\n                        }\n                        .fp-label { color: #2c7be5; }\n                        .hp-label { color: #dc3545; }\n                        .en-label { color: #6c757d; }\n                        .bullet-label { color: #ffc107; }\n                        .effect-label { color: #198754; }\n                        .consume-option {\n                            background: #f8f9fa;\n                            padding: 8px;\n                            border-radius: 6px;\n                            margin-top: 10px;\n                            display: flex;\n                            align-items: center;\n                            gap: 10px;\n                        }\n                    </style>\n                    <div class=\"cost-dialog\">\n                        <div class=\"cost-list\">\n                            ${fpTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label fp-label\">FP</span>\n                                    <span>${fpTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${hpTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label hp-label\">HP</span>\n                                    <span>${hpTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${enTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label en-label\">EN</span>\n                                    <span>${enTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${bulletTotal > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label bullet-label\">탄수</span>\n                                    <span>${bulletTotal}</span>\n                                </div>\n                            ` : \"\"}\n                            ${otherEffects.length > 0 ? `\n                                <div class=\"cost-item\">\n                                    <span class=\"cost-label effect-label\">효과</span>\n                                    <span>${otherEffects.join(\", \")}</span>\n                                </div>\n                            ` : \"\"}\n                        </div>\n                        <div class=\"consume-option\">\n                            <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                            <label for=\"consumeCost\">비용 소비</label>\n                        </div>\n                    </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            console.log('비용 소비 확인:', consumeCost);\n                            \n                            if (consumeCost) {\n                                // FP 소비\n                                if (fpTotal > 0) {\n                                    let fpValue = actor.system.props.fpvalue;\n                                    await actor.update({ \n                                        \"system.props.fpvalue\": fpValue - fpTotal\n                                    });\n                                    console.log('FP 소비:', fpTotal);\n                                }\n                                \n                                // HP 소비\n                                if (hpTotal > 0) {\n                                    let hpValue = actor.system.props.hpvalue;\n                                    await actor.update({ \n                                        \"system.props.hpvalue\": hpValue - hpTotal\n                                    });\n                                    console.log('HP 소비:', hpTotal);\n                                }\n                                \n                                // EN 소비\n                                if (enTotal > 0) {\n                                    let enValue = actor.system.props.envalue;\n                                    await actor.update({ \n                                        \"system.props.envalue\": enValue - enTotal\n                                    });\n                                    console.log('EN 소비:', enTotal);\n                                }\n    \n                                // 탄수 소비\n                                if (bulletTotal > 0 && weaponItem) {\n                                    let currentBullets = weaponItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await weaponItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                                \n                                // 기타 효과 적용\n                                for (let effect of otherEffects) {\n                                    if (effect) {  // 빈 문자열이 아닌 경우에만 적용\n                                        await applyEffect(attackers[0], effect);\n                                    }\n                                }\n                            }\n                            console.log('비용 처리 완료');\n                            resolve(true);\n                        }\n                    },\n                    cancel: {\n                        icon: '<i class=\"fas fa-times\"></i>',\n                        label: \"취소\",\n                        callback: () => {\n                            console.log('비용 처리 취소');\n                            resolve(false);\n                        }\n                    }\n                },\n                default: \"confirm\",\n                width: 400\n            }).render(true);\n        });\n    }\n    \n    // 아이템 정보 카드 표시\n    async function displayItemCard() {\n        console.log('아이템 정보 카드 표시 시작');\n        \n        let content = `\n        <div class=\"diceroll\">\n            <div class=\"item-card\" style=\"background-color: #f9f9f9; border: 1px solid #ddd; border-radius: 5px; margin-bottom: 10px;\">\n                <div style=\"background-color: #e9e9e9; padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">\n                    <h3 style=\"margin: 0;\">${itemName} (${itemWeaponCrit})</h3>\n                </div>\n                <div style=\"padding: 8px;\">\n                    <div style=\"text-align: center; margin-bottom: 8px;\">\n                        ${attackPart} / ${itemWeaponType} / ${itemWeaponRange} / ${itemWeaponCost} / ${weaponkind}\n                    </div>\n                    <div style=\"margin-top: 8px;\">\n                        <strong>효과:</strong><br>\n                        ${itemWeaponEffect}\n                    </div>\n                </div>\n            </div>\n        </div>`;\n    \n        await ChatMessage.create({\n            author: game.user.id,\n            speaker: ChatMessage.getSpeaker({ actor: actor }),\n            content: content\n        });\n        \n        console.log('아이템 정보 카드 표시 완료');\n    }\n    \n    // 실행 순서 시작\n    (async () => {\n        console.log('매크로 실행 시작');\n        \n        // 1. 특기 선택 먼저 실행\n        const selectedSpecialties = await MCS.CombatManager._showEffectSelectionDialog(null, actor);\n        if (selectedSpecialties?.length) {\n            const totalCost = MCS.CombatManager._calculateEffectsCost(selectedSpecialties);\n            if (!await MCS.CombatManager._handleEffectsCost(totalCost, actor, selectedSpecialties)) {\n                return;\n            }\n            await MCS.CombatManager._activateEffects(actor, selectedSpecialties);\n        }\n    \n        // 2. 비용 처리\n        const costConfirmed = await handleCost();\n        if (!costConfirmed) {\n            console.log('비용 처리 취소로 인해 매크로 실행 종료');\n            return;\n        }\n    \n        // 3. 무장 정보 객체 생성\n        const weaponData = {\n            name: itemName,\n            weaponcrit: itemWeaponCrit,\n            weapontype: itemWeaponType,\n            weaponrange: itemWeaponRange,\n            weaponcost: itemWeaponCost,\n            weaponfinaldmg: itemWeaponFinalDmg,\n            sidedamage: sidedamage,\n            weaponkind: weaponkind,\n            weaponeffect: itemWeaponEffect,\n            weapontarget: itemWeaponTarget,\n            weaponfx: itemWeaponFx,\n            part: attackPart,\n            dmgdiebonus: dmgdiebonus,\n            dmgnumbonus: dmgnumbonus,\n            atk: atk,\n            sniping: itemSniping,\n            armorignore: itemArmorIgnore,\n        };\n        console.log(\"웨폰데이터 :\",weaponData);\n    \n        // 4. 명중 판정 다이얼로그\n        new Dialog({\n            title: \"명중 판정\",\n            content: `\n                <style>\n    .attack-dialog {\n        background: #f5f5f5;\n        padding: 15px;\n        border-radius: 8px;\n    }\n    .attack-dialog .form-group {\n        background: white;\n        padding: 12px;\n        border-radius: 6px;\n        box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n        margin-bottom: 15px;\n    }\n    .attack-dialog .form-group label {\n        display: block;\n        margin-bottom: 8px;\n        color: #4a4a4a;\n        font-weight: bold;\n    }\n    .attack-dialog .form-group select,\n    .attack-dialog .form-group input {\n        width: 100%;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background: white;\n        height: 38px;\n        font-size: 14px;\n    }\n    .attack-dialog .form-group select:focus,\n    .attack-dialog .form-group input:focus {\n        border-color: #4a4a4a;\n        box-shadow: 0 0 0 2px rgba(74,74,74,0.2);\n        outline: none;\n    }\n                    }\n                </style>\n                <div class=\"attack-dialog\">\n                    <div class=\"form-group\">\n                        <label>판정 능력치:</label>\n                        <select name=\"attackType\">\n                            <option value=\"hit\" ${attackPart?.includes('백병') ? 'selected' : ''}>명중</option>\n                            <option value=\"shelling\" ${attackPart?.includes('원격') ? 'selected' : ''}>포격</option>\n                            <option value=\"evasion\">회피</option>\n                            <option value=\"pro\">방벽</option>\n                            <option value=\"init\">행동</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>수정치:</label>\n                        <input type=\"number\" name=\"modifier\" value=\"0\">\n                    </div>\n                </div>\n            `,\n            buttons: {\n                roll: {\n                    icon: '<i class=\"fas fa-dice\"></i>',\n                    label: \"공격\",\n                    callback: async (html) => {\n                        const modifier = parseInt(html.find('[name=\"modifier\"]').val()) || 0;\n                        const selectedAttackType = html.find('[name=\"attackType\"]').val();\n                        \n                        const attackerIds = attackers.map(a => a.id);\n                        \n                        if (targetIds.length === 0) {\n                            await MCS.CombatManager.performSimpleAttack(attackerIds, selectedAttackType, modifier);\n                        } else {\n                            await MCS.CombatManager.performMultiAttack(\n                                attackerIds, \n                                targetIds, \n                                selectedAttackType, \n                                modifier,\n                                weaponData.weaponcrit,\n                                actor.system.props.atkcritmod || '0',\n                                weaponData.part,\n                                weaponData,\n                                selectedSpecialties\n                            );\n                        }\n                        if (selectedSpecialties?.length) {\n                            // 자동 데미지 굴림일 때만 여기서 특기 해제\n                            if (game.settings.get(\"metalic-combat-system\", \"autoDamageRoll\")) {\n                                await MCS.CombatManager._deactivateEffects(actor, selectedSpecialties);\n                            }\n                        }\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\"\n                }\n            },\n            default: \"roll\",\n            width: 400\n        }).render(true);\n    })();}%",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": false,
                "style": "button",
                "align": "left",
                "colName": ""
              }
            }
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "key"
            ],
            "lhs": "guardiansize",
            "rhs": "weaponcrit"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "value"
            ],
            "lhs": "${item.guardiansize}$",
            "rhs": "${item.weaponcrit}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "colName"
            ],
            "lhs": "사이즈",
            "rhs": "크리티컬"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "key"
            ],
            "lhs": "guardianspeed",
            "rhs": "sidedamage"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "value"
            ],
            "lhs": "${item.guardianspeed}$",
            "rhs": ""
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "prefix"
            ],
            "lhs": "",
            "rhs": "${item.sidedamage}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "colName"
            ],
            "lhs": "이동력",
            "rhs": "부공격력"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "key"
            ],
            "lhs": "guardianweapon",
            "rhs": "weaponfinaldmg"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "value"
            ],
            "lhs": "${item.guardianweapon}$",
            "rhs": "${item.weaponfinaldmg}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "colName"
            ],
            "lhs": "고정무장",
            "rhs": "주공격력"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "key"
            ],
            "lhs": "guardianatk",
            "rhs": "weapontype"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "value"
            ],
            "lhs": "${item.guardianatk}$",
            "rhs": "${item.weapontype}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "colName"
            ],
            "lhs": "공격력",
            "rhs": "피해유형"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "key"
            ],
            "lhs": "guardianinit",
            "rhs": "weaponbullets"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "value"
            ],
            "lhs": "${item.guardianinit}$",
            "rhs": "${item.bullets}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "colName"
            ],
            "lhs": "행동",
            "rhs": "탄수"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "key"
            ],
            "lhs": "guardianpro",
            "rhs": "weaponcost"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "value"
            ],
            "lhs": "${item.guardianpro}$",
            "rhs": "${item.weaponcost}$\n\n"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "colName"
            ],
            "lhs": "방벽",
            "rhs": "대가"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "key"
            ],
            "lhs": "guardianshelling",
            "rhs": "weapontarget"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "value"
            ],
            "lhs": "${item.guardianshelling}$",
            "rhs": "${item.weapontarget}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.weaponrange}$`;\n    const weaponTarget = `${item.weapontarget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%\n"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "colName"
            ],
            "lhs": "포격",
            "rhs": "대상"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "key"
            ],
            "lhs": "guardianevasion",
            "rhs": "weaponrange"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "value"
            ],
            "lhs": "${item.guardianevasion}$",
            "rhs": "${item.weaponrange}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{async function createCustomTemplate() {\n    console.log(\"매크로 시작\");\n    const token = canvas.tokens.controlled[0];\n    if (!token) {\n        ui.notifications.warn(\"토큰을 선택해주세요.\");\n        return;\n    }\n\n    const weaponRange = `${item.weaponrange}$`;\n    const weaponTarget = `${item.weapontarget}$`;\n    console.log(\"입력된 범위:\", weaponRange);\n    console.log(\"입력된 대상:\", weaponTarget);\n\n    const baseGridSize = canvas.grid.size;\n    const gameGridSize = baseGridSize * 2;\n    const sceneWidth = canvas.scene.width;\n    const sceneHeight = canvas.scene.height;\n    \n    // 씬의 시작 좌표 계산\n    const sceneStartX = Math.floor((canvas.scene.dimensions.width - sceneWidth) / 2);\n    const sceneStartY = Math.floor((canvas.scene.dimensions.height - sceneHeight) / 2);\n\n    console.log(\"Scene dimensions:\", {\n        width: sceneWidth,\n        height: sceneHeight,\n        startX: sceneStartX,\n        startY: sceneStartY\n    });\n\n    let templateData = [];\n    let createdTemplates = [];\n\n    function get2x2Corner(x, y) {\n        // 씬의 시작점을 기준으로 상대 좌표 계산\n        const relativeX = x - sceneStartX;\n        const relativeY = y - sceneStartY;\n        \n        // 2x2 그리드로 나누어 위치 계산\n        const gridX = Math.floor(relativeX / gameGridSize);\n        const gridY = Math.floor(relativeY / gameGridSize);\n        \n        // 실제 좌표로 변환 (씬의 시작점 고려)\n        const cornerX = (gridX * gameGridSize) + sceneStartX;\n        const cornerY = (gridY * gameGridSize) + sceneStartY;\n        \n        console.log(\"Grid calculation:\", {\n            clickX: x,\n            clickY: y,\n            relativeX,\n            relativeY,\n            gridX,\n            gridY,\n            cornerX,\n            cornerY,\n            sceneStartX,\n            sceneStartY\n        });\n        \n        return { x: cornerX, y: cornerY };\n    }\n\n    function addTemplateRect(dx, dy, startX, startY, direction = 'north', color) {\n        let [adjustedDx, adjustedDy] = adjustCoordinates(dx, dy, direction);\n        \n        const x = startX + (adjustedDx * gameGridSize);\n        const y = startY + (adjustedDy * gameGridSize);\n    \n        const templateProperties = {\n            t: \"rect\",\n            user: game.user.id,\n            x: x,\n            y: y,\n            width: gameGridSize,\n            height: gameGridSize,\n            direction: 45,\n            distance: 1.4142135623730951,\n            fillColor: color,\n            fillAlpha: 0.5,\n            borderColor: color,\n            borderAlpha: 0.8,\n            flags: { \n                customTemplate: true,\n                displayRuler: false\n            }\n        };\n    \n        templateData.push(templateProperties);\n    }\n    \n    // 매크로 시작 부분에 추가\n    Hooks.on('createMeasuredTemplate', (template) => {\n        const t = template.object;\n        if (t && t.ruler) {\n            t.ruler.visible = false;  // ruler를 직접 숨김\n        }\n    });\n\n    function adjustCoordinates(dx, dy, direction) {\n        switch (direction) {\n            case 'east': return [-dy, dx];\n            case 'south': return [dx, -dy];\n            case 'west': return [dy, dx];\n            default: return [dx, dy]; // north\n        }\n    }\n\n    async function selectDirection() {\n        const directions = [\n            { value: 'east', label: '동' },\n            { value: 'west', label: '서' },\n            { value: 'south', label: '남' },\n            { value: 'north', label: '북' }\n        ];\n        const directionContent = directions.map(dir => \n            `<option value=\"${dir.value}\">${dir.label}</option>`\n        ).join('');\n        return new Promise((resolve) => {\n            new Dialog({\n                title: \"방향 선택\",\n                content: `<form><div class=\"form-group\"><label>방향:</label><select name=\"direction\">${directionContent}</select></div></form>`,\n                buttons: {\n                    확인: {\n                        label: \"확인\",\n                        callback: (html) => resolve(html.find('[name=\"direction\"]').val())\n                    }\n                }\n            }).render(true);\n        });\n    }\n\n    async function selectCenter() {\n        return new Promise((resolve) => {\n            const handler = (event) => {\n                const { x, y } = event.data.getLocalPosition(canvas.app.stage);\n                const corner = get2x2Corner(x, y);\n                \n                // 선택된 위치 로깅\n                console.log(\"Selected position:\", x, y);\n                console.log(\"Calculated corner:\", corner);\n                \n                canvas.app.stage.off('click', handler);\n                resolve(corner);\n            };\n            canvas.app.stage.once('click', handler);\n            ui.notifications.info(\"템플릿을 배치할 2x2 영역을 클릭하세요.\");\n        });\n    }\n\n    async function createTemplate(info, isWeaponRange = false, color) {\n        let startX, startY;\n        let selectedDirection = 'north';\n    \n        // 위치 선택 로직 수정\n        if (isWeaponRange) {\n            // 사정거리는 항상 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        } else if (info.needsSelection || info.type === 'range' || info.type === 'rangeMinMax' || info.type === 'simpleRange') {\n            // 범위나 RS, 범위1 등은 클릭으로 위치 선택\n            const corner = await selectCenter();\n            startX = corner.x;\n            startY = corner.y;\n        } else {\n            // 나머지는 토큰 위치 기준\n            const corner = get2x2Corner(token.x, token.y);\n            startX = corner.x;\n            startY = corner.y;\n        }\n    \n        // 방향 선택 로직\n        if (!isWeaponRange && (info.type === 'line' || info.type === 'wideLine' || info.type === 'radial')) {\n            selectedDirection = await selectDirection();\n        }\n    \n        switch (info.type) {\n            case 'line':\n                for (let i = 0; i <= info.value; i++) {\n                    addTemplateRect(0, -i, startX, startY, selectedDirection, color);\n                }\n                break;\n            case 'wideLine':\n                const halfWidth = Math.floor(info.width / 2);\n                for (let w = -halfWidth; w <= halfWidth; w++) {\n                    for (let i = 0; i <= info.range; i++) {\n                        addTemplateRect(w, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n            case 'radial':\n                addTemplateRect(0, 0, startX, startY, selectedDirection, color);\n                if (info.value >= 1) {\n                    addTemplateRect(0, -1, startX, startY, selectedDirection, color);\n                }\n                for (let i = 2; i <= info.value; i++) {\n                    for (let dx = -i + 1; dx <= i - 1; dx++) {\n                        addTemplateRect(dx, -i, startX, startY, selectedDirection, color);\n                    }\n                }\n                break;\n                case 'simpleRange':\n                    if (info.value === 1) {\n                        // 범위1은 단일 그리드\n                        addTemplateRect(0, 0, startX, startY, 'north', color);\n                    } else {\n                        // 범위2 이상은 실제 값보다 1 작게 처리\n                        const adjustedValue = info.value - 1;\n                        for (let dx = -adjustedValue; dx <= adjustedValue; dx++) {\n                            for (let dy = -adjustedValue; dy <= adjustedValue; dy++) {\n                                const distance = Math.abs(dx) + Math.abs(dy);\n                                if (distance <= adjustedValue) {\n                                    addTemplateRect(dx, dy, startX, startY, 'north', color);\n                                }\n                            }\n                        }\n                    }\n                    break;\n            \n                case 'range':\n                case 'rangeMinMax':\n                    const minRange = info.min !== undefined ? info.min : 0;\n                    const maxRange = info.max !== undefined ? info.max : info.value;\n                    for (let dx = -maxRange; dx <= maxRange; dx++) {\n                        for (let dy = -maxRange; dy <= maxRange; dy++) {\n                            const distance = Math.abs(dx) + Math.abs(dy);\n                            if (distance >= minRange && distance <= maxRange) {\n                                addTemplateRect(dx, dy, startX, startY, 'north', color);\n                            }\n                        }\n                    }\n                    break;\n        }\n    }\n\n    function parseTarget(targetString) {\n        targetString = targetString.replace(/\\(선택\\)|\\$/g, '');\n        \n        // 범위와 RS 패턴 동일하게 처리\n        if (targetString.match(/^(범위|RS)\\d+$/)) {\n            const value = Number(targetString.replace(/[^\\d]/g, ''));\n            return { type: 'simpleRange', value: value, needsSelection: true };\n        }\n        \n        // 기존 패턴들\n        if (targetString.startsWith('직선') || targetString.startsWith('돌파')) {\n            return { type: 'line', value: Number(targetString.replace(/[^\\d]/g, '')) };\n        } else if (targetString.startsWith('폭')) {\n            const match = targetString.match(/폭(\\d+)(직선|돌파)(\\d+)/);\n            return match ? { type: 'wideLine', width: Number(match[1]), range: Number(match[3]) } : null;\n        } else if (targetString.startsWith('방사')) {\n            return { type: 'radial', value: Number(targetString.replace('방사', '')) };\n        }\n        return null;\n    }\n\n    function parseRange(rangeString) {\n        rangeString = rangeString.replace(/\\$/g, '');\n        if (rangeString.includes('~')) {\n            const [min, max] = rangeString.split('~').map(Number);\n            return { type: 'rangeMinMax', min, max };\n        } else if (rangeString) {\n            return { type: 'range', min: 0, max: Number(rangeString) };\n        }\n        return null;\n    }\n\n    const targetInfo = parseTarget(weaponTarget);\n    const rangeInfo = parseRange(weaponRange);\n\n    // 먼저 사정거리 표시 (항상 토큰 위치 기준)\n    if (rangeInfo) {\n        await createTemplate(rangeInfo, true, game.user.color);\n        let rangeTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(rangeTemplates);\n        templateData = [];\n    }\n\n    // 그 다음 대상 범위 표시\n    if (targetInfo) {\n        await createTemplate(targetInfo, false, \"#FF0000\");\n    }\n\n    if (!targetInfo && !rangeInfo) {\n        ui.notifications.warn(\"올바른 범위 또는 대상 형식이 아닙니다.\");\n        return;\n    }\n\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n    }\n\n    const deleteTemplates = async () => {\n        if (createdTemplates.length > 0) {\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", createdTemplates.map(t => t.id));\n            createdTemplates = [];\n            console.log(\"템플릿 삭제 완료\");\n        }\n    };\n\n    const handleKeyPress = async (event) => {\n        if (event.key === \"Delete\" || event.key === \"Backspace\") {\n            await deleteTemplates();\n            // 이벤트 리스너 제거\n            document.removeEventListener(\"keydown\", handleKeyPress);\n            console.log(\"키 이벤트 리스너 제거됨\");\n        }\n    };\n\n    // 기존 이벤트 리스너 제거 (혹시 모를 중복 방지)\n    document.removeEventListener(\"keydown\", handleKeyPress);\n    // 새로운 이벤트 리스너 등록\n    document.addEventListener(\"keydown\", handleKeyPress);\n    console.log(\"키 이벤트 리스너 등록됨\");\n\n    // 템플릿 생성 시도\n    if (templateData.length > 0) {\n        let targetTemplates = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", templateData);\n        createdTemplates = createdTemplates.concat(targetTemplates);\n        console.log(`${createdTemplates.length}개의 템플릿이 생성됨`);\n    }\n\n    // 매크로가 다시 실행될 때를 대비해 cleanup 함수 등록\n    Hooks.once('createCustomTemplate', () => {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        console.log(\"cleanup: 키 이벤트 리스너 제거됨\");\n    });\n}\n\n// 매크로 실행 전 이전 인스턴스 cleanup\nHooks.callAll('createCustomTemplate');\ncreateCustomTemplate();}%\n"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "rollMessageToChat"
            ],
            "lhs": true,
            "rhs": false
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "colName"
            ],
            "lhs": "회피",
            "rhs": "사정거리"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "key"
            ],
            "lhs": "guardianhit",
            "rhs": "part"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "value"
            ],
            "lhs": "${item.guardianhit}$",
            "rhs": "${item.part}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "colName"
            ],
            "lhs": "명중",
            "rhs": "부위"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "templateFilter",
              0
            ],
            "lhs": "X37eEl8hKTkIW965",
            "rhs": "MM7gLtk9hJiYZc8f"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "name"
            ],
            "lhs": "가디언",
            "rhs": "무장"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              17,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              16,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              5,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              7,
              "contents",
              0,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              4,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "maxLength"
            ]
          }
        ],
        [
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents"
            ],
            "index": 3,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "itemtab",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "tab",
                "contents": [
                  {
                    "key": "iitem",
                    "cssClass": "",
                    "role": "0",
                    "permission": "0",
                    "tooltip": "",
                    "visibilityFormula": "",
                    "type": "itemContainer",
                    "contents": [],
                    "rowLayout": [
                      {
                        "key": "itype",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.itype}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "종류"
                      },
                      {
                        "key": "itiming",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.itiming}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "타이밍"
                      },
                      {
                        "key": "iquantity",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.iquantity}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "수량"
                      },
                      {
                        "key": "idifficulty",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.idifficulty}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "구입난이도"
                      },
                      {
                        "key": "itemuse",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "사용",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemTiming = `${item.itiming}$`;\nlet itemQuantity = `${item.iquantity}$`;\nlet itemEffect = `${item.ieffect}$`;\n\nlet content = `\n    <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n        <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n            <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                ${itemName}\n            </h3>\n        </div>\n\n        <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemTiming}\n            </span>\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemQuantity}\n            </span>\n        </div>\n\n        ${itemEffect ? `\n            <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                <strong>효과:</strong> ${itemEffect}\n            </div>\n        ` : ''}\n    </div>`;\n\nlet chatData = {\n    user: game.user._id,\n    content: content\n};\n\nreturn ChatMessage.create(chatData);\n}%",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "button",
                        "align": "left",
                        "colName": ""
                      }
                    ],
                    "head": false,
                    "deleteWarning": false,
                    "title": "",
                    "hideEmpty": false,
                    "sortOption": "manual",
                    "headDisplay": true,
                    "showDelete": true,
                    "statusIcon": false,
                    "nameAlign": "left",
                    "nameLabel": "이름",
                    "templateFilter": [
                      "aSaP8Yx3Zmv1pxIr"
                    ],
                    "itemFilterFormula": "",
                    "sortPredicates": []
                  }
                ],
                "name": "아이템"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "key"
            ],
            "lhs": "option",
            "rhs": "itemtab"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "key"
            ],
            "lhs": "option",
            "rhs": "iitem"
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 9,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "isEquipped",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.isEquipped? '✓' : '☐'}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "${setPropertyInEntity('item', 'isEquipped', 'item.isEquipped == true ? false : true')}$",
                "altRollMessage": "",
                "rollMessageToChat": false,
                "altRollMessageToChat": true,
                "style": "button",
                "align": "left",
                "colName": "장착"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 8,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionspeed",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionspeed}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "이동력"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 7,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionatk",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionatk}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "공격력"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 6,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionen",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionen}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "감응"
              }
            }
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout"
            ],
            "index": 5,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "optionfp",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "label",
                "size": "full-size",
                "icon": "",
                "value": "${item.optionfp}$",
                "prefix": "",
                "suffix": "",
                "rollMessage": "",
                "altRollMessage": "",
                "rollMessageToChat": true,
                "altRollMessageToChat": true,
                "style": "label",
                "align": "left",
                "colName": "역장"
              }
            }
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "key"
            ],
            "lhs": "optioninit",
            "rhs": "itemuse"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "value"
            ],
            "lhs": "${item.optioninit}$",
            "rhs": "사용"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "rollMessage"
            ],
            "lhs": "",
            "rhs": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemTiming = `${item.itiming}$`;\nlet itemQuantity = `${item.iquantity}$`;\nlet itemEffect = `${item.ieffect}$`;\n\nlet content = `\n    <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n        <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n            <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                ${itemName}\n            </h3>\n        </div>\n\n        <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemTiming}\n            </span>\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemQuantity}\n            </span>\n        </div>\n\n        ${itemEffect ? `\n            <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                <strong>효과:</strong> ${itemEffect}\n            </div>\n        ` : ''}\n    </div>`;\n\nlet chatData = {\n    user: game.user._id,\n    content: content\n};\n\nreturn ChatMessage.create(chatData);\n}%"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "style"
            ],
            "lhs": "label",
            "rhs": "button"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "colName"
            ],
            "lhs": "행동",
            "rhs": ""
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "key"
            ],
            "lhs": "optionpro",
            "rhs": "idifficulty"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "value"
            ],
            "lhs": "${item.optionpro}$",
            "rhs": "${item.idifficulty}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "colName"
            ],
            "lhs": "방벽",
            "rhs": "구입난이도"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "key"
            ],
            "lhs": "optionshelling",
            "rhs": "iquantity"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "value"
            ],
            "lhs": "${item.optionshelling}$",
            "rhs": "${item.iquantity}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "colName"
            ],
            "lhs": "포격",
            "rhs": "수량"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "key"
            ],
            "lhs": "optionevasion",
            "rhs": "itiming"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "value"
            ],
            "lhs": "${item.optionevasion}$",
            "rhs": "${item.itiming}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "colName"
            ],
            "lhs": "회피",
            "rhs": "타이밍"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "key"
            ],
            "lhs": "optionhit",
            "rhs": "itype"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "value"
            ],
            "lhs": "${item.optionhit}$",
            "rhs": "${item.itype}$"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "colName"
            ],
            "lhs": "명중",
            "rhs": "종류"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "templateFilter",
              0
            ],
            "lhs": "WAdeM4z6efeMcdIw",
            "rhs": "aSaP8Yx3Zmv1pxIr"
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              2,
              "name"
            ],
            "lhs": "옵션",
            "rhs": "아이템"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              17,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              16,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              5,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              7,
              "contents",
              0,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              4,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "maxLength"
            ]
          }
        ],
        [
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "A",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents"
            ],
            "index": 2,
            "item": {
              "kind": "D",
              "lhs": {
                "key": "itemtab",
                "cssClass": "",
                "role": "0",
                "permission": "0",
                "tooltip": "",
                "visibilityFormula": "",
                "type": "tab",
                "contents": [
                  {
                    "key": "iitem",
                    "cssClass": "",
                    "role": "0",
                    "permission": "0",
                    "tooltip": "",
                    "visibilityFormula": "",
                    "type": "itemContainer",
                    "contents": [],
                    "rowLayout": [
                      {
                        "key": "itype",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.itype}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "종류"
                      },
                      {
                        "key": "itiming",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.itiming}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "타이밍"
                      },
                      {
                        "key": "iquantity",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.iquantity}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "수량"
                      },
                      {
                        "key": "idifficulty",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "${item.idifficulty}$",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "label",
                        "align": "left",
                        "colName": "구입난이도"
                      },
                      {
                        "key": "itemuse",
                        "cssClass": "",
                        "role": "0",
                        "permission": "0",
                        "tooltip": "",
                        "visibilityFormula": "",
                        "type": "label",
                        "size": "full-size",
                        "icon": "",
                        "value": "사용",
                        "prefix": "",
                        "suffix": "",
                        "rollMessage": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemTiming = `${item.itiming}$`;\nlet itemQuantity = `${item.iquantity}$`;\nlet itemEffect = `${item.ieffect}$`;\n\nlet content = `\n    <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n        <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n            <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                ${itemName}\n            </h3>\n        </div>\n\n        <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemTiming}\n            </span>\n            <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                ${itemQuantity}\n            </span>\n        </div>\n\n        ${itemEffect ? `\n            <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                <strong>효과:</strong> ${itemEffect}\n            </div>\n        ` : ''}\n    </div>`;\n\nlet chatData = {\n    user: game.user._id,\n    content: content\n};\n\nreturn ChatMessage.create(chatData);\n}%",
                        "altRollMessage": "",
                        "rollMessageToChat": true,
                        "altRollMessageToChat": true,
                        "style": "button",
                        "align": "left",
                        "colName": ""
                      }
                    ],
                    "head": false,
                    "deleteWarning": false,
                    "title": "",
                    "hideEmpty": false,
                    "sortOption": "manual",
                    "headDisplay": true,
                    "showDelete": true,
                    "statusIcon": false,
                    "nameAlign": "left",
                    "nameLabel": "이름",
                    "templateFilter": [
                      "aSaP8Yx3Zmv1pxIr"
                    ],
                    "itemFilterFormula": "",
                    "sortPredicates": []
                  }
                ],
                "name": "아이템"
              }
            }
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              17,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              16,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              5,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              7,
              "contents",
              0,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              4,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "maxLength"
            ]
          }
        ],
        [
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "rollMessage"
            ],
            "lhs": "%{async function guardianTransformation() {\n    const selectedToken = canvas.tokens.controlled[0];\n    if (!selectedToken) {\n        ui.notifications.error(\"변신할 토큰을 선택해주세요.\");\n        return;\n    }\n\n    const guardians = game.actors.filter(actor => \n        actor.ownership[game.user.id] >= CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER && \n        actor.system?.props?.type === \"guardian\"\n    );\n\n    if (guardians.length === 0) {\n        ui.notifications.warn(\"사용 가능한 가디언이 없습니다.\");\n        return;\n    }\n\n    new Dialog({\n        title: \"가디언 변신\",\n        content: `\n                <style>\n                .guardian-transform-dialog .window-content {\n                    position: relative; /* 상대 위치 설정 */\n                    padding-bottom: 60px; /* 버튼 영역만큼 패딩 */\n                }\n                    \n                .guardian-transform-dialog .dialog-buttons {\n                    position: absolute; /* fixed 대신 absolute 사용 */\n                    bottom: 0;\n                    left: 0;\n                    right: 0;\n                    padding: 8px;\n                    background: rgba(240, 240, 240, 0.95);\n                    border-top: 1px solid #ddd;\n                    box-shadow: 0 -2px 10px rgba(0,0,0,0.1);\n                    z-index: 1000;\n                    display: flex;\n                    justify-content: center;\n                    gap: 10px;\n                    backdrop-filter: blur(5px);\n                }\n                \n                .guardian-transform-dialog .dialog-button {\n                    background: #4a4a4a;\n                    color: white;\n                    padding: 6px 12px;\n                    border-radius: 4px;\n                    border: none;\n                    font-size: 14px;\n                    line-height: 20px;\n                    width: 120px;\n                    height: 36px;\n                    cursor: pointer;\n                    display: flex;\n                    align-items: center;\n                    gap: 5px;\n                    justify-content: center;\n                    white-space: nowrap;\n                }\n\n                .guardian-transform-dialog .dialog-button.transform-button {\n                    background: #4a90e2;\n                }\n\n                .guardian-transform-dialog .dialog-button:hover {\n                    background: #666;\n                }\n\n                .guardian-transform-dialog .dialog-button.transform-button:hover {\n                    background: #357abd;\n                }\n\n                .guardian-list {\n                    display: grid;\n                    grid-template-columns: repeat(2, 1fr);\n                    gap: 15px;\n                    padding: 15px;\n                    max-height: calc(100vh - 200px);\n                    overflow-y: auto;\n                    padding-bottom: 60px; /* 버튼 영역만큼 패딩 */\n                }\n\n                .guardian-option {\n                    background: white;\n                    border-radius: 8px;\n                    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n                    overflow: hidden;\n                    cursor: pointer;\n                    transition: all 0.2s ease;\n                }\n\n                .guardian-option:hover {\n                    transform: translateY(-2px);\n                    box-shadow: 0 4px 10px rgba(0,0,0,0.15);\n                }\n\n                .guardian-option.selected {\n                    outline: 3px solid #4a90e2;\n                }\n\n                .guardian-image {\n                    width: 100%;\n                    height: 200px;\n                    object-fit: cover;\n                    border-bottom: 1px solid #eee;\n                }\n\n                .guardian-info {\n                    padding: 12px;\n                }\n\n                .guardian-name {\n                    font-size: 1.2em;\n                    font-weight: bold;\n                    margin-bottom: 8px;\n                    color: #2c3e50;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                }\n\n                .guardian-size {\n                    font-size: 0.8em;\n                    padding: 2px 6px;\n                    background: #e9ecef;\n                    border-radius: 4px;\n                    color: #666;\n                }\n\n                .guardian-stats {\n                    display: grid;\n                    grid-template-columns: repeat(2, 1fr);\n                    gap: 8px;\n                    margin-bottom: 8px;\n                }\n\n                .stat-item {\n                    display: flex;\n                    align-items: center;\n                    gap: 5px;\n                    background: #f8f9fa;\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                    font-size: 0.9em;\n                }\n\n                .stat-item.fp {\n                    color: #2c7be5;\n                }\n\n                .stat-item.hp {\n                    color: #dc3545;\n                }\n\n                .stat-item.en {\n                    color: #198754;\n                }\n\n                .stat-item.speed {\n                    color: #fd7e14;\n                }\n\n                .detail-button {\n                    width: 100%;\n                    padding: 6px;\n                    background: #4a90e2;\n                    color: white;\n                    border: none;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    transition: background 0.2s;\n                    font-size: 13px;\n                }\n\n                .detail-button:hover {\n                    background: #357abd;\n                }\n\n                .guardian-details {\n                    display: none;\n                    background: #f8f9fa;\n                    margin-top: 8px;\n                    padding: 8px;\n                    border-radius: 4px;\n                }\n\n                .detail-grid {\n                    display: grid;\n                    grid-template-columns: repeat(2, 1fr);\n                    gap: 4px;\n                }\n\n                .detail-item {\n                    display: flex;\n                    align-items: center;\n                    gap: 5px;\n                    font-size: 0.85em;\n                    color: #666;\n                    padding: 4px;\n                }\n            </style>\n            <div class=\"guardian-list\">\n                ${guardians.map((guardian, i) => `\n                    <div class=\"guardian-option\" data-guardian-id=\"${guardian.id}\">\n                        <img class=\"guardian-image\" src=\"${guardian.img}\" alt=\"${guardian.name}\">\n                        <div class=\"guardian-info\">\n                            <div class=\"guardian-name\">\n                                ${guardian.name}\n                                <span class=\"guardian-size\">${guardian.system.props.guardiansize || 'M'}</span>\n                            </div>\n                            <div class=\"guardian-stats\">\n                                <div class=\"stat-item fp\">\n                                    <i class=\"fas fa-heart\"></i>\n                                    <span>FP: ${guardian.system.props.fpmax}</span>\n                                </div>\n                                <div class=\"stat-item hp\">\n                                    <i class=\"fas fa-heart-broken\"></i>\n                                    <span>HP: ${guardian.system.props.hpmax}</span>\n                                </div>\n                                <div class=\"stat-item en\">\n                                    <i class=\"fas fa-bolt\"></i>\n                                    <span>EN: ${guardian.system.props.enmax}</span>\n                                </div>\n                            <div class=\"stat-item speed\">\n                                <i class=\"fas fa-walking\"></i>\n                                <span>이동: ${guardian.system.props.speed || 0}</span>\n                            </div>\n                            </div>\n                            <button class=\"detail-button\" data-guardian-id=\"${guardian.id}\">\n                                상세 정보 보기\n                            </button>\n                            <div class=\"guardian-details\" id=\"details-${guardian.id}\">\n                                <div class=\"detail-grid\">\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-bullseye\"></i>\n                                        <span>명중: ${guardian.system.props.hit || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-running\"></i>\n                                        <span>회피: ${guardian.system.props.evasion || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-shield-alt\"></i>\n                                        <span>방벽: ${guardian.system.props.pro || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-forward\"></i>\n                                        <span>행동: ${guardian.system.props.init || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-crosshairs\"></i>\n                                        <span>포격: ${guardian.system.props.shelling || 0}</span>\n                                    </div>\n                                </div>\n                                ${guardian.system.props.memo ? `\n                                    <div class=\"guardian-memo\" style=\"margin-top: 8px; font-size: 0.9em; padding: 4px;\">\n                                        <i class=\"fas fa-sticky-note\"></i>\n                                        <span>${guardian.system.props.memo}</span>\n                                    </div>\n                                ` : ''}\n                            </div>\n                        </div>\n                    </div>\n                `).join('')}\n            </div>\n        `,\n        buttons: {\n            transform: {\n                icon: '<i class=\"fas fa-robot\"></i>',\n                label: \"변신/합체\",\n                callback: async (html) => {\n                    const selectedGuardian = html.find('.guardian-option.selected');\n                    if (!selectedGuardian.length) {\n                        ui.notifications.warn(\"변신할 가디언을 선택해주세요.\");\n                        return;\n                    }\n            \n                    const guardianId = selectedGuardian.data('guardianId');\n                    // TransformationManager 대신 game.MetalicCombatSystem.TransformationManager 사용\n                    await game.modules.get('metalic-combat-system').api.TransformationManager.performTransformation(selectedToken, guardianId);\n                }\n            },\n            cancel: {\n                icon: '<i class=\"fas fa-times\"></i>',\n                label: \"취소\"\n            }\n        },\n        render: html => {\n            html.find('.guardian-option').click(ev => {\n                html.find('.guardian-option').removeClass('selected');\n                $(ev.currentTarget).addClass('selected');\n            });\n\n            html.find('.detail-button').click(ev => {\n                ev.stopPropagation();\n                const guardianId = ev.currentTarget.dataset.guardianId;\n                const details = html.find(`#details-${guardianId}`);\n                details.slideToggle(200);\n                \n                const button = $(ev.currentTarget);\n                button.text(details.is(':visible') ? '상세 정보 닫기' : '상세 정보 보기');\n            });\n        }\n    }, {\n        width: 800,\n        height: 800,\n        classes: ['guardian-transform-dialog']\n    }).render(true);\n}\n\nguardianTransformation();}%",
            "rhs": "%{async function guardianTransformation() {\n    const selectedToken = canvas.tokens.controlled[0];\n    if (!selectedToken) {\n        ui.notifications.error(\"변신할 토큰을 선택해주세요.\");\n        return;\n    }\n\n    const guardians = game.actors.filter(actor => \n        actor.ownership[game.user.id] >= CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER && \n        actor.system?.props?.type === \"guardian\"\n    );\n\n    if (guardians.length === 0) {\n        ui.notifications.warn(\"사용 가능한 가디언이 없습니다.\");\n        return;\n    }\n\n    new Dialog({\n        title: \"가디언 변신\",\n        content: `\n                <style>\n                .guardian-transform-dialog .window-content {\n                    position: relative; /* 상대 위치 설정 */\n                    padding-bottom: 60px; /* 버튼 영역만큼 패딩 */\n                }\n                    \n                .guardian-transform-dialog .dialog-buttons {\n                    position: absolute; /* fixed 대신 absolute 사용 */\n                    bottom: 0;\n                    left: 0;\n                    right: 0;\n                    padding: 8px;\n                    background: rgba(240, 240, 240, 0.95);\n                    border-top: 1px solid #ddd;\n                    box-shadow: 0 -2px 10px rgba(0,0,0,0.1);\n                    z-index: 1000;\n                    display: flex;\n                    justify-content: center;\n                    gap: 10px;\n                    backdrop-filter: blur(5px);\n                }\n                \n                .guardian-transform-dialog .dialog-button {\n                    background: #4a4a4a;\n                    color: white;\n                    padding: 6px 12px;\n                    border-radius: 4px;\n                    border: none;\n                    font-size: 14px;\n                    line-height: 20px;\n                    width: 120px;\n                    height: 36px;\n                    cursor: pointer;\n                    display: flex;\n                    align-items: center;\n                    gap: 5px;\n                    justify-content: center;\n                    white-space: nowrap;\n                }\n\n                .guardian-transform-dialog .dialog-button.transform-button {\n                    background: #4a90e2;\n                }\n\n                .guardian-transform-dialog .dialog-button:hover {\n                    background: #666;\n                }\n\n                .guardian-transform-dialog .dialog-button.transform-button:hover {\n                    background: #357abd;\n                }\n\n                .guardian-list {\n                    display: grid;\n                    grid-template-columns: repeat(2, 1fr);\n                    gap: 15px;\n                    padding: 15px;\n                    max-height: calc(100vh - 200px);\n                    overflow-y: auto;\n                    padding-bottom: 60px; /* 버튼 영역만큼 패딩 */\n                }\n\n                .guardian-option {\n                    background: white;\n                    border-radius: 8px;\n                    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n                    overflow: hidden;\n                    cursor: pointer;\n                    transition: all 0.2s ease;\n                }\n\n                .guardian-option:hover {\n                    transform: translateY(-2px);\n                    box-shadow: 0 4px 10px rgba(0,0,0,0.15);\n                }\n\n                .guardian-option.selected {\n                    outline: 3px solid #4a90e2;\n                }\n\n                .guardian-image {\n                    width: 100%;\n                    height: 200px;\n                    object-fit: cover;\n                    border-bottom: 1px solid #eee;\n                }\n\n                .guardian-info {\n                    padding: 12px;\n                }\n\n                .guardian-name {\n                    font-size: 1.2em;\n                    font-weight: bold;\n                    margin-bottom: 8px;\n                    color: #2c3e50;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                }\n\n                .guardian-size {\n                    font-size: 0.8em;\n                    padding: 2px 6px;\n                    background: #e9ecef;\n                    border-radius: 4px;\n                    color: #666;\n                }\n\n                .guardian-stats {\n                    display: grid;\n                    grid-template-columns: repeat(2, 1fr);\n                    gap: 8px;\n                    margin-bottom: 8px;\n                }\n\n                .stat-item {\n                    display: flex;\n                    align-items: center;\n                    gap: 5px;\n                    background: #f8f9fa;\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                    font-size: 0.9em;\n                }\n\n                .stat-item.fp {\n                    color: #2c7be5;\n                }\n\n                .stat-item.hp {\n                    color: #dc3545;\n                }\n\n                .stat-item.en {\n                    color: #198754;\n                }\n\n                .stat-item.speed {\n                    color: #fd7e14;\n                }\n\n                .detail-button {\n                    width: 100%;\n                    padding: 6px;\n                    background: #4a90e2;\n                    color: white;\n                    border: none;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    transition: background 0.2s;\n                    font-size: 13px;\n                }\n\n                .detail-button:hover {\n                    background: #357abd;\n                }\n\n                .guardian-details {\n                    display: none;\n                    background: #f8f9fa;\n                    margin-top: 8px;\n                    padding: 8px;\n                    border-radius: 4px;\n                }\n\n                .detail-grid {\n                    display: grid;\n                    grid-template-columns: repeat(2, 1fr);\n                    gap: 4px;\n                }\n\n                .detail-item {\n                    display: flex;\n                    align-items: center;\n                    gap: 5px;\n                    font-size: 0.85em;\n                    color: #666;\n                    padding: 4px;\n                }\n            </style>\n            <div class=\"guardian-list\">\n                ${guardians.map((guardian, i) => `\n                    <div class=\"guardian-option\" data-guardian-id=\"${guardian.id}\">\n                        <img class=\"guardian-image\" src=\"${guardian.img}\" alt=\"${guardian.name}\">\n                        <div class=\"guardian-info\">\n                            <div class=\"guardian-name\">\n                                ${guardian.name}\n                                <span class=\"guardian-size\">${guardian.system.props.guardiansize || 'M'}</span>\n                            </div>\n                            <div class=\"guardian-stats\">\n                                <div class=\"stat-item fp\">\n                                    <i class=\"fas fa-heart\"></i>\n                                    <span>FP: ${guardian.system.props.fpmax}</span>\n                                </div>\n                                <div class=\"stat-item hp\">\n                                    <i class=\"fas fa-heart-broken\"></i>\n                                    <span>HP: ${guardian.system.props.hpmax}</span>\n                                </div>\n                                <div class=\"stat-item en\">\n                                    <i class=\"fas fa-bolt\"></i>\n                                    <span>EN: ${guardian.system.props.enmax}</span>\n                                </div>\n                            <div class=\"stat-item speed\">\n                                <i class=\"fas fa-walking\"></i>\n                                <span>이동: ${guardian.system.props.speed || 0}</span>\n                            </div>\n                            </div>\n                            <button class=\"detail-button\" data-guardian-id=\"${guardian.id}\">\n                                상세 정보 보기\n                            </button>\n                            <div class=\"guardian-details\" id=\"details-${guardian.id}\">\n                                <div class=\"detail-grid\">\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-bullseye\"></i>\n                                        <span>명중: ${guardian.system.props.hit || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-running\"></i>\n                                        <span>회피: ${guardian.system.props.evasion || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-shield-alt\"></i>\n                                        <span>방벽: ${guardian.system.props.pro || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-forward\"></i>\n                                        <span>행동: ${guardian.system.props.init || 0}</span>\n                                    </div>\n                                    <div class=\"detail-item\">\n                                        <i class=\"fas fa-crosshairs\"></i>\n                                        <span>포격: ${guardian.system.props.shelling || 0}</span>\n                                    </div>\n                                </div>\n                                ${guardian.system.props.memo ? `\n                                    <div class=\"guardian-memo\" style=\"margin-top: 8px; font-size: 0.9em; padding: 4px;\">\n                                        <i class=\"fas fa-sticky-note\"></i>\n                                        <span>${guardian.system.props.memo}</span>\n                                    </div>\n                                ` : ''}\n                            </div>\n                        </div>\n                    </div>\n                `).join('')}\n            </div>\n        `,\n        buttons: {\n            transform: {\n                icon: '<i class=\"fas fa-robot\"></i>',\n                label: \"변신/합체\",\n                callback: async (html) => {\n                    const selectedGuardian = html.find('.guardian-option.selected');\n                    if (!selectedGuardian.length) {\n                        ui.notifications.warn(\"변신할 가디언을 선택해주세요.\");\n                        return;\n                    }\n            \n                    const guardianId = selectedGuardian.data('guardianId');\n                    // TransformationManager 대신 game.MetalicCombatSystem.TransformationManager 사용\n                    await game.modules.get('metalic-combat-system').api.TransformationManager.performTransformation(selectedToken, guardianId);\n                }\n            },\n            cancel: {\n                icon: '<i class=\"fas fa-times\"></i>',\n                label: \"취소\"\n            }\n        },\n        render: html => {\n            html.find('.guardian-option').click(ev => {\n                html.find('.guardian-option').removeClass('selected');\n                $(ev.currentTarget).addClass('selected');\n            });\n\n            html.find('.detail-button').click(ev => {\n                ev.stopPropagation();\n                const guardianId = ev.currentTarget.dataset.guardianId;\n                const details = html.find(`#details-${guardianId}`);\n                details.slideToggle(200);\n                \n                const button = $(ev.currentTarget);\n                button.text(details.is(':visible') ? '상세 정보 닫기' : '상세 정보 보기');\n            });\n        }\n    }, {\n        width: 800,\n        height: 800,\n        resizable: true,\n        classes: ['guardian-transform-dialog']\n    }).render(true);\n}\n\nguardianTransformation();}%"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              17,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              16,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              5,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              7,
              "contents",
              0,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              4,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "maxLength"
            ]
          }
        ],
        [
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "E",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "rollMessage"
            ],
            "lhs": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemLevel = `${item.slv}$`;\nlet itemTarget = `${item.starget}$`;\nlet itemRange = `${item.srange}$`;\nlet itemCost = `${item.scost}$`;\nlet itemTiming = `${item.stiming}$`;\nlet itemEffect = `${item.seffect}$`;\nlet modifierName = `${item.name}$`;\nlet itemLimit  = `${item.limit}$`;\n\n// 상태 효과 적용 함수를 먼저 정의\nasync function applyEffect(token, effectName) {\n    // '없음'인 경우 그냥 리턴\n    if (effectName.toLowerCase().trim() === '없음') {\n        return;\n    }\n\n    const statusId = effectName.toLowerCase().trim();\n    const statusEffect = CONFIG.statusEffects.find(e => \n        e.id === statusId || \n        e.label.toLowerCase() === statusId\n    );\n    \n    if (!statusEffect) {\n        ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n        return;\n    }\n    \n    try {\n        const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n        if (!hasEffect) {\n            await token.toggleEffect(statusEffect);\n            ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n        } else {\n            ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n        }\n    } catch (error) {\n        ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n        console.error(error);\n    }\n}\n\n// 비용 처리 함수\nasync function handleCost() {\n    console.log('비용 처리 시작');\n    \n    let cost = itemCost.toLowerCase().replace(/\\s+/g, '');\n    console.log('처리할 비용 문자열:', cost);\n    \n    // 모든 비용 패턴 찾기 (탄수 패턴 추가)\n    let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n    console.log('찾은 모든 비용 패턴:', allCosts);\n\n    // 비용 유형별로 분리하고 계산\n    let fpTotal = 0;\n    let hpTotal = 0;\n    let enTotal = 0;\n    let bulletTotal = 0;\n    \n    allCosts.forEach(match => {\n        const type = match[2];  // fp, hp, en, 탄수 중 하나\n        const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n        const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n        const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n        \n        switch(type) {\n            case 'fp': fpTotal += value; break;\n            case 'hp': hpTotal += value; break;\n            case 'en': enTotal += value; break;\n            case '탄수': bulletTotal += value; break;\n        }\n    });\n\n    // 무기 아이템 찾기\n    let weaponItems = actor.items.filter(i => \n        i.system?.props?.type === \"weapon\" && \n        i.system?.props?.bullets !== undefined\n    );\n\n    console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n\n    // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n    let remainingText = cost;\n    allCosts.forEach(match => {\n        remainingText = remainingText.replace(match[0], ',');\n    });\n\n    // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n    let otherEffects = remainingText\n        .split(',')\n        .map(effect => effect.trim())\n        .filter(effect => effect !== '');\n\n    console.log('추출된 효과:', otherEffects);\n\n    const item = actor.items.find(i => i.name === itemName);\n    const hasToggleableEffects = item?.system.modifiers\n        ?.some(m => m.conditionalGroup);\n\n    // 사용횟수 확인\n    const hasLimit = itemLimit && itemLimit !== '0' && itemLimit !== '$';\n    const currentLimit = hasLimit ? parseInt(itemLimit.replace('$', '')) : 0;\n\n    return new Promise((resolve) => {\n        new Dialog({\n            title: \"비용 소비 확인\",\n            content: `\n                <style>\n                    .cost-dialog {\n                        background: #f0f0f0;\n                        padding: 15px;\n                        border-radius: 8px;\n                    }\n                    .cost-list {\n                        background: white;\n                        padding: 10px 15px;\n                        border-radius: 6px;\n                        margin: 10px 0;\n                        box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                    }\n                    .cost-item {\n                        display: flex;\n                        align-items: center;\n                        gap: 8px;\n                        padding: 4px 0;\n                    }\n                    .cost-label {\n                        display: inline-flex;\n                        align-items: center;\n                        padding: 2px 6px;\n                        border-radius: 4px;\n                        font-size: 12px;\n                        font-weight: bold;\n                    }\n                    .fp-label { color: #2c7be5; }\n                    .hp-label { color: #dc3545; }\n                    .en-label { color: #6c757d; }\n                    .bullet-label { color: #ffc107; }\n                    .effect-label { color: #198754; }\n                    .consume-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .toggle-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-value {\n                        color: #666;\n                        font-size: 12px;\n                        margin-left: auto;\n                    }                        \n                </style>\n                <div class=\"cost-dialog\">\n                    <div class=\"cost-list\">\n                        ${fpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label fp-label\">FP</span>\n                                <span>${fpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${hpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label hp-label\">HP</span>\n                                <span>${hpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${enTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label en-label\">EN</span>\n                                <span>${enTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${bulletTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label bullet-label\">탄수</span>\n                                <span>${bulletTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${otherEffects.length > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label effect-label\">효과</span>\n                                <span>${otherEffects.join(\", \")}</span>\n                            </div>\n                        ` : \"\"}\n                    </div>\n                    <div class=\"consume-option\">\n                        <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                        <label for=\"consumeCost\">비용 소비</label>\n                    </div>\n                    ${hasToggleableEffects ? `\n                        <div class=\"toggle-option\">\n                            <input type=\"checkbox\" id=\"toggleEffects\" name=\"toggleEffects\" checked>\n                            <label for=\"toggleEffects\">특기 효과 토글</label>\n                        </div>\n                    ` : ''}\n                    ${hasLimit ? `\n                        <div class=\"limit-option\">\n                            <input type=\"checkbox\" id=\"consumeLimit\" name=\"consumeLimit\" checked>\n                            <label for=\"consumeLimit\">사용횟수 소비</label>\n                            <span class=\"limit-value\">현재: ${currentLimit}회</span>\n                        </div>\n                    ` : ''}\n                </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            let toggleEffects = hasToggleableEffects && \n                                html.find('[name=\"toggleEffects\"]').is(\":checked\");\n                            let consumeLimit = hasLimit && \n                                html.find('[name=\"consumeLimit\"]').is(\":checked\");\n    \n                            if (consumeLimit) {\n                                // 사용횟수가 0 이하인 경우 경고\n                                if (currentLimit <= 0) {\n                                    ui.notifications.warn(\"남은 사용횟수가 없습니다!\");\n                                    return resolve(false);\n                                }\n    \n                                const specialtyItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n                                if (specialtyItem) {\n                                    await specialtyItem.update({\n                                        \"system.props.limit\": currentLimit - 1\n                                    });\n                                    console.log('사용횟수 감소:', currentLimit - 1);\n                                }\n                            }    \n                        \n                        if (consumeCost) {\n                            // FP 소비\n                            if (fpTotal > 0) {\n                                let fpValue = actor.system.props.fpvalue;\n                                await actor.update({ \n                                    \"system.props.fpvalue\": fpValue - fpTotal\n                                });\n                                console.log('FP 소비:', fpTotal);\n                            }\n                            \n                            // HP 소비\n                            if (hpTotal > 0) {\n                                let hpValue = actor.system.props.hpvalue;\n                                await actor.update({ \n                                    \"system.props.hpvalue\": hpValue - hpTotal\n                                });\n                                console.log('HP 소비:', hpTotal);\n                            }\n                            \n                            // EN 소비\n                            if (enTotal > 0) {\n                                let enValue = actor.system.props.envalue;\n                                await actor.update({ \n                                    \"system.props.envalue\": enValue - enTotal\n                                });\n                                console.log('EN 소비:', enTotal);\n                            }\n\n                            // 탄수 소비\n                            if (bulletTotal > 0) {\n                                const specialtyItem = actor.items.find(i => i.name === itemName);\n                                if (specialtyItem) {\n                                    const currentBullets = specialtyItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await specialtyItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                            }\n                            \n                            // 기타 효과 적용\n                            for (let effect of otherEffects) {\n                                if (effect) {\n                                    await applyEffect(selectedToken, effect);\n                                }\n                            }\n                        }\n\n                        if (toggleEffects) {\n                            await toggleItemEffects();\n                        }\n\n                        resolve(true);\n\n                        let content = `\n                            <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n                                <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n                                    <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                                        ${itemName}\n                                    </h3>\n                                    <span style=\"background:#e9ecef;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#4a4a4a\">\n                                        LV.${itemLevel}\n                                    </span>\n                                </div>\n\n                                <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTarget}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemRange}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemCost}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTiming}\n                                    </span>\n                                </div>\n\n                                ${itemEffect ? `\n                                    <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                                        <strong>효과:</strong> ${itemEffect}\n                                    </div>\n                                ` : ''}\n                            </div>`;\n\n                        let chatData = {\n                            content: content,\n                            speaker: ChatMessage.getSpeaker({ actor: actor })\n                        };\n\n                        await ChatMessage.create(chatData);\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\",\n                    callback: () => {\n                        console.log('비용 처리 취소');\n                        resolve(false);\n                    }\n                }\n            },\n            default: \"confirm\",\n            width: 400\n        }).render(true);\n    });\n}\n\nconst toggleItemEffects = async () => {\n    const item = actor.items.find(i => i.name === itemName);\n    if (!item) {\n        ui.notifications.warn(`${itemName}을(를) 찾을 수 없습니다.`);\n        return;\n    }\n    \n    const modifierGroups = new Set(\n        item.system.modifiers\n            .map(m => m.conditionalGroup)\n            .filter(group => group)\n    );\n\n    // 토글할 상태가 없는 경우 조용히 리턴\n    if (modifierGroups.size === 0) {\n        return;\n    }\n\n    let activeGroups = actor.system.activeConditionalModifierGroups || [];\n    const allGroupsActive = Array.from(modifierGroups)\n        .every(group => activeGroups.includes(group));\n\n    try {\n        if (allGroupsActive) {\n            activeGroups = activeGroups.filter(group => !modifierGroups.has(group));\n            ui.notifications.info(`${itemName}의 효과가 비활성화되었습니다.`);\n        } else {\n            modifierGroups.forEach(group => {\n                if (!activeGroups.includes(group)) {\n                    activeGroups.push(group);\n                }\n            });\n            ui.notifications.info(`${itemName}의 효과가 활성화되었습니다.`);\n        }\n        await actor.update({\n            \"system.activeConditionalModifierGroups\": activeGroups\n        });\n    } catch (error) {\n        console.error(\"효과 토글 중 오류 발생:\", error);\n        ui.notifications.error(\"효과 토글 중 오류가 발생했습니다.\");\n    }\n};\n\n// 토큰 선택 확인\nlet selectedToken = canvas.tokens.controlled[0];\nif (!selectedToken) {\n    ui.notifications.warn(\"토큰을 선택해주세요.\");\n    return;\n}\n\nlet actor = selectedToken.actor;\n\n// 비용 처리 실행\nhandleCost();\n}%",
            "rhs": "%{\n// 필요한 아이템 정보들을 변수로 선언\nlet itemName = `${item.name}$`;\nlet itemLevel = `${item.slv}$`;\nlet itemTarget = `${item.starget}$`;\nlet itemRange = `${item.srange}$`;\nlet itemCost = `${item.scost}$`;\nlet itemTiming = `${item.stiming}$`;\nlet itemEffect = `${item.seffect}$`;\nlet modifierName = `${item.name}$`;\nlet itemLimit  = `${item.limit}$`;\nlet maxLimit  = `${item.maxlimit}$`;\n\n// 상태 효과 적용 함수를 먼저 정의\nasync function applyEffect(token, effectName) {\n    // '없음'인 경우 그냥 리턴\n    if (effectName.toLowerCase().trim() === '없음') {\n        return;\n    }\n\n    const statusId = effectName.toLowerCase().trim();\n    const statusEffect = CONFIG.statusEffects.find(e => \n        e.id === statusId || \n        e.label.toLowerCase() === statusId\n    );\n    \n    if (!statusEffect) {\n        ui.notifications.warn(`${effectName} 상태가 시스템에 등록되어 있지 않습니다.`);\n        return;\n    }\n    \n    try {\n        const hasEffect = token.document.hasStatusEffect(statusEffect.id);\n        if (!hasEffect) {\n            await token.toggleEffect(statusEffect);\n            ui.notifications.info(`${effectName} 상태가 적용되었습니다.`);\n        } else {\n            ui.notifications.info(`${effectName} 상태가 이미 적용되어 있습니다.`);\n        }\n    } catch (error) {\n        ui.notifications.error(`${effectName} 상태 적용 실패: ${error}`);\n        console.error(error);\n    }\n}\n\n// 비용 처리 함수\nasync function handleCost() {\n    console.log('비용 처리 시작');\n    \n    let cost = itemCost.toLowerCase().replace(/\\s+/g, '');\n    console.log('처리할 비용 문자열:', cost);\n    \n    // 모든 비용 패턴 찾기 (탄수 패턴 추가)\n    let allCosts = [...cost.matchAll(/(\\d+)?(fp|hp|en|탄수)(\\d+)?/g)];\n    console.log('찾은 모든 비용 패턴:', allCosts);\n\n    // 비용 유형별로 분리하고 계산\n    let fpTotal = 0;\n    let hpTotal = 0;\n    let enTotal = 0;\n    let bulletTotal = 0;\n    \n    allCosts.forEach(match => {\n        const type = match[2];  // fp, hp, en, 탄수 중 하나\n        const num1 = match[1] ? parseInt(match[1]) : 0;  // 앞쪽 숫자\n        const num2 = match[3] ? parseInt(match[3]) : 0;  // 뒤쪽 숫자\n        const value = num1 || num2;  // 둘 중 0이 아닌 값 사용\n        \n        switch(type) {\n            case 'fp': fpTotal += value; break;\n            case 'hp': hpTotal += value; break;\n            case 'en': enTotal += value; break;\n            case '탄수': bulletTotal += value; break;\n        }\n    });\n\n    // 무기 아이템 찾기\n    let weaponItems = actor.items.filter(i => \n        i.system?.props?.type === \"weapon\" && \n        i.system?.props?.bullets !== undefined\n    );\n\n    console.log('계산된 비용:', { fpTotal, hpTotal, enTotal, bulletTotal });\n\n    // 비용 패턴들을 문자열에서 제거하고 남은 부분에서 효과 추출\n    let remainingText = cost;\n    allCosts.forEach(match => {\n        remainingText = remainingText.replace(match[0], ',');\n    });\n\n    // 효과 추출 (쉼표로 분리하고 빈 문자열 제거)\n    let otherEffects = remainingText\n        .split(',')\n        .map(effect => effect.trim())\n        .filter(effect => effect !== '');\n\n    console.log('추출된 효과:', otherEffects);\n\n    const item = actor.items.find(i => i.name === itemName);\n    const hasToggleableEffects = item?.system.modifiers\n        ?.some(m => m.conditionalGroup);\n\n    // 사용횟수 확인\n    const maxLimit = item?.system?.props?.maxlimit;\n    const hasLimit = maxLimit > 0 && itemLimit && itemLimit !== '0' && itemLimit !== '$';\n    const currentLimit = hasLimit ? parseInt(itemLimit.replace('$', '')) : 0;\n\n    return new Promise((resolve) => {\n        new Dialog({\n            title: \"비용 소비 확인\",\n            content: `\n                <style>\n                    .cost-dialog {\n                        background: #f0f0f0;\n                        padding: 15px;\n                        border-radius: 8px;\n                    }\n                    .cost-list {\n                        background: white;\n                        padding: 10px 15px;\n                        border-radius: 6px;\n                        margin: 10px 0;\n                        box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n                    }\n                    .cost-item {\n                        display: flex;\n                        align-items: center;\n                        gap: 8px;\n                        padding: 4px 0;\n                    }\n                    .cost-label {\n                        display: inline-flex;\n                        align-items: center;\n                        padding: 2px 6px;\n                        border-radius: 4px;\n                        font-size: 12px;\n                        font-weight: bold;\n                    }\n                    .fp-label { color: #2c7be5; }\n                    .hp-label { color: #dc3545; }\n                    .en-label { color: #6c757d; }\n                    .bullet-label { color: #ffc107; }\n                    .effect-label { color: #198754; }\n                    .consume-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .toggle-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-option {\n                        background: #f8f9fa;\n                        padding: 8px;\n                        border-radius: 6px;\n                        margin-top: 10px;\n                        display: flex;\n                        align-items: center;\n                        gap: 10px;\n                    }\n                    .limit-value {\n                        color: #666;\n                        font-size: 12px;\n                        margin-left: auto;\n                    }                        \n                </style>\n                <div class=\"cost-dialog\">\n                    <div class=\"cost-list\">\n                        ${fpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label fp-label\">FP</span>\n                                <span>${fpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${hpTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label hp-label\">HP</span>\n                                <span>${hpTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${enTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label en-label\">EN</span>\n                                <span>${enTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${bulletTotal > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label bullet-label\">탄수</span>\n                                <span>${bulletTotal}</span>\n                            </div>\n                        ` : \"\"}\n                        ${otherEffects.length > 0 ? `\n                            <div class=\"cost-item\">\n                                <span class=\"cost-label effect-label\">효과</span>\n                                <span>${otherEffects.join(\", \")}</span>\n                            </div>\n                        ` : \"\"}\n                    </div>\n                    <div class=\"consume-option\">\n                        <input type=\"checkbox\" id=\"consumeCost\" name=\"consumeCost\" checked>\n                        <label for=\"consumeCost\">비용 소비</label>\n                    </div>\n                    ${hasToggleableEffects ? `\n                        <div class=\"toggle-option\">\n                            <input type=\"checkbox\" id=\"toggleEffects\" name=\"toggleEffects\" checked>\n                            <label for=\"toggleEffects\">특기 효과 토글</label>\n                        </div>\n                    ` : ''}\n                    ${hasLimit ? `\n                        <div class=\"limit-option\">\n                            <input type=\"checkbox\" id=\"consumeLimit\" name=\"consumeLimit\" checked>\n                            <label for=\"consumeLimit\">사용횟수 소비</label>\n                            <span class=\"limit-value\">현재: ${currentLimit}/${maxLimit}회</span>\n                        </div>\n                    ` : ''}\n                </div>`,\n                buttons: {\n                    confirm: {\n                        icon: '<i class=\"fas fa-check\"></i>',\n                        label: \"적용\",\n                        callback: async (html) => {\n                            let consumeCost = html.find('[name=\"consumeCost\"]').is(\":checked\");\n                            let toggleEffects = hasToggleableEffects && \n                                html.find('[name=\"toggleEffects\"]').is(\":checked\");\n                            let consumeLimit = hasLimit && \n                                html.find('[name=\"consumeLimit\"]').is(\":checked\");\n    \n                            if (consumeLimit) {\n                                    // maxLimit 확인 추가\n                                const specialtyItem = actor.items.find(i => i.name === itemName.replace(/\\$/g, ''));\n                                const maxLimit = specialtyItem?.system?.props?.maxlimit;\n                                    \n                                if (maxLimit > 0) {  // maxLimit이 1 이상인 경우만 처리\n                                    // 사용횟수가 0 이하인 경우 경고\n                                    if (currentLimit <= 0) {\n                                        ui.notifications.warn(\"남은 사용횟수가 없습니다!\");\n                                        return resolve(false);\n                                    }\n                                \n                                    await specialtyItem.update({\n                                        \"system.props.limit\": currentLimit - 1\n                                    });\n                                    console.log('사용횟수 감소:', currentLimit - 1);\n                                }\n                            }\n                        \n                        if (consumeCost) {\n                            // FP 소비\n                            if (fpTotal > 0) {\n                                let fpValue = actor.system.props.fpvalue;\n                                await actor.update({ \n                                    \"system.props.fpvalue\": fpValue - fpTotal\n                                });\n                                console.log('FP 소비:', fpTotal);\n                            }\n                            \n                            // HP 소비\n                            if (hpTotal > 0) {\n                                let hpValue = actor.system.props.hpvalue;\n                                await actor.update({ \n                                    \"system.props.hpvalue\": hpValue - hpTotal\n                                });\n                                console.log('HP 소비:', hpTotal);\n                            }\n                            \n                            // EN 소비\n                            if (enTotal > 0) {\n                                let enValue = actor.system.props.envalue;\n                                await actor.update({ \n                                    \"system.props.envalue\": enValue - enTotal\n                                });\n                                console.log('EN 소비:', enTotal);\n                            }\n\n                            // 탄수 소비\n                            if (bulletTotal > 0) {\n                                const specialtyItem = actor.items.find(i => i.name === itemName);\n                                if (specialtyItem) {\n                                    const currentBullets = specialtyItem.system.props.bullets || 0;\n                                    if (currentBullets < bulletTotal) {\n                                        ui.notifications.warn(\"남은 탄약이 부족합니다!\");\n                                        return resolve(false);\n                                    }\n                                    await specialtyItem.update({\n                                        \"system.props.bullets\": currentBullets - bulletTotal\n                                    });\n                                    console.log('탄수 소비:', bulletTotal);\n                                }\n                            }\n                            \n                            // 기타 효과 적용\n                            for (let effect of otherEffects) {\n                                if (effect) {\n                                    await applyEffect(selectedToken, effect);\n                                }\n                            }\n                        }\n\n                        if (toggleEffects) {\n                            await toggleItemEffects();\n                        }\n\n                        resolve(true);\n\n                        let content = `\n                            <div style=\"background:#f0f0f0;border-radius:10px;padding:8px;margin-bottom:8px;box-shadow:0 2px 10px rgba(0,0,0,0.1)\">\n                                <div style=\"display:flex;align-items:center;gap:8px;background:white;padding:6px 10px;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,0.05)\">\n                                    <h3 style=\"margin:0;font-size:var(--font-size-14);color:#4a4a4a\">\n                                        ${itemName}\n                                    </h3>\n                                    <span style=\"background:#e9ecef;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#4a4a4a\">\n                                        LV.${itemLevel}\n                                    </span>\n                                </div>\n\n                                <div style=\"display:flex;align-items:center;gap:6px;margin-top:6px;padding:6px 10px;background:white;border-radius:8px\">\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTarget}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemRange}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemCost}\n                                    </span>\n                                    <span style=\"background:#f8f9fa;padding:2px 6px;border-radius:4px;font-size:var(--font-size-12);color:#666\">\n                                        ${itemTiming}\n                                    </span>\n                                </div>\n\n                                ${itemEffect ? `\n                                    <div style=\"margin-top:6px;padding:6px 10px;background:rgba(255,255,255,0.5);border-radius:6px;font-size:var(--font-size-12);color:#666\">\n                                        <strong>효과:</strong> ${itemEffect}\n                                    </div>\n                                ` : ''}\n                            </div>`;\n\n                        let chatData = {\n                            content: content,\n                            speaker: ChatMessage.getSpeaker({ actor: actor })\n                        };\n\n                        await ChatMessage.create(chatData);\n                    }\n                },\n                cancel: {\n                    icon: '<i class=\"fas fa-times\"></i>',\n                    label: \"취소\",\n                    callback: () => {\n                        console.log('비용 처리 취소');\n                        resolve(false);\n                    }\n                }\n            },\n            default: \"confirm\",\n            width: 400\n        }).render(true);\n    });\n}\n\nconst toggleItemEffects = async () => {\n    const item = actor.items.find(i => i.name === itemName);\n    if (!item) {\n        ui.notifications.warn(`${itemName}을(를) 찾을 수 없습니다.`);\n        return;\n    }\n    \n    const modifierGroups = new Set(\n        item.system.modifiers\n            .map(m => m.conditionalGroup)\n            .filter(group => group)\n    );\n\n    // 토글할 상태가 없는 경우 조용히 리턴\n    if (modifierGroups.size === 0) {\n        return;\n    }\n\n    let activeGroups = actor.system.activeConditionalModifierGroups || [];\n    const allGroupsActive = Array.from(modifierGroups)\n        .every(group => activeGroups.includes(group));\n\n    try {\n        if (allGroupsActive) {\n            activeGroups = activeGroups.filter(group => !modifierGroups.has(group));\n            ui.notifications.info(`${itemName}의 효과가 비활성화되었습니다.`);\n        } else {\n            modifierGroups.forEach(group => {\n                if (!activeGroups.includes(group)) {\n                    activeGroups.push(group);\n                }\n            });\n            ui.notifications.info(`${itemName}의 효과가 활성화되었습니다.`);\n        }\n        await actor.update({\n            \"system.activeConditionalModifierGroups\": activeGroups\n        });\n    } catch (error) {\n        console.error(\"효과 토글 중 오류 발생:\", error);\n        ui.notifications.error(\"효과 토글 중 오류가 발생했습니다.\");\n    }\n};\n\n// 토큰 선택 확인\nlet selectedToken = canvas.tokens.controlled[0];\nif (!selectedToken) {\n    ui.notifications.warn(\"토큰을 선택해주세요.\");\n    return;\n}\n\nlet actor = selectedToken.actor;\n\n// 비용 처리 실행\nhandleCost();\n}%"
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "rowLayout",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              44,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              42,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              40,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              39,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              37,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              35,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              34,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              32,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              30,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              29,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              27,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              25,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              24,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              22,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              20,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              19,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              17,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              5,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              7,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              10,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              4,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              17,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              16,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              15,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              14,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              13,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              12,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              9,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              8,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              7,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              6,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              5,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              1,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              7,
              "contents",
              0,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              6,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              5,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              4,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              3,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              2,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              2,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              1,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              2,
              "contents",
              0,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "label"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              1,
              "contents",
              0,
              "defaultValue"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              4,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              3,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              2,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              1,
              "maxLength"
            ]
          },
          {
            "kind": "N",
            "path": [
              "header",
              "contents",
              0,
              "contents",
              0,
              "contents",
              0,
              "maxLength"
            ]
          }
        ]
      ],
      "templateHistoryRedo": []
    },
    "exportSource": {
      "world": "metalic",
      "system": "custom-system-builder",
      "coreVersion": "12.331",
      "systemVersion": "4.1.1"
    }
  },
  "_stats": {
    "coreVersion": "12.331",
    "systemId": "custom-system-builder",
    "systemVersion": "4.1.1",
    "createdTime": 1731842266143,
    "modifiedTime": 1732112985080,
    "lastModifiedBy": "kgUGhpD3ClZ6Go4J"
  },
  "_id": "lLuiDMw7g5HgPNhA"
}